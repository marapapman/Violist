public class a2z.Mobile.DevConnections.Classes.BitmapGC extends java.lang.Object
{
    private java.lang.String TAG;
    private java.util.HashMap bitmapsWithIntegerID;
    private android.content.Context context;
    private int genID;
    private int lastID;
    private java.util.HashMap names;

    public void <init>(android.content.Context)
    {
        a2z.Mobile.DevConnections.Classes.BitmapGC $r0;
        android.content.Context $r1;
        java.util.HashMap $r2;
        java.lang.Class $r3;
        java.lang.String $r4;

        $r0 := @this: a2z.Mobile.DevConnections.Classes.BitmapGC;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: int genID> = 0;

        $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: android.content.Context context> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: java.util.HashMap bitmapsWithIntegerID> = $r2;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: java.util.HashMap names> = $r2;

        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: java.lang.String TAG> = $r4;

        $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: int lastID> = 0;

        $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: int genID> = 0;

        return;
    }

    private void err(java.lang.String)
    {
        a2z.Mobile.DevConnections.Classes.BitmapGC $r0;
        java.lang.String $r1, $r2;

        $r0 := @this: a2z.Mobile.DevConnections.Classes.BitmapGC;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r2, $r1);

        return;
    }

    private int generateID()
    {
        a2z.Mobile.DevConnections.Classes.BitmapGC $r0;
        int $i0;

        $r0 := @this: a2z.Mobile.DevConnections.Classes.BitmapGC;

        $i0 = $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: int genID>;

        $i0 = $i0 + 1;

        $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: int genID> = $i0;

        $i0 = $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: int genID>;

        $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: int lastID> = $i0;

        $i0 = $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: int genID>;

        return $i0;
    }

    private void log(java.lang.String)
    {
        a2z.Mobile.DevConnections.Classes.BitmapGC $r0;
        java.lang.String $r1, $r2;

        $r0 := @this: a2z.Mobile.DevConnections.Classes.BitmapGC;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: java.lang.String TAG>;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r2, $r1);

        return;
    }

    public void gc()
    {
        a2z.Mobile.DevConnections.Classes.BitmapGC $r0;
        java.util.HashMap $r1;
        java.util.Set $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Runtime $r4;
        java.lang.Object $r5;
        java.util.Map$Entry $r6;
        android.graphics.Bitmap $r7;

        $r0 := @this: a2z.Mobile.DevConnections.Classes.BitmapGC;

        $r1 = $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: java.util.HashMap bitmapsWithIntegerID>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        $r1 = $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: java.util.HashMap bitmapsWithIntegerID>;

        virtualinvoke $r1.<java.util.HashMap: void clear()>();

        $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: java.util.HashMap bitmapsWithIntegerID> = null;

        $r1 = $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: java.util.HashMap names>;

        virtualinvoke $r1.<java.util.HashMap: void clear()>();

        $r4 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r4.<java.lang.Runtime: void gc()>();

        return;

     label2:
        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.util.Map$Entry) $r5;

        $r5 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r7 = (android.graphics.Bitmap) $r5;

        virtualinvoke $r7.<android.graphics.Bitmap: void recycle()>();

        goto label1;
    }

    public android.graphics.Bitmap getBitmapWhichNameIs(java.lang.String)
    {
        a2z.Mobile.DevConnections.Classes.BitmapGC $r0;
        java.lang.String $r1;
        java.util.HashMap $r2, $r3;
        boolean $z0;
        java.lang.Object $r4;
        android.graphics.Bitmap $r5;

        $r0 := @this: a2z.Mobile.DevConnections.Classes.BitmapGC;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: java.util.HashMap names>;

        $z0 = virtualinvoke $r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r3 = $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: java.util.HashMap bitmapsWithIntegerID>;

        $r2 = $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: java.util.HashMap names>;

        $r4 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r4);

        $r5 = (android.graphics.Bitmap) $r4;

        return $r5;

     label1:
        return null;
    }

    public android.graphics.Bitmap getBitmapWithID(int)
    {
        a2z.Mobile.DevConnections.Classes.BitmapGC $r0;
        int $i0;
        java.util.HashMap $r1;
        java.lang.Integer $r2;
        boolean $z0;
        java.lang.Object $r3;
        android.graphics.Bitmap $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;

        $r0 := @this: a2z.Mobile.DevConnections.Classes.BitmapGC;

        $i0 := @parameter0: int;

        $r1 = $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: java.util.HashMap bitmapsWithIntegerID>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $z0 = virtualinvoke $r1.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r1 = $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: java.util.HashMap bitmapsWithIntegerID>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r4 = (android.graphics.Bitmap) $r3;

        return $r4;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Bitmap with ID = ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" doesn\'t exist in this container");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: void err(java.lang.String)>($r6);

        return null;
    }

    public int getLastID()
    {
        a2z.Mobile.DevConnections.Classes.BitmapGC $r0;
        int i0;

        $r0 := @this: a2z.Mobile.DevConnections.Classes.BitmapGC;

        i0 = $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: int lastID>;

        return i0;
    }

    public void removeAt(int)
    {
        a2z.Mobile.DevConnections.Classes.BitmapGC $r0;
        int $i0, $i1;
        java.util.HashMap $r1;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        android.graphics.Bitmap $r4;
        java.util.Set $r5;
        java.util.Iterator $r6;
        boolean $z0;
        java.util.Map$Entry $r7;

        $r0 := @this: a2z.Mobile.DevConnections.Classes.BitmapGC;

        $i0 := @parameter0: int;

        $r1 = $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: java.util.HashMap bitmapsWithIntegerID>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r4 = (android.graphics.Bitmap) $r3;

        virtualinvoke $r4.<android.graphics.Bitmap: void recycle()>();

        $r1 = $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: java.util.HashMap bitmapsWithIntegerID>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r2);

        $r1 = $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: java.util.HashMap names>;

        $r5 = virtualinvoke $r1.<java.util.HashMap: java.util.Set entrySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        return;

     label2:
        $r3 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.util.Map$Entry) $r3;

        $r3 = interfaceinvoke $r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r2 = (java.lang.Integer) $r3;

        $i1 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        if $i1 != $i0 goto label1;

        $r1 = $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: java.util.HashMap names>;

        $r3 = interfaceinvoke $r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r3);

        return;
    }

    public void setNameForLastAddedBitmap(java.lang.String)
    {
        a2z.Mobile.DevConnections.Classes.BitmapGC $r0;
        java.lang.String $r1;
        java.util.HashMap $r2;
        int $i0;
        boolean $z0;
        java.lang.Integer $r3;

        $r0 := @this: a2z.Mobile.DevConnections.Classes.BitmapGC;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: java.util.HashMap names>;

        $z0 = virtualinvoke $r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        $r2 = $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: java.util.HashMap names>;

        $i0 = $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: int lastID>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r3);

        return;

     label1:
        return;
    }

    public android.graphics.Bitmap takeOverAsset(java.lang.String)
    {
        a2z.Mobile.DevConnections.Classes.BitmapGC $r0;
        java.lang.String $r1;
        java.io.IOException $r2;
        android.content.Context $r3;
        android.content.res.AssetManager $r4;
        java.io.InputStream $r5;
        int $i0;
        java.util.HashMap $r6;
        java.lang.Integer $r7;
        boolean $z0;
        android.graphics.Bitmap $r8;
        java.lang.Object $r9;
        java.lang.StringBuilder $r10;

        $r0 := @this: a2z.Mobile.DevConnections.Classes.BitmapGC;

        $r1 := @parameter0: java.lang.String;

        $r3 = $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: android.content.Context context>;

     label1:
        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.AssetManager getAssets()>();

        $r5 = virtualinvoke $r4.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>($r1);

        $i0 = specialinvoke $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: int generateID()>();

        $r6 = $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: java.util.HashMap bitmapsWithIntegerID>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $z0 = virtualinvoke $r6.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r7);

     label2:
        if $z0 != 0 goto label4;

     label3:
        $r6 = $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: java.util.HashMap bitmapsWithIntegerID>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r8 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>($r5);

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r8);

     label4:
        $r6 = $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: java.util.HashMap bitmapsWithIntegerID>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r9 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r7);

     label5:
        $r8 = (android.graphics.Bitmap) $r9;

        return $r8;

     label6:
        $r2 := @caughtexception;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("Can\'t open this file: ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" which may not exist in assets");

        $r1 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: void err(java.lang.String)>($r1);

        return null;

        catch java.io.IOException from label1 to label2 with label6;
        catch java.io.IOException from label3 to label5 with label6;
    }

    public android.graphics.Bitmap takeOverBitmap(android.graphics.Bitmap)
    {
        a2z.Mobile.DevConnections.Classes.BitmapGC $r0;
        android.graphics.Bitmap $r1;
        int $i0;
        java.util.HashMap $r2;
        java.lang.Integer $r3;
        boolean $z0;
        java.lang.Object $r4;

        $r0 := @this: a2z.Mobile.DevConnections.Classes.BitmapGC;

        $r1 := @parameter0: android.graphics.Bitmap;

        if $r1 != null goto label1;

        specialinvoke $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: void log(java.lang.String)>("Bitmap is null - I don\'t add such bitmaps");

        return null;

     label1:
        $r2 = $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: java.util.HashMap bitmapsWithIntegerID>;

        $i0 = specialinvoke $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: int generateID()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $z0 = virtualinvoke $r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r3);

        if $z0 != 0 goto label2;

        $r2 = $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: java.util.HashMap bitmapsWithIntegerID>;

        $i0 = $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: int lastID>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r1);

     label2:
        $r2 = $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: java.util.HashMap bitmapsWithIntegerID>;

        $i0 = $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: int lastID>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r4 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        $r1 = (android.graphics.Bitmap) $r4;

        return $r1;
    }

    public android.graphics.Bitmap takeOverBitmap(android.graphics.Bitmap, int)
    {
        a2z.Mobile.DevConnections.Classes.BitmapGC $r0;
        android.graphics.Bitmap $r1;
        int $i0;
        java.lang.Integer $r2;
        java.util.HashMap $r3;
        boolean $z0;
        java.lang.Object $r4;

        $r0 := @this: a2z.Mobile.DevConnections.Classes.BitmapGC;

        $r1 := @parameter0: android.graphics.Bitmap;

        $i0 := @parameter1: int;

        if $r1 != null goto label1;

        specialinvoke $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: void log(java.lang.String)>("Bitmap is null - I don\'t add such bitmaps");

        return null;

     label1:
        $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: int lastID> = $i0;

        $r3 = $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: java.util.HashMap bitmapsWithIntegerID>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $z0 = virtualinvoke $r3.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r2);

        if $z0 != 0 goto label2;

        $r3 = $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: java.util.HashMap bitmapsWithIntegerID>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r1);

     label2:
        $r3 = $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: java.util.HashMap bitmapsWithIntegerID>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r1 = (android.graphics.Bitmap) $r4;

        return $r1;
    }

    public android.graphics.Bitmap takeOverDrawable(int)
    {
        a2z.Mobile.DevConnections.Classes.BitmapGC $r0;
        int $i0, $i1;
        android.content.Context $r1;
        java.util.HashMap $r2;
        java.lang.Integer $r3;
        boolean $z0;
        android.content.res.Resources $r4;
        android.graphics.Bitmap $r5;
        java.lang.Object $r6;

        $r0 := @this: a2z.Mobile.DevConnections.Classes.BitmapGC;

        $i0 := @parameter0: int;

        $i1 = specialinvoke $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: int generateID()>();

        $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: int lastID> = $i1;

        $r2 = $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: java.util.HashMap bitmapsWithIntegerID>;

        $i1 = $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: int lastID>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $z0 = virtualinvoke $r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $r2 = $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: java.util.HashMap bitmapsWithIntegerID>;

        $i1 = $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: int lastID>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r1 = $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: android.content.Context context>;

        $r4 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r5 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>($r4, $i0);

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r5);

     label1:
        $r2 = $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: java.util.HashMap bitmapsWithIntegerID>;

        $i1 = $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: int lastID>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r6 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        $r5 = (android.graphics.Bitmap) $r6;

        return $r5;
    }

    public android.graphics.Bitmap takeOverOverlayBitmap(android.graphics.Bitmap, android.graphics.Bitmap)
    {
        a2z.Mobile.DevConnections.Classes.BitmapGC $r0;
        android.graphics.Bitmap $r1, $r2, $r7;
        android.graphics.Canvas $r3;
        java.util.HashMap $r4;
        int $i0, $i1;
        java.lang.Integer $r5;
        android.graphics.Bitmap$Config $r6;
        java.lang.Object $r8;
        android.graphics.Matrix $r9;

        $r0 := @this: a2z.Mobile.DevConnections.Classes.BitmapGC;

        $r1 := @parameter0: android.graphics.Bitmap;

        $r2 := @parameter1: android.graphics.Bitmap;

        $r4 = $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: java.util.HashMap bitmapsWithIntegerID>;

        $i0 = virtualinvoke $r4.<java.util.HashMap: int size()>();

        $i0 = $i0 + 1;

        $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: int lastID> = $i0;

        $r4 = $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: java.util.HashMap bitmapsWithIntegerID>;

        $i0 = $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: int lastID>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $i0 = virtualinvoke $r1.<android.graphics.Bitmap: int getWidth()>();

        $i1 = virtualinvoke $r1.<android.graphics.Bitmap: int getHeight()>();

        $r6 = virtualinvoke $r1.<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>();

        $r7 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i0, $i1, $r6);

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r7);

        $r3 = new android.graphics.Canvas;

        $r4 = $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: java.util.HashMap bitmapsWithIntegerID>;

        $i1 = $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: int lastID>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r8 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r5);

        $r7 = (android.graphics.Bitmap) $r8;

        specialinvoke $r3.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r7);

        $r9 = new android.graphics.Matrix;

        specialinvoke $r9.<android.graphics.Matrix: void <init>()>();

        virtualinvoke $r3.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Matrix,android.graphics.Paint)>($r1, $r9, null);

        $r9 = new android.graphics.Matrix;

        specialinvoke $r9.<android.graphics.Matrix: void <init>()>();

        virtualinvoke $r3.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Matrix,android.graphics.Paint)>($r2, $r9, null);

        $r4 = $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: java.util.HashMap bitmapsWithIntegerID>;

        $i1 = $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: int lastID>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r8 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r5);

        $r7 = (android.graphics.Bitmap) $r8;

        return $r7;
    }

    public android.graphics.Bitmap takeOverResize(android.graphics.Bitmap, int, int)
    {
        a2z.Mobile.DevConnections.Classes.BitmapGC $r0;
        android.graphics.Bitmap $r1;
        int $i0, $i1, $i2;
        android.graphics.Matrix $r2;
        float $f0, $f1, $f2;
        java.util.HashMap $r3;
        java.lang.Integer $r4;
        java.lang.Object $r5;

        $r0 := @this: a2z.Mobile.DevConnections.Classes.BitmapGC;

        $r1 := @parameter0: android.graphics.Bitmap;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        if $r1 != null goto label1;

        return null;

     label1:
        $f1 = (float) $i0;

        $i0 = virtualinvoke $r1.<android.graphics.Bitmap: int getWidth()>();

        $f0 = (float) $i0;

        $f1 = $f1 / $f0;

        $f0 = (float) $i1;

        $i1 = virtualinvoke $r1.<android.graphics.Bitmap: int getHeight()>();

        $f2 = (float) $i1;

        $f0 = $f0 / $f2;

        $r2 = new android.graphics.Matrix;

        specialinvoke $r2.<android.graphics.Matrix: void <init>()>();

        virtualinvoke $r2.<android.graphics.Matrix: boolean postScale(float,float)>($f1, $f0);

        $i1 = specialinvoke $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: int generateID()>();

        $r3 = $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: java.util.HashMap bitmapsWithIntegerID>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $i0 = virtualinvoke $r1.<android.graphics.Bitmap: int getWidth()>();

        $i2 = virtualinvoke $r1.<android.graphics.Bitmap: int getHeight()>();

        $r1 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>($r1, 0, 0, $i0, $i2, $r2, 1);

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r1);

        $r3 = $r0.<a2z.Mobile.DevConnections.Classes.BitmapGC: java.util.HashMap bitmapsWithIntegerID>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r5 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r4);

        $r1 = (android.graphics.Bitmap) $r5;

        return $r1;
    }
}
