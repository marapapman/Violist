public class twitter4j.internal.json.LanguageJSONImpl extends java.lang.Object implements twitter4j.api.HelpResources$Language
{
    private java.lang.String code;
    private java.lang.String name;
    private java.lang.String status;

    void <init>(twitter4j.internal.org.json.JSONObject) throws twitter4j.TwitterException
    {
        twitter4j.internal.json.LanguageJSONImpl $r0;
        twitter4j.internal.org.json.JSONObject $r1;

        $r0 := @this: twitter4j.internal.json.LanguageJSONImpl;

        $r1 := @parameter0: twitter4j.internal.org.json.JSONObject;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        specialinvoke $r0.<twitter4j.internal.json.LanguageJSONImpl: void init(twitter4j.internal.org.json.JSONObject)>($r1);

        return;
    }

    static twitter4j.ResponseList createLanguageList(twitter4j.internal.http.HttpResponse, twitter4j.conf.Configuration) throws twitter4j.TwitterException
    {
        twitter4j.internal.http.HttpResponse $r0;
        twitter4j.conf.Configuration $r1;
        twitter4j.internal.org.json.JSONArray $r2;
        twitter4j.ResponseList $r3;

        $r0 := @parameter0: twitter4j.internal.http.HttpResponse;

        $r1 := @parameter1: twitter4j.conf.Configuration;

        $r2 = virtualinvoke $r0.<twitter4j.internal.http.HttpResponse: twitter4j.internal.org.json.JSONArray asJSONArray()>();

        $r3 = staticinvoke <twitter4j.internal.json.LanguageJSONImpl: twitter4j.ResponseList createLanguageList(twitter4j.internal.org.json.JSONArray,twitter4j.internal.http.HttpResponse,twitter4j.conf.Configuration)>($r2, $r0, $r1);

        return $r3;
    }

    static twitter4j.ResponseList createLanguageList(twitter4j.internal.org.json.JSONArray, twitter4j.internal.http.HttpResponse, twitter4j.conf.Configuration) throws twitter4j.TwitterException
    {
        twitter4j.internal.org.json.JSONArray $r0;
        twitter4j.internal.http.HttpResponse $r1;
        twitter4j.conf.Configuration $r2;
        int $i0, $i1;
        twitter4j.internal.org.json.JSONException $r3;
        twitter4j.internal.json.LanguageJSONImpl $r4;
        twitter4j.internal.json.ResponseListImpl $r5;
        twitter4j.TwitterException $r6;
        boolean $z0;
        twitter4j.internal.org.json.JSONObject $r7;

        $r0 := @parameter0: twitter4j.internal.org.json.JSONArray;

        $r1 := @parameter1: twitter4j.internal.http.HttpResponse;

        $r2 := @parameter2: twitter4j.conf.Configuration;

        $z0 = interfaceinvoke $r2.<twitter4j.conf.Configuration: boolean isJSONStoreEnabled()>();

        if $z0 == 0 goto label1;

        staticinvoke <twitter4j.internal.json.DataObjectFactoryUtil: void clearThreadLocalMap()>();

     label1:
        $i1 = virtualinvoke $r0.<twitter4j.internal.org.json.JSONArray: int length()>();

        $r5 = new twitter4j.internal.json.ResponseListImpl;

        specialinvoke $r5.<twitter4j.internal.json.ResponseListImpl: void <init>(int,twitter4j.internal.http.HttpResponse)>($i1, $r1);

     label2:
        $i0 = 0;

     label3:
        if $i0 >= $i1 goto label5;

        $r7 = virtualinvoke $r0.<twitter4j.internal.org.json.JSONArray: twitter4j.internal.org.json.JSONObject getJSONObject(int)>($i0);

        $r4 = new twitter4j.internal.json.LanguageJSONImpl;

        specialinvoke $r4.<twitter4j.internal.json.LanguageJSONImpl: void <init>(twitter4j.internal.org.json.JSONObject)>($r7);

        interfaceinvoke $r5.<twitter4j.ResponseList: boolean add(java.lang.Object)>($r4);

        $z0 = interfaceinvoke $r2.<twitter4j.conf.Configuration: boolean isJSONStoreEnabled()>();

        if $z0 == 0 goto label4;

        staticinvoke <twitter4j.internal.json.DataObjectFactoryUtil: java.lang.Object registerJSONObject(java.lang.Object,java.lang.Object)>($r4, $r7);

     label4:
        $i0 = $i0 + 1;

        goto label3;

     label5:
        $z0 = interfaceinvoke $r2.<twitter4j.conf.Configuration: boolean isJSONStoreEnabled()>();

        if $z0 == 0 goto label9;

        staticinvoke <twitter4j.internal.json.DataObjectFactoryUtil: java.lang.Object registerJSONObject(java.lang.Object,java.lang.Object)>($r5, $r0);

     label6:
        return $r5;

     label7:
        $r3 := @caughtexception;

        $r6 = new twitter4j.TwitterException;

        specialinvoke $r6.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r3);

        throw $r6;

     label8:
        $r6 := @caughtexception;

        throw $r6;

     label9:
        return $r5;

        catch twitter4j.internal.org.json.JSONException from label1 to label2 with label7;
        catch twitter4j.internal.org.json.JSONException from label3 to label4 with label7;
        catch twitter4j.internal.org.json.JSONException from label5 to label6 with label7;
        catch twitter4j.TwitterException from label1 to label2 with label8;
        catch twitter4j.TwitterException from label3 to label4 with label8;
        catch twitter4j.TwitterException from label5 to label6 with label8;
    }

    private void init(twitter4j.internal.org.json.JSONObject) throws twitter4j.TwitterException
    {
        twitter4j.internal.json.LanguageJSONImpl $r0;
        twitter4j.internal.org.json.JSONObject $r1;
        twitter4j.internal.org.json.JSONException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        twitter4j.TwitterException $r5;

        $r0 := @this: twitter4j.internal.json.LanguageJSONImpl;

        $r1 := @parameter0: twitter4j.internal.org.json.JSONObject;

     label1:
        $r4 = virtualinvoke $r1.<twitter4j.internal.org.json.JSONObject: java.lang.String getString(java.lang.String)>("name");

        $r0.<twitter4j.internal.json.LanguageJSONImpl: java.lang.String name> = $r4;

        $r4 = virtualinvoke $r1.<twitter4j.internal.org.json.JSONObject: java.lang.String getString(java.lang.String)>("code");

        $r0.<twitter4j.internal.json.LanguageJSONImpl: java.lang.String code> = $r4;

        $r4 = virtualinvoke $r1.<twitter4j.internal.org.json.JSONObject: java.lang.String getString(java.lang.String)>("status");

     label2:
        $r0.<twitter4j.internal.json.LanguageJSONImpl: java.lang.String status> = $r4;

        return;

     label3:
        $r2 := @caughtexception;

        $r5 = new twitter4j.TwitterException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<twitter4j.internal.org.json.JSONException: java.lang.String getMessage()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r4 = virtualinvoke $r1.<twitter4j.internal.org.json.JSONObject: java.lang.String toString()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<twitter4j.TwitterException: void <init>(java.lang.String,java.lang.Throwable)>($r4, $r2);

        throw $r5;

        catch twitter4j.internal.org.json.JSONException from label1 to label2 with label3;
    }

    public java.lang.String getCode()
    {
        twitter4j.internal.json.LanguageJSONImpl $r0;
        java.lang.String r1;

        $r0 := @this: twitter4j.internal.json.LanguageJSONImpl;

        r1 = $r0.<twitter4j.internal.json.LanguageJSONImpl: java.lang.String code>;

        return r1;
    }

    public java.lang.String getName()
    {
        twitter4j.internal.json.LanguageJSONImpl $r0;
        java.lang.String r1;

        $r0 := @this: twitter4j.internal.json.LanguageJSONImpl;

        r1 = $r0.<twitter4j.internal.json.LanguageJSONImpl: java.lang.String name>;

        return r1;
    }

    public java.lang.String getStatus()
    {
        twitter4j.internal.json.LanguageJSONImpl $r0;
        java.lang.String r1;

        $r0 := @this: twitter4j.internal.json.LanguageJSONImpl;

        r1 = $r0.<twitter4j.internal.json.LanguageJSONImpl: java.lang.String status>;

        return r1;
    }
}
