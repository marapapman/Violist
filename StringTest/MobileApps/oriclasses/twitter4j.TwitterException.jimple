public class twitter4j.TwitterException extends java.lang.Exception implements twitter4j.TwitterResponse, twitter4j.internal.http.HttpResponseCode
{
    private static final java.lang.String[] FILTER;
    private static final long serialVersionUID;
    private int errorCode;
    private java.lang.String errorMessage;
    private twitter4j.ExceptionDiagnosis exceptionDiagnosis;
    boolean nested;
    private twitter4j.internal.http.HttpResponse response;
    private int statusCode;

    static void <clinit>()
    {
        java.lang.String[] $r0;

        <twitter4j.TwitterException: long serialVersionUID> = -2623309261327598087L;

        $r0 = newarray (java.lang.String)[1];

        $r0[0] = "twitter4j";

        <twitter4j.TwitterException: java.lang.String[] FILTER> = $r0;

        return;
    }

    public void <init>(java.lang.Exception)
    {
        twitter4j.TwitterException $r0;
        java.lang.Exception $r1;
        java.lang.String $r2;
        boolean $z0;

        $r0 := @this: twitter4j.TwitterException;

        $r1 := @parameter0: java.lang.Exception;

        $r2 = virtualinvoke $r1.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r0.<twitter4j.TwitterException: void <init>(java.lang.String,java.lang.Throwable)>($r2, $r1);

        $z0 = $r1 instanceof twitter4j.TwitterException;

        if $z0 == 0 goto label1;

        $r0 = (twitter4j.TwitterException) $r1;

        virtualinvoke $r0.<twitter4j.TwitterException: void setNested()>();

        return;

     label1:
        return;
    }

    public void <init>(java.lang.String)
    {
        twitter4j.TwitterException $r0;
        java.lang.String $r1;

        $r0 := @this: twitter4j.TwitterException;

        $r1 := @parameter0: java.lang.String;

        specialinvoke $r0.<twitter4j.TwitterException: void <init>(java.lang.String,java.lang.Throwable)>($r1, null);

        return;
    }

    public void <init>(java.lang.String, java.lang.Exception, int)
    {
        twitter4j.TwitterException $r0;
        java.lang.String $r1;
        java.lang.Exception $r2;
        int $i0;

        $r0 := @this: twitter4j.TwitterException;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Exception;

        $i0 := @parameter2: int;

        specialinvoke $r0.<twitter4j.TwitterException: void <init>(java.lang.String,java.lang.Throwable)>($r1, $r2);

        $r0.<twitter4j.TwitterException: int statusCode> = $i0;

        return;
    }

    public void <init>(java.lang.String, java.lang.Throwable)
    {
        twitter4j.TwitterException $r0;
        java.lang.String $r1;
        java.lang.Throwable $r2;

        $r0 := @this: twitter4j.TwitterException;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Throwable;

        specialinvoke $r0.<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>($r1, $r2);

        $r0.<twitter4j.TwitterException: int statusCode> = -1;

        $r0.<twitter4j.TwitterException: int errorCode> = -1;

        $r0.<twitter4j.TwitterException: twitter4j.ExceptionDiagnosis exceptionDiagnosis> = null;

        $r0.<twitter4j.TwitterException: java.lang.String errorMessage> = null;

        $r0.<twitter4j.TwitterException: boolean nested> = 0;

        specialinvoke $r0.<twitter4j.TwitterException: void decode(java.lang.String)>($r1);

        return;
    }

    public void <init>(java.lang.String, twitter4j.internal.http.HttpResponse)
    {
        twitter4j.TwitterException $r0;
        java.lang.String $r1;
        twitter4j.internal.http.HttpResponse $r2;
        int $i0;

        $r0 := @this: twitter4j.TwitterException;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: twitter4j.internal.http.HttpResponse;

        specialinvoke $r0.<twitter4j.TwitterException: void <init>(java.lang.String)>($r1);

        $r0.<twitter4j.TwitterException: twitter4j.internal.http.HttpResponse response> = $r2;

        $i0 = virtualinvoke $r2.<twitter4j.internal.http.HttpResponse: int getStatusCode()>();

        $r0.<twitter4j.TwitterException: int statusCode> = $i0;

        return;
    }

    private void decode(java.lang.String)
    {
        twitter4j.TwitterException $r0;
        java.lang.String $r1;
        twitter4j.internal.org.json.JSONObject $r2;
        boolean $z0;
        twitter4j.internal.org.json.JSONArray $r3;
        int $i0;
        twitter4j.internal.org.json.JSONException $r4;

        $r0 := @this: twitter4j.TwitterException;

        $r1 := @parameter0: java.lang.String;

        if $r1 == null goto label4;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("{");

        if $z0 == 0 goto label5;

        $r2 = new twitter4j.internal.org.json.JSONObject;

     label1:
        specialinvoke $r2.<twitter4j.internal.org.json.JSONObject: void <init>(java.lang.String)>($r1);

        $z0 = virtualinvoke $r2.<twitter4j.internal.org.json.JSONObject: boolean isNull(java.lang.String)>("errors");

        if $z0 != 0 goto label6;

        $r3 = virtualinvoke $r2.<twitter4j.internal.org.json.JSONObject: twitter4j.internal.org.json.JSONArray getJSONArray(java.lang.String)>("errors");

        $r2 = virtualinvoke $r3.<twitter4j.internal.org.json.JSONArray: twitter4j.internal.org.json.JSONObject getJSONObject(int)>(0);

        $r1 = virtualinvoke $r2.<twitter4j.internal.org.json.JSONObject: java.lang.String getString(java.lang.String)>("message");

        $r0.<twitter4j.TwitterException: java.lang.String errorMessage> = $r1;

        $i0 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: int getInt(java.lang.String,twitter4j.internal.org.json.JSONObject)>("code", $r2);

     label2:
        $r0.<twitter4j.TwitterException: int errorCode> = $i0;

        return;

     label3:
        $r4 := @caughtexception;

        return;

     label4:
        return;

     label5:
        return;

     label6:
        return;

        catch twitter4j.internal.org.json.JSONException from label1 to label2 with label3;
    }

    private static java.lang.String getCause(int)
    {
        int $i0;
        java.lang.String $r0;
        java.lang.StringBuilder $r1;

        $i0 := @parameter0: int;

        lookupswitch($i0)
        {
            case 304: goto label03;
            case 400: goto label04;
            case 401: goto label05;
            case 403: goto label06;
            case 404: goto label07;
            case 406: goto label08;
            case 420: goto label09;
            case 422: goto label10;
            case 429: goto label11;
            case 500: goto label12;
            case 502: goto label13;
            case 503: goto label14;
            case 504: goto label15;
            default: goto label01;
        };

     label01:
        $r0 = "";

     label02:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;

     label03:
        $r0 = "There was no new data to return.";

        goto label02;

     label04:
        $r0 = "The request was invalid. An accompanying error message will explain why. This is the status code will be returned during version 1.0 rate limiting(https://dev.twitter.com/pages/rate-limiting). In API v1.1, a request without authentication is considered invalid and you will get this response.";

        goto label02;

     label05:
        $r0 = "Authentication credentials (https://dev.twitter.com/pages/auth) were missing or incorrect. Ensure that you have set valid consumer key/secret, access token/secret, and the system clock is in sync.";

        goto label02;

     label06:
        $r0 = "The request is understood, but it has been refused. An accompanying error message will explain why. This code is used when requests are being denied due to update limits (https://support.twitter.com/articles/15364-about-twitter-limits-update-api-dm-and-following).";

        goto label02;

     label07:
        $r0 = "The URI requested is invalid or the resource requested, such as a user, does not exists. Also returned when the requested format is not supported by the requested method.";

        goto label02;

     label08:
        $r0 = "Returned by the Search API when an invalid format is specified in the request.\nReturned by the Streaming API when one or more of the parameters are not suitable for the resource. The track parameter, for example, would throw this error if:\n The track keyword is too long or too short.\n The bounding box specified is invalid.\n No predicates defined for filtered resource, for example, neither track nor follow parameter defined.\n Follow userid cannot be read.";

        goto label02;

     label09:
        $r0 = "Returned by the Search and Trends API when you are being rate limited (https://dev.twitter.com/docs/rate-limiting).\nReturned by the Streaming API:\n Too many login attempts in a short period of time.\n Running too many copies of the same application authenticating with the same account name.";

        goto label02;

     label10:
        $r0 = "Returned when an image uploaded to POST account/update_profile_banner(https://dev.twitter.com/docs/api/1/post/account/update_profile_banner) is unable to be processed.";

        goto label02;

     label11:
        $r0 = "Returned in API v1.1 when a request cannot be served due to the application\'s rate limit having been exhausted for the resource. See Rate Limiting in API v1.1.(https://dev.twitter.com/docs/rate-limiting/1.1)";

        goto label02;

     label12:
        $r0 = "Something is broken. Please post to the group (https://dev.twitter.com/docs/support) so the Twitter team can investigate.";

        goto label02;

     label13:
        $r0 = "Twitter is down or being upgraded.";

        goto label02;

     label14:
        $r0 = "The Twitter servers are up, but overloaded with requests. Try again later.";

        goto label02;

     label15:
        $r0 = "The Twitter servers are up, but the request couldn\'t be serviced due to some failure within our stack. Try again later.";

        goto label02;
    }

    private twitter4j.ExceptionDiagnosis getExceptionDiagnosis()
    {
        twitter4j.TwitterException $r0;
        twitter4j.ExceptionDiagnosis $r1;
        java.lang.String[] $r2;

        $r0 := @this: twitter4j.TwitterException;

        $r1 = $r0.<twitter4j.TwitterException: twitter4j.ExceptionDiagnosis exceptionDiagnosis>;

        if $r1 != null goto label1;

        $r1 = new twitter4j.ExceptionDiagnosis;

        $r2 = <twitter4j.TwitterException: java.lang.String[] FILTER>;

        specialinvoke $r1.<twitter4j.ExceptionDiagnosis: void <init>(java.lang.Throwable,java.lang.String[])>($r0, $r2);

        $r0.<twitter4j.TwitterException: twitter4j.ExceptionDiagnosis exceptionDiagnosis> = $r1;

     label1:
        $r1 = $r0.<twitter4j.TwitterException: twitter4j.ExceptionDiagnosis exceptionDiagnosis>;

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        twitter4j.TwitterException $r0, $r4;
        java.lang.Object $r1;
        java.lang.Class $r2, $r3;
        int $i0, $i1;
        boolean $z0, $z1;
        java.lang.String $r5, $r6;
        twitter4j.ExceptionDiagnosis $r7, $r8;
        twitter4j.internal.http.HttpResponse $r9, $r10;

        $r0 := @this: twitter4j.TwitterException;

        $r1 := @parameter0: java.lang.Object;

        if $r0 != $r1 goto label01;

        return 1;

     label01:
        if $r1 == null goto label02;

        $r2 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label03;

     label02:
        return 0;

     label03:
        $r4 = (twitter4j.TwitterException) $r1;

        $i0 = $r0.<twitter4j.TwitterException: int errorCode>;

        $i1 = $r4.<twitter4j.TwitterException: int errorCode>;

        if $i0 == $i1 goto label04;

        return 0;

     label04:
        $z0 = $r0.<twitter4j.TwitterException: boolean nested>;

        $z1 = $r4.<twitter4j.TwitterException: boolean nested>;

        if $z0 == $z1 goto label05;

        return 0;

     label05:
        $i1 = $r0.<twitter4j.TwitterException: int statusCode>;

        $i0 = $r4.<twitter4j.TwitterException: int statusCode>;

        if $i1 == $i0 goto label06;

        return 0;

     label06:
        $r5 = $r0.<twitter4j.TwitterException: java.lang.String errorMessage>;

        if $r5 == null goto label08;

        $r5 = $r0.<twitter4j.TwitterException: java.lang.String errorMessage>;

        $r6 = $r4.<twitter4j.TwitterException: java.lang.String errorMessage>;

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 != 0 goto label09;

     label07:
        return 0;

     label08:
        $r6 = $r4.<twitter4j.TwitterException: java.lang.String errorMessage>;

        if $r6 != null goto label07;

     label09:
        $r7 = $r0.<twitter4j.TwitterException: twitter4j.ExceptionDiagnosis exceptionDiagnosis>;

        if $r7 == null goto label11;

        $r7 = $r0.<twitter4j.TwitterException: twitter4j.ExceptionDiagnosis exceptionDiagnosis>;

        $r8 = $r4.<twitter4j.TwitterException: twitter4j.ExceptionDiagnosis exceptionDiagnosis>;

        $z1 = virtualinvoke $r7.<twitter4j.ExceptionDiagnosis: boolean equals(java.lang.Object)>($r8);

        if $z1 != 0 goto label12;

     label10:
        return 0;

     label11:
        $r8 = $r4.<twitter4j.TwitterException: twitter4j.ExceptionDiagnosis exceptionDiagnosis>;

        if $r8 != null goto label10;

     label12:
        $r9 = $r0.<twitter4j.TwitterException: twitter4j.internal.http.HttpResponse response>;

        if $r9 == null goto label14;

        $r9 = $r0.<twitter4j.TwitterException: twitter4j.internal.http.HttpResponse response>;

        $r10 = $r4.<twitter4j.TwitterException: twitter4j.internal.http.HttpResponse response>;

        $z1 = virtualinvoke $r9.<java.lang.Object: boolean equals(java.lang.Object)>($r10);

        if $z1 != 0 goto label15;

     label13:
        return 0;

     label14:
        $r10 = $r4.<twitter4j.TwitterException: twitter4j.internal.http.HttpResponse response>;

        if $r10 == null goto label16;

        goto label13;

     label15:
        return 1;

     label16:
        return 1;
    }

    public boolean exceededRateLimitation()
    {
        twitter4j.TwitterException $r0;
        int $i0;
        twitter4j.RateLimitStatus $r1;

        $r0 := @this: twitter4j.TwitterException;

        $i0 = $r0.<twitter4j.TwitterException: int statusCode>;

        if $i0 != 400 goto label1;

        $r1 = virtualinvoke $r0.<twitter4j.TwitterException: twitter4j.RateLimitStatus getRateLimitStatus()>();

        if $r1 != null goto label2;

     label1:
        $i0 = $r0.<twitter4j.TwitterException: int statusCode>;

        if $i0 == 420 goto label2;

        $i0 = $r0.<twitter4j.TwitterException: int statusCode>;

        if $i0 != 429 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    public int getAccessLevel()
    {
        twitter4j.TwitterException $r0;
        twitter4j.internal.http.HttpResponse $r1;
        int $i0;

        $r0 := @this: twitter4j.TwitterException;

        $r1 = $r0.<twitter4j.TwitterException: twitter4j.internal.http.HttpResponse response>;

        $i0 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: int toAccessLevel(twitter4j.internal.http.HttpResponse)>($r1);

        return $i0;
    }

    public int getErrorCode()
    {
        twitter4j.TwitterException $r0;
        int i0;

        $r0 := @this: twitter4j.TwitterException;

        i0 = $r0.<twitter4j.TwitterException: int errorCode>;

        return i0;
    }

    public java.lang.String getErrorMessage()
    {
        twitter4j.TwitterException $r0;
        java.lang.String r1;

        $r0 := @this: twitter4j.TwitterException;

        r1 = $r0.<twitter4j.TwitterException: java.lang.String errorMessage>;

        return r1;
    }

    public java.lang.String getExceptionCode()
    {
        twitter4j.TwitterException $r0;
        twitter4j.ExceptionDiagnosis $r1;
        java.lang.String $r2;

        $r0 := @this: twitter4j.TwitterException;

        $r1 = specialinvoke $r0.<twitter4j.TwitterException: twitter4j.ExceptionDiagnosis getExceptionDiagnosis()>();

        $r2 = virtualinvoke $r1.<twitter4j.ExceptionDiagnosis: java.lang.String asHexString()>();

        return $r2;
    }

    public java.lang.String getMessage()
    {
        twitter4j.TwitterException $r0;
        java.lang.StringBuilder $r1, $r3;
        java.lang.String $r2;
        int $i0;

        $r0 := @this: twitter4j.TwitterException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = $r0.<twitter4j.TwitterException: java.lang.String errorMessage>;

        if $r2 == null goto label2;

        $i0 = $r0.<twitter4j.TwitterException: int errorCode>;

        if $i0 == -1 goto label2;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("message - ");

        $r2 = $r0.<twitter4j.TwitterException: java.lang.String errorMessage>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("code - ");

        $i0 = $r0.<twitter4j.TwitterException: int errorCode>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label1:
        $i0 = $r0.<twitter4j.TwitterException: int statusCode>;

        if $i0 == -1 goto label3;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $i0 = $r0.<twitter4j.TwitterException: int statusCode>;

        $r2 = staticinvoke <twitter4j.TwitterException: java.lang.String getCause(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label2:
        $r2 = specialinvoke $r0.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        goto label1;

     label3:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public twitter4j.RateLimitStatus getRateLimitStatus()
    {
        twitter4j.TwitterException $r0;
        twitter4j.internal.http.HttpResponse $r1;
        twitter4j.RateLimitStatus $r2;

        $r0 := @this: twitter4j.TwitterException;

        $r1 = $r0.<twitter4j.TwitterException: twitter4j.internal.http.HttpResponse response>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r1 = $r0.<twitter4j.TwitterException: twitter4j.internal.http.HttpResponse response>;

        $r2 = staticinvoke <twitter4j.internal.json.z_T4JInternalJSONImplFactory: twitter4j.RateLimitStatus createRateLimitStatusFromResponseHeader(twitter4j.internal.http.HttpResponse)>($r1);

        return $r2;
    }

    public java.lang.String getResponseHeader(java.lang.String)
    {
        twitter4j.TwitterException $r0;
        java.lang.String $r1;
        twitter4j.internal.http.HttpResponse $r2;
        java.util.Map $r3;
        java.lang.Object $r4;
        java.util.List $r5;
        int $i0;

        $r0 := @this: twitter4j.TwitterException;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<twitter4j.TwitterException: twitter4j.internal.http.HttpResponse response>;

        if $r2 == null goto label1;

        $r2 = $r0.<twitter4j.TwitterException: twitter4j.internal.http.HttpResponse response>;

        $r3 = virtualinvoke $r2.<twitter4j.internal.http.HttpResponse: java.util.Map getResponseHeaderFields()>();

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = (java.util.List) $r4;

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i0 <= 0 goto label2;

        $r4 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(0);

        $r1 = (java.lang.String) $r4;

        return $r1;

     label1:
        return null;

     label2:
        return null;
    }

    public int getRetryAfter()
    {
        twitter4j.TwitterException $r0;
        int $i0;
        twitter4j.RateLimitStatus $r1;
        twitter4j.internal.http.HttpResponse $r2;
        java.lang.String $r3;
        java.lang.Integer $r4;
        java.lang.NumberFormatException $r5;

        $r0 := @this: twitter4j.TwitterException;

        $i0 = $r0.<twitter4j.TwitterException: int statusCode>;

        if $i0 != 400 goto label1;

        $r1 = virtualinvoke $r0.<twitter4j.TwitterException: twitter4j.RateLimitStatus getRateLimitStatus()>();

        if $r1 == null goto label5;

        $i0 = interfaceinvoke $r1.<twitter4j.RateLimitStatus: int getSecondsUntilReset()>();

        return $i0;

     label1:
        $i0 = $r0.<twitter4j.TwitterException: int statusCode>;

        if $i0 != 420 goto label6;

        $r2 = $r0.<twitter4j.TwitterException: twitter4j.internal.http.HttpResponse response>;

     label2:
        $r3 = virtualinvoke $r2.<twitter4j.internal.http.HttpResponse: java.lang.String getResponseHeader(java.lang.String)>("Retry-After");

        if $r3 == null goto label7;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r3);

        $i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

     label3:
        return $i0;

     label4:
        $r5 := @caughtexception;

        return -1;

     label5:
        return -1;

     label6:
        return -1;

     label7:
        return -1;

        catch java.lang.NumberFormatException from label2 to label3 with label4;
    }

    public int getStatusCode()
    {
        twitter4j.TwitterException $r0;
        int i0;

        $r0 := @this: twitter4j.TwitterException;

        i0 = $r0.<twitter4j.TwitterException: int statusCode>;

        return i0;
    }

    public int hashCode()
    {
        twitter4j.TwitterException $r0;
        int $i0, $i2;
        byte $b1;
        twitter4j.ExceptionDiagnosis $r1;
        twitter4j.internal.http.HttpResponse $r2;
        java.lang.String $r3;
        boolean $z0;

        $r0 := @this: twitter4j.TwitterException;

        $b1 = 0;

        $i0 = $r0.<twitter4j.TwitterException: int statusCode>;

        $i0 = $i0 * 31;

        $i2 = $r0.<twitter4j.TwitterException: int errorCode>;

        $i2 = $i0 + $i2;

        $i0 = $i2 * 31;

        $r1 = $r0.<twitter4j.TwitterException: twitter4j.ExceptionDiagnosis exceptionDiagnosis>;

        if $r1 == null goto label5;

        $r1 = $r0.<twitter4j.TwitterException: twitter4j.ExceptionDiagnosis exceptionDiagnosis>;

        $i2 = virtualinvoke $r1.<twitter4j.ExceptionDiagnosis: int hashCode()>();

     label1:
        $i2 = $i0 + $i2;

        $i2 = $i2 * 31;

        $r2 = $r0.<twitter4j.TwitterException: twitter4j.internal.http.HttpResponse response>;

        if $r2 == null goto label6;

        $r2 = $r0.<twitter4j.TwitterException: twitter4j.internal.http.HttpResponse response>;

        $i0 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

     label2:
        $i2 = $i2 + $i0;

        $i2 = $i2 * 31;

        $r3 = $r0.<twitter4j.TwitterException: java.lang.String errorMessage>;

        if $r3 == null goto label7;

        $r3 = $r0.<twitter4j.TwitterException: java.lang.String errorMessage>;

        $i0 = virtualinvoke $r3.<java.lang.String: int hashCode()>();

     label3:
        $i2 = $i2 + $i0;

        $i2 = $i2 * 31;

        $z0 = $r0.<twitter4j.TwitterException: boolean nested>;

        if $z0 == 0 goto label4;

        $b1 = 1;

     label4:
        $i2 = $i2 + $b1;

        return $i2;

     label5:
        $i2 = 0;

        goto label1;

     label6:
        $i0 = 0;

        goto label2;

     label7:
        $i0 = 0;

        goto label3;
    }

    public boolean isCausedByNetworkIssue()
    {
        twitter4j.TwitterException $r0;
        java.lang.Throwable $r1;
        boolean $z0;

        $r0 := @this: twitter4j.TwitterException;

        $r1 = virtualinvoke $r0.<twitter4j.TwitterException: java.lang.Throwable getCause()>();

        $z0 = $r1 instanceof java.io.IOException;

        return $z0;
    }

    public boolean isErrorMessageAvailable()
    {
        twitter4j.TwitterException $r0;
        java.lang.String $r1;

        $r0 := @this: twitter4j.TwitterException;

        $r1 = $r0.<twitter4j.TwitterException: java.lang.String errorMessage>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean resourceNotFound()
    {
        twitter4j.TwitterException $r0;
        int $i0;

        $r0 := @this: twitter4j.TwitterException;

        $i0 = $r0.<twitter4j.TwitterException: int statusCode>;

        if $i0 != 404 goto label1;

        return 1;

     label1:
        return 0;
    }

    void setNested()
    {
        twitter4j.TwitterException $r0;

        $r0 := @this: twitter4j.TwitterException;

        $r0.<twitter4j.TwitterException: boolean nested> = 1;

        return;
    }

    public java.lang.String toString()
    {
        twitter4j.TwitterException $r0;
        java.lang.StringBuilder $r1, $r4;
        java.lang.String $r2;
        boolean $z0;
        int $i0;
        twitter4j.RateLimitStatus $r3;
        twitter4j.ExceptionDiagnosis $r5;

        $r0 := @this: twitter4j.TwitterException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<twitter4j.TwitterException: java.lang.String getMessage()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $z0 = $r0.<twitter4j.TwitterException: boolean nested>;

        if $z0 == 0 goto label3;

        $r2 = "";

     label1:
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nTwitterException{");

        $z0 = $r0.<twitter4j.TwitterException: boolean nested>;

        if $z0 == 0 goto label4;

        $r2 = "";

     label2:
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("statusCode=");

        $i0 = $r0.<twitter4j.TwitterException: int statusCode>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", message=");

        $r2 = $r0.<twitter4j.TwitterException: java.lang.String errorMessage>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", code=");

        $i0 = $r0.<twitter4j.TwitterException: int errorCode>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", retryAfter=");

        $i0 = virtualinvoke $r0.<twitter4j.TwitterException: int getRetryAfter()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", rateLimitStatus=");

        $r3 = virtualinvoke $r0.<twitter4j.TwitterException: twitter4j.RateLimitStatus getRateLimitStatus()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", version=");

        $r2 = staticinvoke <twitter4j.Version: java.lang.String getVersion()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label3:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nRelevant discussions can be found on the Internet at:\n\thttp://www.google.co.jp/search?q=");

        $r5 = specialinvoke $r0.<twitter4j.TwitterException: twitter4j.ExceptionDiagnosis getExceptionDiagnosis()>();

        $r2 = virtualinvoke $r5.<twitter4j.ExceptionDiagnosis: java.lang.String getStackLineHashAsHex()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" or\n\thttp://www.google.co.jp/search?q=");

        $r5 = specialinvoke $r0.<twitter4j.TwitterException: twitter4j.ExceptionDiagnosis getExceptionDiagnosis()>();

        $r2 = virtualinvoke $r5.<twitter4j.ExceptionDiagnosis: java.lang.String getLineNumberHashAsHex()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label1;

     label4:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exceptionCode=[");

        $r2 = virtualinvoke $r0.<twitter4j.TwitterException: java.lang.String getExceptionCode()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("], ");

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;
    }
}
