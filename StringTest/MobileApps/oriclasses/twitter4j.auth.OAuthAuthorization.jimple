public class twitter4j.auth.OAuthAuthorization extends java.lang.Object implements twitter4j.auth.Authorization, java.io.Serializable, twitter4j.auth.OAuthSupport
{
    private static final java.lang.String HMAC_SHA1;
    private static final twitter4j.internal.http.HttpParameter OAUTH_SIGNATURE_METHOD;
    private static java.util.Random RAND;
    private static transient twitter4j.internal.http.HttpClientWrapper http;
    private static final twitter4j.internal.logging.Logger logger;
    private static final long serialVersionUID;
    private final twitter4j.conf.Configuration conf;
    private java.lang.String consumerKey;
    private java.lang.String consumerSecret;
    private twitter4j.auth.OAuthToken oauthToken;
    private java.lang.String realm;

    static void <clinit>()
    {
        twitter4j.internal.http.HttpParameter $r0;
        twitter4j.internal.logging.Logger $r1;
        java.util.Random $r2;

        <twitter4j.auth.OAuthAuthorization: long serialVersionUID> = -4368426677157998618L;

        <twitter4j.auth.OAuthAuthorization: java.lang.String HMAC_SHA1> = "HmacSHA1";

        $r0 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r0.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("oauth_signature_method", "HMAC-SHA1");

        <twitter4j.auth.OAuthAuthorization: twitter4j.internal.http.HttpParameter OAUTH_SIGNATURE_METHOD> = $r0;

        $r1 = staticinvoke <twitter4j.internal.logging.Logger: twitter4j.internal.logging.Logger getLogger(java.lang.Class)>(class "twitter4j/auth/OAuthAuthorization");

        <twitter4j.auth.OAuthAuthorization: twitter4j.internal.logging.Logger logger> = $r1;

        $r2 = new java.util.Random;

        specialinvoke $r2.<java.util.Random: void <init>()>();

        <twitter4j.auth.OAuthAuthorization: java.util.Random RAND> = $r2;

        return;
    }

    public void <init>(twitter4j.conf.Configuration)
    {
        twitter4j.auth.OAuthAuthorization $r0;
        twitter4j.conf.Configuration $r1;
        java.lang.String $r2, $r4;
        twitter4j.internal.http.HttpClientWrapper $r3;
        twitter4j.auth.AccessToken $r5;

        $r0 := @this: twitter4j.auth.OAuthAuthorization;

        $r1 := @parameter0: twitter4j.conf.Configuration;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<twitter4j.auth.OAuthAuthorization: java.lang.String consumerKey> = "";

        $r0.<twitter4j.auth.OAuthAuthorization: java.lang.String realm> = null;

        $r0.<twitter4j.auth.OAuthAuthorization: twitter4j.auth.OAuthToken oauthToken> = null;

        $r0.<twitter4j.auth.OAuthAuthorization: twitter4j.conf.Configuration conf> = $r1;

        $r3 = new twitter4j.internal.http.HttpClientWrapper;

        specialinvoke $r3.<twitter4j.internal.http.HttpClientWrapper: void <init>(twitter4j.internal.http.HttpClientWrapperConfiguration)>($r1);

        <twitter4j.auth.OAuthAuthorization: twitter4j.internal.http.HttpClientWrapper http> = $r3;

        $r2 = interfaceinvoke $r1.<twitter4j.conf.Configuration: java.lang.String getOAuthConsumerKey()>();

        $r4 = interfaceinvoke $r1.<twitter4j.conf.Configuration: java.lang.String getOAuthConsumerSecret()>();

        virtualinvoke $r0.<twitter4j.auth.OAuthAuthorization: void setOAuthConsumer(java.lang.String,java.lang.String)>($r2, $r4);

        $r4 = interfaceinvoke $r1.<twitter4j.conf.Configuration: java.lang.String getOAuthAccessToken()>();

        if $r4 == null goto label1;

        $r4 = interfaceinvoke $r1.<twitter4j.conf.Configuration: java.lang.String getOAuthAccessTokenSecret()>();

        if $r4 == null goto label2;

        $r5 = new twitter4j.auth.AccessToken;

        $r4 = interfaceinvoke $r1.<twitter4j.conf.Configuration: java.lang.String getOAuthAccessToken()>();

        $r2 = interfaceinvoke $r1.<twitter4j.conf.Configuration: java.lang.String getOAuthAccessTokenSecret()>();

        specialinvoke $r5.<twitter4j.auth.AccessToken: void <init>(java.lang.String,java.lang.String)>($r4, $r2);

        virtualinvoke $r0.<twitter4j.auth.OAuthAuthorization: void setOAuthAccessToken(twitter4j.auth.AccessToken)>($r5);

        return;

     label1:
        return;

     label2:
        return;
    }

    static java.lang.String constructRequestURL(java.lang.String)
    {
        java.lang.String $r0, $r1, $r2;
        int $i0, $i1;
        boolean $z0;
        java.lang.StringBuilder $r3;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String)>("?");

        if -1 == $i0 goto label1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label1:
        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String,int)>("/", 8);

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        $r1 = $r2;

        $i1 = virtualinvoke $r2.<java.lang.String: int indexOf(java.lang.String,int)>(":", 8);

        if -1 == $i1 goto label2;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("http://");

        if $z0 == 0 goto label3;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>(":80");

        if $z0 == 0 goto label3;

        $r1 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label3:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("https://");

        if $z0 == 0 goto label2;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>(":443");

        if $z0 == 0 goto label2;

        $r1 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        goto label2;
    }

    public static java.lang.String encodeParameters(java.util.List)
    {
        java.util.List $r0;
        java.lang.String $r1;

        $r0 := @parameter0: java.util.List;

        $r1 = staticinvoke <twitter4j.auth.OAuthAuthorization: java.lang.String encodeParameters(java.util.List,java.lang.String,boolean)>($r0, "&", 0);

        return $r1;
    }

    public static java.lang.String encodeParameters(java.util.List, java.lang.String, boolean)
    {
        java.util.List $r0;
        java.lang.String $r1, $r6;
        boolean $z0, $z1;
        java.lang.StringBuilder $r2, $r7;
        java.util.Iterator $r3;
        java.lang.Object $r4;
        twitter4j.internal.http.HttpParameter $r5;
        int $i0;

        $r0 := @parameter0: java.util.List;

        $r1 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (twitter4j.internal.http.HttpParameter) $r4;

        $z1 = virtualinvoke $r5.<twitter4j.internal.http.HttpParameter: boolean isFile()>();

        if $z1 != 0 goto label1;

        $i0 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        if $i0 == 0 goto label3;

        if $z0 == 0 goto label2;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

     label2:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

     label3:
        $r6 = virtualinvoke $r5.<twitter4j.internal.http.HttpParameter: java.lang.String getName()>();

        $r6 = staticinvoke <twitter4j.internal.http.HttpParameter: java.lang.String encode(java.lang.String)>($r6);

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        if $z0 == 0 goto label4;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

     label4:
        $r6 = virtualinvoke $r5.<twitter4j.internal.http.HttpParameter: java.lang.String getValue()>();

        $r6 = staticinvoke <twitter4j.internal.http.HttpParameter: java.lang.String encode(java.lang.String)>($r6);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        goto label1;

     label5:
        $i0 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        if $i0 == 0 goto label6;

        if $z0 == 0 goto label6;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

     label6:
        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    private void ensureTokenIsAvailable()
    {
        twitter4j.auth.OAuthAuthorization $r0;
        twitter4j.auth.OAuthToken $r1;
        java.lang.IllegalStateException $r2;

        $r0 := @this: twitter4j.auth.OAuthAuthorization;

        $r1 = $r0.<twitter4j.auth.OAuthAuthorization: twitter4j.auth.OAuthToken oauthToken>;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No Token available.");

        throw $r2;

     label1:
        return;
    }

    static java.lang.String normalizeAuthorizationHeaders(java.util.List)
    {
        java.util.List $r0;
        java.lang.String $r1;

        $r0 := @parameter0: java.util.List;

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r0);

        $r1 = staticinvoke <twitter4j.auth.OAuthAuthorization: java.lang.String encodeParameters(java.util.List)>($r0);

        return $r1;
    }

    static java.lang.String normalizeRequestParameters(java.util.List)
    {
        java.util.List $r0;
        java.lang.String $r1;

        $r0 := @parameter0: java.util.List;

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r0);

        $r1 = staticinvoke <twitter4j.auth.OAuthAuthorization: java.lang.String encodeParameters(java.util.List)>($r0);

        return $r1;
    }

    static java.lang.String normalizeRequestParameters(twitter4j.internal.http.HttpParameter[])
    {
        twitter4j.internal.http.HttpParameter[] $r0;
        java.util.List $r1;
        java.lang.String $r2;

        $r0 := @parameter0: twitter4j.internal.http.HttpParameter[];

        $r1 = staticinvoke <twitter4j.auth.OAuthAuthorization: java.util.List toParamList(twitter4j.internal.http.HttpParameter[])>($r0);

        $r2 = staticinvoke <twitter4j.auth.OAuthAuthorization: java.lang.String normalizeRequestParameters(java.util.List)>($r1);

        return $r2;
    }

    private void parseGetParameters(java.lang.String, java.util.List)
    {
        twitter4j.auth.OAuthAuthorization $r0;
        java.lang.String $r1, $r6;
        java.util.List $r2;
        int $i0, $i1, $i2;
        java.lang.String[] $r3, $r4;
        twitter4j.internal.http.HttpParameter $r5;
        java.io.UnsupportedEncodingException $r7;

        $r0 := @this: twitter4j.auth.OAuthAuthorization;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.List;

        $i1 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>("?");

        if -1 == $i1 goto label10;

        $i1 = $i1 + 1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i1);

        $r3 = staticinvoke <twitter4j.internal.util.z_T4JInternalStringUtil: java.lang.String[] split(java.lang.String,java.lang.String)>($r1, "&");

        $i1 = lengthof $r3;

        $i0 = 0;

     label01:
        if $i0 >= $i1 goto label11;

        $r1 = $r3[$i0];

     label02:
        $r4 = staticinvoke <twitter4j.internal.util.z_T4JInternalStringUtil: java.lang.String[] split(java.lang.String,java.lang.String)>($r1, "=");

     label03:
        $i2 = lengthof $r4;

        if $i2 != 2 goto label06;

        $r5 = new twitter4j.internal.http.HttpParameter;

     label04:
        $r1 = $r4[0];

        $r1 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>($r1, "UTF-8");

        $r6 = $r4[1];

        $r6 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>($r6, "UTF-8");

        specialinvoke $r5.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>($r1, $r6);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r5);

     label05:
        $i0 = $i0 + 1;

        goto label01;

     label06:
        $r5 = new twitter4j.internal.http.HttpParameter;

     label07:
        $r6 = $r4[0];

        $r6 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>($r6, "UTF-8");

        specialinvoke $r5.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>($r6, "");

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r5);

     label08:
        goto label05;

     label09:
        $r7 := @caughtexception;

        return;

     label10:
        return;

     label11:
        return;

        catch java.io.UnsupportedEncodingException from label02 to label03 with label09;
        catch java.io.UnsupportedEncodingException from label04 to label05 with label09;
        catch java.io.UnsupportedEncodingException from label07 to label08 with label09;
    }

    static java.util.List toParamList(twitter4j.internal.http.HttpParameter[])
    {
        twitter4j.internal.http.HttpParameter[] $r0;
        java.util.ArrayList $r1;
        int $i0;
        java.util.List $r2;

        $r0 := @parameter0: twitter4j.internal.http.HttpParameter[];

        $r1 = new java.util.ArrayList;

        $i0 = lengthof $r0;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>($i0);

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);

        interfaceinvoke $r1.<java.util.List: boolean addAll(java.util.Collection)>($r2);

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        twitter4j.auth.OAuthAuthorization $r0, $r3;
        java.lang.Object $r1;
        boolean $z0;
        java.lang.String $r2, $r4;
        twitter4j.auth.OAuthToken $r5, $r6;

        $r0 := @this: twitter4j.auth.OAuthAuthorization;

        $r1 := @parameter0: java.lang.Object;

        if $r0 != $r1 goto label01;

        return 1;

     label01:
        $z0 = $r1 instanceof twitter4j.auth.OAuthSupport;

        if $z0 != 0 goto label02;

        return 0;

     label02:
        $r3 = (twitter4j.auth.OAuthAuthorization) $r1;

        $r2 = $r0.<twitter4j.auth.OAuthAuthorization: java.lang.String consumerKey>;

        if $r2 == null goto label04;

        $r4 = $r0.<twitter4j.auth.OAuthAuthorization: java.lang.String consumerKey>;

        $r2 = $r3.<twitter4j.auth.OAuthAuthorization: java.lang.String consumerKey>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label05;

     label03:
        return 0;

     label04:
        $r4 = $r3.<twitter4j.auth.OAuthAuthorization: java.lang.String consumerKey>;

        if $r4 != null goto label03;

     label05:
        $r4 = $r0.<twitter4j.auth.OAuthAuthorization: java.lang.String consumerSecret>;

        if $r4 == null goto label07;

        $r4 = $r0.<twitter4j.auth.OAuthAuthorization: java.lang.String consumerSecret>;

        $r2 = $r3.<twitter4j.auth.OAuthAuthorization: java.lang.String consumerSecret>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label08;

     label06:
        return 0;

     label07:
        $r4 = $r3.<twitter4j.auth.OAuthAuthorization: java.lang.String consumerSecret>;

        if $r4 != null goto label06;

     label08:
        $r5 = $r0.<twitter4j.auth.OAuthAuthorization: twitter4j.auth.OAuthToken oauthToken>;

        if $r5 == null goto label10;

        $r5 = $r0.<twitter4j.auth.OAuthAuthorization: twitter4j.auth.OAuthToken oauthToken>;

        $r6 = $r3.<twitter4j.auth.OAuthAuthorization: twitter4j.auth.OAuthToken oauthToken>;

        $z0 = virtualinvoke $r5.<twitter4j.auth.OAuthToken: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label11;

     label09:
        return 0;

     label10:
        $r6 = $r3.<twitter4j.auth.OAuthAuthorization: twitter4j.auth.OAuthToken oauthToken>;

        if $r6 == null goto label12;

        goto label09;

     label11:
        return 1;

     label12:
        return 1;
    }

    java.lang.String generateAuthorizationHeader(java.lang.String, java.lang.String, twitter4j.internal.http.HttpParameter[], java.lang.String, java.lang.String, twitter4j.auth.OAuthToken)
    {
        twitter4j.auth.OAuthAuthorization $r0;
        java.lang.String $r1, $r2, $r4, $r5, $r9;
        twitter4j.internal.http.HttpParameter[] $r3;
        twitter4j.auth.OAuthToken $r6;
        java.util.ArrayList $r7, $r8;
        twitter4j.internal.http.HttpParameter $r10;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r11;
        java.lang.StringBuilder $r12;
        twitter4j.internal.logging.Logger $r13;

        $r0 := @this: twitter4j.auth.OAuthAuthorization;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: twitter4j.internal.http.HttpParameter[];

        $r4 := @parameter3: java.lang.String;

        $r5 := @parameter4: java.lang.String;

        $r6 := @parameter5: twitter4j.auth.OAuthToken;

        if $r3 != null goto label1;

        $r3 = newarray (twitter4j.internal.http.HttpParameter)[0];

     label1:
        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>(int)>(5);

        $r10 = new twitter4j.internal.http.HttpParameter;

        $r9 = $r0.<twitter4j.auth.OAuthAuthorization: java.lang.String consumerKey>;

        specialinvoke $r10.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("oauth_consumer_key", $r9);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r10);

        $r10 = <twitter4j.auth.OAuthAuthorization: twitter4j.internal.http.HttpParameter OAUTH_SIGNATURE_METHOD>;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r10);

        $r10 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r10.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("oauth_timestamp", $r5);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r10);

        $r10 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r10.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("oauth_nonce", $r4);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r10);

        $r10 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r10.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("oauth_version", "1.0");

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r10);

        if $r6 == null goto label2;

        $r10 = new twitter4j.internal.http.HttpParameter;

        $r9 = virtualinvoke $r6.<twitter4j.auth.OAuthToken: java.lang.String getToken()>();

        specialinvoke $r10.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("oauth_token", $r9);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r10);

     label2:
        $r8 = new java.util.ArrayList;

        $i0 = interfaceinvoke $r7.<java.util.List: int size()>();

        $i1 = lengthof $r3;

        $i1 = $i0 + $i1;

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>($i1);

        interfaceinvoke $r8.<java.util.List: boolean addAll(java.util.Collection)>($r7);

        $z0 = staticinvoke <twitter4j.internal.http.HttpParameter: boolean containsFile(twitter4j.internal.http.HttpParameter[])>($r3);

        if $z0 != 0 goto label3;

        $r11 = staticinvoke <twitter4j.auth.OAuthAuthorization: java.util.List toParamList(twitter4j.internal.http.HttpParameter[])>($r3);

        interfaceinvoke $r8.<java.util.List: boolean addAll(java.util.Collection)>($r11);

     label3:
        specialinvoke $r0.<twitter4j.auth.OAuthAuthorization: void parseGetParameters(java.lang.String,java.util.List)>($r2, $r8);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

        $r9 = staticinvoke <twitter4j.auth.OAuthAuthorization: java.lang.String constructRequestURL(java.lang.String)>($r2);

        $r9 = staticinvoke <twitter4j.internal.http.HttpParameter: java.lang.String encode(java.lang.String)>($r9);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

        $r9 = staticinvoke <twitter4j.auth.OAuthAuthorization: java.lang.String normalizeRequestParameters(java.util.List)>($r8);

        $r9 = staticinvoke <twitter4j.internal.http.HttpParameter: java.lang.String encode(java.lang.String)>($r9);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = <twitter4j.auth.OAuthAuthorization: twitter4j.internal.logging.Logger logger>;

        virtualinvoke $r13.<twitter4j.internal.logging.Logger: void debug(java.lang.String,java.lang.String)>("OAuth base string: ", $r9);

        $r9 = virtualinvoke $r0.<twitter4j.auth.OAuthAuthorization: java.lang.String generateSignature(java.lang.String,twitter4j.auth.OAuthToken)>($r9, $r6);

        $r13 = <twitter4j.auth.OAuthAuthorization: twitter4j.internal.logging.Logger logger>;

        virtualinvoke $r13.<twitter4j.internal.logging.Logger: void debug(java.lang.String,java.lang.String)>("OAuth signature: ", $r9);

        $r10 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r10.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("oauth_signature", $r9);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r10);

        $r9 = $r0.<twitter4j.auth.OAuthAuthorization: java.lang.String realm>;

        if $r9 == null goto label4;

        $r10 = new twitter4j.internal.http.HttpParameter;

        $r9 = $r0.<twitter4j.auth.OAuthAuthorization: java.lang.String realm>;

        specialinvoke $r10.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("realm", $r9);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r10);

     label4:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OAuth ");

        $r9 = staticinvoke <twitter4j.auth.OAuthAuthorization: java.lang.String encodeParameters(java.util.List,java.lang.String,boolean)>($r7, ",", 1);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    java.lang.String generateAuthorizationHeader(java.lang.String, java.lang.String, twitter4j.internal.http.HttpParameter[], twitter4j.auth.OAuthToken)
    {
        twitter4j.auth.OAuthAuthorization $r0;
        java.lang.String $r1, $r2, $r6, $r7;
        twitter4j.internal.http.HttpParameter[] $r3;
        twitter4j.auth.OAuthToken $r4;
        long $l0, $l1;
        java.util.Random $r5;
        int $i2;

        $r0 := @this: twitter4j.auth.OAuthAuthorization;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: twitter4j.internal.http.HttpParameter[];

        $r4 := @parameter3: twitter4j.auth.OAuthToken;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l1 = $l1 / 1000L;

        $r5 = <twitter4j.auth.OAuthAuthorization: java.util.Random RAND>;

        $i2 = virtualinvoke $r5.<java.util.Random: int nextInt()>();

        $l0 = (long) $i2;

        $l0 = $l1 + $l0;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l0);

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l1);

        $r7 = virtualinvoke $r0.<twitter4j.auth.OAuthAuthorization: java.lang.String generateAuthorizationHeader(java.lang.String,java.lang.String,twitter4j.internal.http.HttpParameter[],java.lang.String,java.lang.String,twitter4j.auth.OAuthToken)>($r1, $r2, $r3, $r6, $r7, $r4);

        return $r7;
    }

    public java.util.List generateOAuthSignatureHttpParams(java.lang.String, java.lang.String)
    {
        twitter4j.auth.OAuthAuthorization $r0;
        java.lang.String $r1, $r2, $r7;
        long $l0, $l1;
        java.util.ArrayList $r3, $r4;
        java.util.Random $r5;
        int $i2;
        twitter4j.internal.http.HttpParameter $r6;
        twitter4j.auth.OAuthToken $r8;
        java.lang.StringBuilder $r9;

        $r0 := @this: twitter4j.auth.OAuthAuthorization;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l1 = $l1 / 1000L;

        $r5 = <twitter4j.auth.OAuthAuthorization: java.util.Random RAND>;

        $i2 = virtualinvoke $r5.<java.util.Random: int nextInt()>();

        $l0 = (long) $i2;

        $l0 = $l1 + $l0;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>(5);

        $r6 = new twitter4j.internal.http.HttpParameter;

        $r7 = $r0.<twitter4j.auth.OAuthAuthorization: java.lang.String consumerKey>;

        specialinvoke $r6.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("oauth_consumer_key", $r7);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r6);

        $r6 = <twitter4j.auth.OAuthAuthorization: twitter4j.internal.http.HttpParameter OAUTH_SIGNATURE_METHOD>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r6);

        $r6 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r6.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,long)>("oauth_timestamp", $l1);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r6);

        $r6 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r6.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,long)>("oauth_nonce", $l0);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r6);

        $r6 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r6.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("oauth_version", "1.0");

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r6);

        $r8 = $r0.<twitter4j.auth.OAuthAuthorization: twitter4j.auth.OAuthToken oauthToken>;

        if $r8 == null goto label1;

        $r6 = new twitter4j.internal.http.HttpParameter;

        $r8 = $r0.<twitter4j.auth.OAuthAuthorization: twitter4j.auth.OAuthToken oauthToken>;

        $r7 = virtualinvoke $r8.<twitter4j.auth.OAuthToken: java.lang.String getToken()>();

        specialinvoke $r6.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("oauth_token", $r7);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r6);

     label1:
        $r4 = new java.util.ArrayList;

        $i2 = interfaceinvoke $r3.<java.util.List: int size()>();

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>($i2);

        interfaceinvoke $r4.<java.util.List: boolean addAll(java.util.Collection)>($r3);

        specialinvoke $r0.<twitter4j.auth.OAuthAuthorization: void parseGetParameters(java.lang.String,java.util.List)>($r2, $r4);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

        $r7 = staticinvoke <twitter4j.auth.OAuthAuthorization: java.lang.String constructRequestURL(java.lang.String)>($r2);

        $r7 = staticinvoke <twitter4j.internal.http.HttpParameter: java.lang.String encode(java.lang.String)>($r7);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

        $r7 = staticinvoke <twitter4j.auth.OAuthAuthorization: java.lang.String normalizeRequestParameters(java.util.List)>($r4);

        $r7 = staticinvoke <twitter4j.internal.http.HttpParameter: java.lang.String encode(java.lang.String)>($r7);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = $r0.<twitter4j.auth.OAuthAuthorization: twitter4j.auth.OAuthToken oauthToken>;

        $r7 = virtualinvoke $r0.<twitter4j.auth.OAuthAuthorization: java.lang.String generateSignature(java.lang.String,twitter4j.auth.OAuthToken)>($r7, $r8);

        $r6 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r6.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("oauth_signature", $r7);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r6);

        return $r3;
    }

    java.lang.String generateSignature(java.lang.String)
    {
        twitter4j.auth.OAuthAuthorization $r0;
        java.lang.String $r1;

        $r0 := @this: twitter4j.auth.OAuthAuthorization;

        $r1 := @parameter0: java.lang.String;

        $r1 = virtualinvoke $r0.<twitter4j.auth.OAuthAuthorization: java.lang.String generateSignature(java.lang.String,twitter4j.auth.OAuthToken)>($r1, null);

        return $r1;
    }

    java.lang.String generateSignature(java.lang.String, twitter4j.auth.OAuthToken)
    {
        twitter4j.auth.OAuthAuthorization $r0;
        java.lang.String $r1, $r6;
        twitter4j.auth.OAuthToken $r2;
        java.security.InvalidKeyException $r3;
        java.security.NoSuchAlgorithmException $r4;
        javax.crypto.spec.SecretKeySpec $r5, $r10;
        javax.crypto.Mac $r7;
        java.lang.StringBuilder $r8;
        byte[] $r9;
        twitter4j.internal.logging.Logger $r11;
        java.lang.AssertionError $r12;

        $r0 := @this: twitter4j.auth.OAuthAuthorization;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: twitter4j.auth.OAuthToken;

     label1:
        $r7 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>("HmacSHA1");

        if $r2 != null goto label4;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r6 = $r0.<twitter4j.auth.OAuthAuthorization: java.lang.String consumerSecret>;

        $r6 = staticinvoke <twitter4j.internal.http.HttpParameter: java.lang.String encode(java.lang.String)>($r6);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = new javax.crypto.spec.SecretKeySpec;

        $r9 = virtualinvoke $r6.<java.lang.String: byte[] getBytes()>();

        specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, "HmacSHA1");

     label2:
        virtualinvoke $r7.<javax.crypto.Mac: void init(java.security.Key)>($r5);

        $r9 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        $r9 = virtualinvoke $r7.<javax.crypto.Mac: byte[] doFinal(byte[])>($r9);

     label3:
        $r6 = staticinvoke <twitter4j.internal.http.BASE64Encoder: java.lang.String encode(byte[])>($r9);

        return $r6;

     label4:
        $r10 = virtualinvoke $r2.<twitter4j.auth.OAuthToken: javax.crypto.spec.SecretKeySpec getSecretKeySpec()>();

     label5:
        $r5 = $r10;

     label6:
        if $r10 != null goto label2;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r6 = $r0.<twitter4j.auth.OAuthAuthorization: java.lang.String consumerSecret>;

        $r6 = staticinvoke <twitter4j.internal.http.HttpParameter: java.lang.String encode(java.lang.String)>($r6);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

        $r6 = virtualinvoke $r2.<twitter4j.auth.OAuthToken: java.lang.String getTokenSecret()>();

        $r6 = staticinvoke <twitter4j.internal.http.HttpParameter: java.lang.String encode(java.lang.String)>($r6);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = new javax.crypto.spec.SecretKeySpec;

        $r9 = virtualinvoke $r6.<java.lang.String: byte[] getBytes()>();

        specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, "HmacSHA1");

        virtualinvoke $r2.<twitter4j.auth.OAuthToken: void setSecretKeySpec(javax.crypto.spec.SecretKeySpec)>($r5);

     label7:
        goto label2;

     label8:
        $r3 := @caughtexception;

        $r11 = <twitter4j.auth.OAuthAuthorization: twitter4j.internal.logging.Logger logger>;

        virtualinvoke $r11.<twitter4j.internal.logging.Logger: void error(java.lang.String,java.lang.Throwable)>("Failed initialize \"Message Authentication Code\" (MAC)", $r3);

        $r12 = new java.lang.AssertionError;

        specialinvoke $r12.<java.lang.AssertionError: void <init>(java.lang.Object)>($r3);

        throw $r12;

     label9:
        $r4 := @caughtexception;

        $r11 = <twitter4j.auth.OAuthAuthorization: twitter4j.internal.logging.Logger logger>;

        virtualinvoke $r11.<twitter4j.internal.logging.Logger: void error(java.lang.String,java.lang.Throwable)>("Failed to get HmacSHA1 \"Message Authentication Code\" (MAC)", $r4);

        $r12 = new java.lang.AssertionError;

        specialinvoke $r12.<java.lang.AssertionError: void <init>(java.lang.Object)>($r4);

        throw $r12;

        catch java.security.InvalidKeyException from label1 to label3 with label8;
        catch java.security.NoSuchAlgorithmException from label1 to label3 with label9;
        catch java.security.InvalidKeyException from label4 to label5 with label8;
        catch java.security.InvalidKeyException from label6 to label7 with label8;
        catch java.security.NoSuchAlgorithmException from label4 to label5 with label9;
        catch java.security.NoSuchAlgorithmException from label6 to label7 with label9;
    }

    public java.lang.String getAuthorizationHeader(twitter4j.internal.http.HttpRequest)
    {
        twitter4j.auth.OAuthAuthorization $r0;
        twitter4j.internal.http.HttpRequest $r1;
        twitter4j.auth.OAuthToken $r2;
        twitter4j.internal.http.RequestMethod $r3;
        java.lang.String $r4, $r5;
        twitter4j.internal.http.HttpParameter[] $r6;

        $r0 := @this: twitter4j.auth.OAuthAuthorization;

        $r1 := @parameter0: twitter4j.internal.http.HttpRequest;

        $r3 = virtualinvoke $r1.<twitter4j.internal.http.HttpRequest: twitter4j.internal.http.RequestMethod getMethod()>();

        $r4 = virtualinvoke $r3.<twitter4j.internal.http.RequestMethod: java.lang.String name()>();

        $r5 = virtualinvoke $r1.<twitter4j.internal.http.HttpRequest: java.lang.String getURL()>();

        $r6 = virtualinvoke $r1.<twitter4j.internal.http.HttpRequest: twitter4j.internal.http.HttpParameter[] getParameters()>();

        $r2 = $r0.<twitter4j.auth.OAuthAuthorization: twitter4j.auth.OAuthToken oauthToken>;

        $r5 = virtualinvoke $r0.<twitter4j.auth.OAuthAuthorization: java.lang.String generateAuthorizationHeader(java.lang.String,java.lang.String,twitter4j.internal.http.HttpParameter[],twitter4j.auth.OAuthToken)>($r4, $r5, $r6, $r2);

        return $r5;
    }

    public twitter4j.auth.AccessToken getOAuthAccessToken() throws twitter4j.TwitterException
    {
        twitter4j.auth.OAuthAuthorization $r0;
        twitter4j.auth.OAuthToken $r1;
        twitter4j.internal.http.HttpClientWrapper $r2;
        twitter4j.conf.Configuration $r3;
        java.lang.String $r4;
        boolean $z0;
        twitter4j.auth.AccessToken $r5;
        twitter4j.internal.http.HttpResponse $r6;

        $r0 := @this: twitter4j.auth.OAuthAuthorization;

        specialinvoke $r0.<twitter4j.auth.OAuthAuthorization: void ensureTokenIsAvailable()>();

        $r1 = $r0.<twitter4j.auth.OAuthAuthorization: twitter4j.auth.OAuthToken oauthToken>;

        $z0 = $r1 instanceof twitter4j.auth.AccessToken;

        if $z0 == 0 goto label1;

        $r1 = $r0.<twitter4j.auth.OAuthAuthorization: twitter4j.auth.OAuthToken oauthToken>;

        $r5 = (twitter4j.auth.AccessToken) $r1;

        return $r5;

     label1:
        $r5 = new twitter4j.auth.AccessToken;

        $r2 = <twitter4j.auth.OAuthAuthorization: twitter4j.internal.http.HttpClientWrapper http>;

        $r3 = $r0.<twitter4j.auth.OAuthAuthorization: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getOAuthAccessTokenURL()>();

        $r6 = virtualinvoke $r2.<twitter4j.internal.http.HttpClientWrapper: twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.auth.Authorization)>($r4, $r0);

        specialinvoke $r5.<twitter4j.auth.AccessToken: void <init>(twitter4j.internal.http.HttpResponse)>($r6);

        $r0.<twitter4j.auth.OAuthAuthorization: twitter4j.auth.OAuthToken oauthToken> = $r5;

        $r1 = $r0.<twitter4j.auth.OAuthAuthorization: twitter4j.auth.OAuthToken oauthToken>;

        $r5 = (twitter4j.auth.AccessToken) $r1;

        return $r5;
    }

    public twitter4j.auth.AccessToken getOAuthAccessToken(java.lang.String) throws twitter4j.TwitterException
    {
        twitter4j.auth.OAuthAuthorization $r0;
        java.lang.String $r1, $r6;
        twitter4j.auth.AccessToken $r2;
        twitter4j.internal.http.HttpClientWrapper $r3;
        twitter4j.conf.Configuration $r4;
        twitter4j.internal.http.HttpParameter $r5;
        twitter4j.internal.http.HttpParameter[] $r7;
        twitter4j.internal.http.HttpResponse $r8;
        twitter4j.auth.OAuthToken $r9;

        $r0 := @this: twitter4j.auth.OAuthAuthorization;

        $r1 := @parameter0: java.lang.String;

        specialinvoke $r0.<twitter4j.auth.OAuthAuthorization: void ensureTokenIsAvailable()>();

        $r2 = new twitter4j.auth.AccessToken;

        $r3 = <twitter4j.auth.OAuthAuthorization: twitter4j.internal.http.HttpClientWrapper http>;

        $r4 = $r0.<twitter4j.auth.OAuthAuthorization: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getOAuthAccessTokenURL()>();

        $r7 = newarray (twitter4j.internal.http.HttpParameter)[1];

        $r5 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r5.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("oauth_verifier", $r1);

        $r7[0] = $r5;

        $r8 = virtualinvoke $r3.<twitter4j.internal.http.HttpClientWrapper: twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[],twitter4j.auth.Authorization)>($r6, $r7, $r0);

        specialinvoke $r2.<twitter4j.auth.AccessToken: void <init>(twitter4j.internal.http.HttpResponse)>($r8);

        $r0.<twitter4j.auth.OAuthAuthorization: twitter4j.auth.OAuthToken oauthToken> = $r2;

        $r9 = $r0.<twitter4j.auth.OAuthAuthorization: twitter4j.auth.OAuthToken oauthToken>;

        $r2 = (twitter4j.auth.AccessToken) $r9;

        return $r2;
    }

    public twitter4j.auth.AccessToken getOAuthAccessToken(java.lang.String, java.lang.String) throws twitter4j.TwitterException
    {
        twitter4j.auth.OAuthAuthorization $r0;
        java.lang.String $r1, $r2, $r4, $r7;
        twitter4j.TwitterException $r3, $r14;
        twitter4j.conf.Configuration $r5;
        twitter4j.internal.http.HttpParameter $r6;
        int $i0;
        java.lang.StringBuilder $r8;
        twitter4j.auth.AccessToken $r9;
        twitter4j.internal.http.HttpClientWrapper $r10;
        twitter4j.internal.http.HttpParameter[] $r11;
        twitter4j.internal.http.HttpResponse $r12;
        twitter4j.auth.OAuthToken $r13;

        $r0 := @this: twitter4j.auth.OAuthAuthorization;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r5 = $r0.<twitter4j.auth.OAuthAuthorization: twitter4j.conf.Configuration conf>;

     label01:
        $r7 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getOAuthAccessTokenURL()>();

        $r4 = $r7;

        $i0 = virtualinvoke $r7.<java.lang.String: int indexOf(java.lang.String)>("http://");

     label02:
        if $i0 != 0 goto label05;

     label03:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("https://");

        $r7 = virtualinvoke $r7.<java.lang.String: java.lang.String substring(int)>(7);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

     label04:
        $r4 = $r7;

     label05:
        $r9 = new twitter4j.auth.AccessToken;

        $r10 = <twitter4j.auth.OAuthAuthorization: twitter4j.internal.http.HttpClientWrapper http>;

        $r11 = newarray (twitter4j.internal.http.HttpParameter)[3];

     label06:
        $r6 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r6.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("x_auth_username", $r1);

     label07:
        $r11[0] = $r6;

     label08:
        $r6 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r6.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("x_auth_password", $r2);

     label09:
        $r11[1] = $r6;

     label10:
        $r6 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r6.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("x_auth_mode", "client_auth");

        $r11[2] = $r6;

        $r12 = virtualinvoke $r10.<twitter4j.internal.http.HttpClientWrapper: twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[],twitter4j.auth.Authorization)>($r4, $r11, $r0);

        specialinvoke $r9.<twitter4j.auth.AccessToken: void <init>(twitter4j.internal.http.HttpResponse)>($r12);

     label11:
        $r0.<twitter4j.auth.OAuthAuthorization: twitter4j.auth.OAuthToken oauthToken> = $r9;

        $r13 = $r0.<twitter4j.auth.OAuthAuthorization: twitter4j.auth.OAuthToken oauthToken>;

        $r9 = (twitter4j.auth.AccessToken) $r13;

        return $r9;

     label12:
        $r3 := @caughtexception;

        $r14 = new twitter4j.TwitterException;

        $i0 = virtualinvoke $r3.<twitter4j.TwitterException: int getStatusCode()>();

        specialinvoke $r14.<twitter4j.TwitterException: void <init>(java.lang.String,java.lang.Exception,int)>("The screen name / password combination seems to be invalid.", $r3, $i0);

        throw $r14;

        catch twitter4j.TwitterException from label01 to label02 with label12;
        catch twitter4j.TwitterException from label03 to label04 with label12;
        catch twitter4j.TwitterException from label06 to label07 with label12;
        catch twitter4j.TwitterException from label08 to label09 with label12;
        catch twitter4j.TwitterException from label10 to label11 with label12;
    }

    public twitter4j.auth.AccessToken getOAuthAccessToken(twitter4j.auth.RequestToken) throws twitter4j.TwitterException
    {
        twitter4j.auth.OAuthAuthorization $r0;
        twitter4j.auth.RequestToken $r1;
        twitter4j.auth.AccessToken $r2;

        $r0 := @this: twitter4j.auth.OAuthAuthorization;

        $r1 := @parameter0: twitter4j.auth.RequestToken;

        $r0.<twitter4j.auth.OAuthAuthorization: twitter4j.auth.OAuthToken oauthToken> = $r1;

        $r2 = virtualinvoke $r0.<twitter4j.auth.OAuthAuthorization: twitter4j.auth.AccessToken getOAuthAccessToken()>();

        return $r2;
    }

    public twitter4j.auth.AccessToken getOAuthAccessToken(twitter4j.auth.RequestToken, java.lang.String) throws twitter4j.TwitterException
    {
        twitter4j.auth.OAuthAuthorization $r0;
        twitter4j.auth.RequestToken $r1;
        java.lang.String $r2;
        twitter4j.auth.AccessToken $r3;

        $r0 := @this: twitter4j.auth.OAuthAuthorization;

        $r1 := @parameter0: twitter4j.auth.RequestToken;

        $r2 := @parameter1: java.lang.String;

        $r0.<twitter4j.auth.OAuthAuthorization: twitter4j.auth.OAuthToken oauthToken> = $r1;

        $r3 = virtualinvoke $r0.<twitter4j.auth.OAuthAuthorization: twitter4j.auth.AccessToken getOAuthAccessToken(java.lang.String)>($r2);

        return $r3;
    }

    public twitter4j.auth.RequestToken getOAuthRequestToken() throws twitter4j.TwitterException
    {
        twitter4j.auth.OAuthAuthorization $r0;
        twitter4j.auth.RequestToken $r1;

        $r0 := @this: twitter4j.auth.OAuthAuthorization;

        $r1 = virtualinvoke $r0.<twitter4j.auth.OAuthAuthorization: twitter4j.auth.RequestToken getOAuthRequestToken(java.lang.String,java.lang.String)>(null, null);

        return $r1;
    }

    public twitter4j.auth.RequestToken getOAuthRequestToken(java.lang.String) throws twitter4j.TwitterException
    {
        twitter4j.auth.OAuthAuthorization $r0;
        java.lang.String $r1;
        twitter4j.auth.RequestToken $r2;

        $r0 := @this: twitter4j.auth.OAuthAuthorization;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke $r0.<twitter4j.auth.OAuthAuthorization: twitter4j.auth.RequestToken getOAuthRequestToken(java.lang.String,java.lang.String)>($r1, null);

        return $r2;
    }

    public twitter4j.auth.RequestToken getOAuthRequestToken(java.lang.String, java.lang.String) throws twitter4j.TwitterException
    {
        twitter4j.auth.OAuthAuthorization $r0;
        java.lang.String $r1, $r2;
        java.util.ArrayList $r3;
        twitter4j.auth.OAuthToken $r4;
        twitter4j.internal.http.HttpClientWrapper $r5;
        boolean $z0;
        java.lang.IllegalStateException $r6;
        twitter4j.internal.http.HttpParameter $r7;
        twitter4j.auth.RequestToken $r8;
        twitter4j.conf.Configuration $r9;
        int $i0;
        twitter4j.internal.http.HttpParameter[] $r10;
        java.lang.Object[] $r11;
        twitter4j.internal.http.HttpResponse $r12;

        $r0 := @this: twitter4j.auth.OAuthAuthorization;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r4 = $r0.<twitter4j.auth.OAuthAuthorization: twitter4j.auth.OAuthToken oauthToken>;

        $z0 = $r4 instanceof twitter4j.auth.AccessToken;

        if $z0 == 0 goto label1;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Access token already available.");

        throw $r6;

     label1:
        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        if $r1 == null goto label2;

        $r7 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r7.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("oauth_callback", $r1);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r7);

     label2:
        if $r2 == null goto label3;

        $r7 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r7.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("x_auth_access_type", $r2);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r7);

     label3:
        $r8 = new twitter4j.auth.RequestToken;

        $r5 = <twitter4j.auth.OAuthAuthorization: twitter4j.internal.http.HttpClientWrapper http>;

        $r9 = $r0.<twitter4j.auth.OAuthAuthorization: twitter4j.conf.Configuration conf>;

        $r2 = interfaceinvoke $r9.<twitter4j.conf.Configuration: java.lang.String getOAuthRequestTokenURL()>();

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        $r10 = newarray (twitter4j.internal.http.HttpParameter)[$i0];

        $r11 = interfaceinvoke $r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10);

        $r10 = (twitter4j.internal.http.HttpParameter[]) $r11;

        $r12 = virtualinvoke $r5.<twitter4j.internal.http.HttpClientWrapper: twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[],twitter4j.auth.Authorization)>($r2, $r10, $r0);

        specialinvoke $r8.<twitter4j.auth.RequestToken: void <init>(twitter4j.internal.http.HttpResponse,twitter4j.auth.OAuthSupport)>($r12, $r0);

        $r0.<twitter4j.auth.OAuthAuthorization: twitter4j.auth.OAuthToken oauthToken> = $r8;

        $r4 = $r0.<twitter4j.auth.OAuthAuthorization: twitter4j.auth.OAuthToken oauthToken>;

        $r8 = (twitter4j.auth.RequestToken) $r4;

        return $r8;
    }

    public int hashCode()
    {
        twitter4j.auth.OAuthAuthorization $r0;
        int $i0, $i1, $i2;
        java.lang.String $r1;
        twitter4j.auth.OAuthToken $r2;

        $r0 := @this: twitter4j.auth.OAuthAuthorization;

        $i1 = 0;

        $r1 = $r0.<twitter4j.auth.OAuthAuthorization: java.lang.String consumerKey>;

        if $r1 == null goto label4;

        $r1 = $r0.<twitter4j.auth.OAuthAuthorization: java.lang.String consumerKey>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

     label1:
        $i0 = $i0 * 31;

        $r1 = $r0.<twitter4j.auth.OAuthAuthorization: java.lang.String consumerSecret>;

        if $r1 == null goto label5;

        $r1 = $r0.<twitter4j.auth.OAuthAuthorization: java.lang.String consumerSecret>;

        $i2 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

     label2:
        $i2 = $i0 + $i2;

        $i2 = $i2 * 31;

        $r2 = $r0.<twitter4j.auth.OAuthAuthorization: twitter4j.auth.OAuthToken oauthToken>;

        if $r2 == null goto label3;

        $r2 = $r0.<twitter4j.auth.OAuthAuthorization: twitter4j.auth.OAuthToken oauthToken>;

        $i1 = virtualinvoke $r2.<twitter4j.auth.OAuthToken: int hashCode()>();

     label3:
        $i2 = $i2 + $i1;

        return $i2;

     label4:
        $i0 = 0;

        goto label1;

     label5:
        $i2 = 0;

        goto label2;
    }

    public boolean isEnabled()
    {
        twitter4j.auth.OAuthAuthorization $r0;
        twitter4j.auth.OAuthToken $r1;
        boolean $z0;

        $r0 := @this: twitter4j.auth.OAuthAuthorization;

        $r1 = $r0.<twitter4j.auth.OAuthAuthorization: twitter4j.auth.OAuthToken oauthToken>;

        if $r1 == null goto label1;

        $r1 = $r0.<twitter4j.auth.OAuthAuthorization: twitter4j.auth.OAuthToken oauthToken>;

        $z0 = $r1 instanceof twitter4j.auth.AccessToken;

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void setOAuthAccessToken(twitter4j.auth.AccessToken)
    {
        twitter4j.auth.OAuthAuthorization $r0;
        twitter4j.auth.AccessToken $r1;

        $r0 := @this: twitter4j.auth.OAuthAuthorization;

        $r1 := @parameter0: twitter4j.auth.AccessToken;

        $r0.<twitter4j.auth.OAuthAuthorization: twitter4j.auth.OAuthToken oauthToken> = $r1;

        return;
    }

    public void setOAuthConsumer(java.lang.String, java.lang.String)
    {
        twitter4j.auth.OAuthAuthorization $r0;
        java.lang.String $r1, $r2;

        $r0 := @this: twitter4j.auth.OAuthAuthorization;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        if $r1 == null goto label3;

     label1:
        $r0.<twitter4j.auth.OAuthAuthorization: java.lang.String consumerKey> = $r1;

        if $r2 == null goto label4;

     label2:
        $r0.<twitter4j.auth.OAuthAuthorization: java.lang.String consumerSecret> = $r2;

        return;

     label3:
        $r1 = "";

        goto label1;

     label4:
        $r2 = "";

        goto label2;
    }

    public void setOAuthRealm(java.lang.String)
    {
        twitter4j.auth.OAuthAuthorization $r0;
        java.lang.String $r1;

        $r0 := @this: twitter4j.auth.OAuthAuthorization;

        $r1 := @parameter0: java.lang.String;

        $r0.<twitter4j.auth.OAuthAuthorization: java.lang.String realm> = $r1;

        return;
    }

    public java.lang.String toString()
    {
        twitter4j.auth.OAuthAuthorization $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        twitter4j.auth.OAuthToken $r3;

        $r0 := @this: twitter4j.auth.OAuthAuthorization;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OAuthAuthorization{consumerKey=\'");

        $r2 = $r0.<twitter4j.auth.OAuthAuthorization: java.lang.String consumerKey>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", consumerSecret=\'******************************************\'");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", oauthToken=");

        $r3 = $r0.<twitter4j.auth.OAuthAuthorization: twitter4j.auth.OAuthToken oauthToken>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
}
