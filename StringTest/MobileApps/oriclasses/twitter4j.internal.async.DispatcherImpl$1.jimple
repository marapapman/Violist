class twitter4j.internal.async.DispatcherImpl$1 extends java.lang.Thread
{
    final twitter4j.internal.async.DispatcherImpl this$0;

    void <init>(twitter4j.internal.async.DispatcherImpl)
    {
        twitter4j.internal.async.DispatcherImpl$1 $r0;
        twitter4j.internal.async.DispatcherImpl $r1;

        $r0 := @this: twitter4j.internal.async.DispatcherImpl$1;

        $r1 := @parameter0: twitter4j.internal.async.DispatcherImpl;

        $r0.<twitter4j.internal.async.DispatcherImpl$1: twitter4j.internal.async.DispatcherImpl this$0> = $r1;

        specialinvoke $r0.<java.lang.Thread: void <init>()>();

        return;
    }

    public void run()
    {
        twitter4j.internal.async.DispatcherImpl$1 $r0;
        twitter4j.internal.async.DispatcherImpl $r1;
        boolean $z0;

        $r0 := @this: twitter4j.internal.async.DispatcherImpl$1;

        $r1 = $r0.<twitter4j.internal.async.DispatcherImpl$1: twitter4j.internal.async.DispatcherImpl this$0>;

        $z0 = staticinvoke <twitter4j.internal.async.DispatcherImpl: boolean access$000(twitter4j.internal.async.DispatcherImpl)>($r1);

        if $z0 == 0 goto label1;

        $r1 = $r0.<twitter4j.internal.async.DispatcherImpl$1: twitter4j.internal.async.DispatcherImpl this$0>;

        virtualinvoke $r1.<twitter4j.internal.async.DispatcherImpl: void shutdown()>();

        return;

     label1:
        return;
    }
}
