final class com.nostra13.universalimageloader.core.LoadAndDisplayImageTask extends java.lang.Object implements java.lang.Runnable
{
    private static final int ATTEMPT_COUNT_TO_DECODE_BITMAP;
    private static final int BUFFER_SIZE;
    private static final java.lang.String LOG_CACHE_IMAGE_IN_MEMORY;
    private static final java.lang.String LOG_CACHE_IMAGE_ON_DISC;
    private static final java.lang.String LOG_DELAY_BEFORE_LOADING;
    private static final java.lang.String LOG_GET_IMAGE_FROM_MEMORY_CACHE_AFTER_WAITING;
    private static final java.lang.String LOG_LOAD_IMAGE_FROM_DISC_CACHE;
    private static final java.lang.String LOG_LOAD_IMAGE_FROM_INTERNET;
    private static final java.lang.String LOG_RESUME_AFTER_PAUSE;
    private static final java.lang.String LOG_START_DISPLAY_IMAGE_TASK;
    private static final java.lang.String LOG_TASK_CANCELLED;
    private static final java.lang.String LOG_TASK_INTERRUPTED;
    private static final java.lang.String LOG_WAITING_FOR_IMAGE_LOADED;
    private static final java.lang.String LOG_WAITING_FOR_RESUME;
    private final com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration;
    private final com.nostra13.universalimageloader.core.download.ImageDownloader downloader;
    private final android.os.Handler handler;
    private final com.nostra13.universalimageloader.core.ImageLoadingInfo imageLoadingInfo;
    private final android.widget.ImageView imageView;
    private final com.nostra13.universalimageloader.core.assist.ImageLoadingListener listener;
    private final boolean loggingEnabled;
    private final java.lang.String memoryCacheKey;
    private final com.nostra13.universalimageloader.core.DisplayImageOptions options;
    private final com.nostra13.universalimageloader.core.assist.ImageSize targetSize;
    private final java.lang.String uri;

    public void <init>(com.nostra13.universalimageloader.core.ImageLoaderConfiguration, com.nostra13.universalimageloader.core.ImageLoadingInfo, android.os.Handler)
    {
        com.nostra13.universalimageloader.core.LoadAndDisplayImageTask $r0;
        com.nostra13.universalimageloader.core.ImageLoaderConfiguration $r1;
        com.nostra13.universalimageloader.core.ImageLoadingInfo $r2;
        android.os.Handler $r3;
        com.nostra13.universalimageloader.core.download.ImageDownloader $r4;
        boolean $z0;
        java.lang.String $r5;
        android.widget.ImageView $r6;
        com.nostra13.universalimageloader.core.assist.ImageSize $r7;
        com.nostra13.universalimageloader.core.DisplayImageOptions $r8;
        com.nostra13.universalimageloader.core.assist.ImageLoadingListener $r9;

        $r0 := @this: com.nostra13.universalimageloader.core.LoadAndDisplayImageTask;

        $r1 := @parameter0: com.nostra13.universalimageloader.core.ImageLoaderConfiguration;

        $r2 := @parameter1: com.nostra13.universalimageloader.core.ImageLoadingInfo;

        $r3 := @parameter2: android.os.Handler;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration> = $r1;

        $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.ImageLoadingInfo imageLoadingInfo> = $r2;

        $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: android.os.Handler handler> = $r3;

        $r4 = $r1.<com.nostra13.universalimageloader.core.ImageLoaderConfiguration: com.nostra13.universalimageloader.core.download.ImageDownloader downloader>;

        $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.download.ImageDownloader downloader> = $r4;

        $z0 = $r1.<com.nostra13.universalimageloader.core.ImageLoaderConfiguration: boolean loggingEnabled>;

        $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: boolean loggingEnabled> = $z0;

        $r5 = $r2.<com.nostra13.universalimageloader.core.ImageLoadingInfo: java.lang.String uri>;

        $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String uri> = $r5;

        $r5 = $r2.<com.nostra13.universalimageloader.core.ImageLoadingInfo: java.lang.String memoryCacheKey>;

        $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String memoryCacheKey> = $r5;

        $r6 = $r2.<com.nostra13.universalimageloader.core.ImageLoadingInfo: android.widget.ImageView imageView>;

        $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: android.widget.ImageView imageView> = $r6;

        $r7 = $r2.<com.nostra13.universalimageloader.core.ImageLoadingInfo: com.nostra13.universalimageloader.core.assist.ImageSize targetSize>;

        $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.assist.ImageSize targetSize> = $r7;

        $r8 = $r2.<com.nostra13.universalimageloader.core.ImageLoadingInfo: com.nostra13.universalimageloader.core.DisplayImageOptions options>;

        $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.DisplayImageOptions options> = $r8;

        $r9 = $r2.<com.nostra13.universalimageloader.core.ImageLoadingInfo: com.nostra13.universalimageloader.core.assist.ImageLoadingListener listener>;

        $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.assist.ImageLoadingListener listener> = $r9;

        return;
    }

    static com.nostra13.universalimageloader.core.assist.ImageLoadingListener access$000(com.nostra13.universalimageloader.core.LoadAndDisplayImageTask)
    {
        com.nostra13.universalimageloader.core.LoadAndDisplayImageTask $r0;
        com.nostra13.universalimageloader.core.assist.ImageLoadingListener r1;

        $r0 := @parameter0: com.nostra13.universalimageloader.core.LoadAndDisplayImageTask;

        r1 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.assist.ImageLoadingListener listener>;

        return r1;
    }

    private boolean checkTaskIsInterrupted()
    {
        com.nostra13.universalimageloader.core.LoadAndDisplayImageTask $r0;
        boolean $z0, $z1;
        java.lang.String $r1;
        java.lang.Object[] $r2;

        $r0 := @this: com.nostra13.universalimageloader.core.LoadAndDisplayImageTask;

        $z1 = staticinvoke <java.lang.Thread: boolean interrupted()>();

        $z0 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: boolean loggingEnabled>;

        if $z0 == 0 goto label1;

        if $z1 == 0 goto label2;

        $r2 = newarray (java.lang.Object)[1];

        $r1 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String memoryCacheKey>;

        $r2[0] = $r1;

        staticinvoke <com.nostra13.universalimageloader.utils.L: void e(java.lang.String,java.lang.Object[])>("Task was interrupted [%s]", $r2);

        return $z1;

     label1:
        return $z1;

     label2:
        return $z1;
    }

    private boolean checkTaskIsNotActual()
    {
        com.nostra13.universalimageloader.core.LoadAndDisplayImageTask $r0;
        boolean $z0, $z1;
        android.widget.ImageView $r1;
        com.nostra13.universalimageloader.core.ImageLoader $r2;
        java.lang.String $r3, $r4;
        android.os.Handler $r5;
        com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$1 $r6;
        java.lang.Object[] $r7;

        $r0 := @this: com.nostra13.universalimageloader.core.LoadAndDisplayImageTask;

        $r2 = staticinvoke <com.nostra13.universalimageloader.core.ImageLoader: com.nostra13.universalimageloader.core.ImageLoader getInstance()>();

        $r1 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: android.widget.ImageView imageView>;

        $r3 = virtualinvoke $r2.<com.nostra13.universalimageloader.core.ImageLoader: java.lang.String getLoadingUriForView(android.widget.ImageView)>($r1);

        $r4 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String memoryCacheKey>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label3;

        $z0 = 1;

     label1:
        if $z0 == 0 goto label2;

        $r5 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: android.os.Handler handler>;

        $r6 = new com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$1;

        specialinvoke $r6.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$1: void <init>(com.nostra13.universalimageloader.core.LoadAndDisplayImageTask)>($r0);

        virtualinvoke $r5.<android.os.Handler: boolean post(java.lang.Runnable)>($r6);

     label2:
        $z1 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: boolean loggingEnabled>;

        if $z1 == 0 goto label4;

        if $z0 == 0 goto label5;

        $r7 = newarray (java.lang.Object)[1];

        $r4 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String memoryCacheKey>;

        $r7[0] = $r4;

        staticinvoke <com.nostra13.universalimageloader.utils.L: void i(java.lang.String,java.lang.Object[])>("ImageView is reused for another image. Task is cancelled. [%s]", $r7);

        return $z0;

     label3:
        $z0 = 0;

        goto label1;

     label4:
        return $z0;

     label5:
        return $z0;
    }

    private android.graphics.Bitmap decodeImage(java.net.URI) throws java.io.IOException
    {
        com.nostra13.universalimageloader.core.LoadAndDisplayImageTask $r0;
        java.net.URI $r1;
        com.nostra13.universalimageloader.core.ImageDecoder $r2;
        com.nostra13.universalimageloader.core.ImageLoaderConfiguration $r3;
        com.nostra13.universalimageloader.core.DisplayImageOptions $r4;
        android.graphics.Bitmap $r5;
        boolean $z0;
        com.nostra13.universalimageloader.core.download.ImageDownloader $r6;
        android.widget.ImageView $r7;
        com.nostra13.universalimageloader.core.assist.ViewScaleType $r8;
        com.nostra13.universalimageloader.core.assist.ImageSize $r9;
        com.nostra13.universalimageloader.core.assist.ImageScaleType $r10;

        $r0 := @this: com.nostra13.universalimageloader.core.LoadAndDisplayImageTask;

        $r1 := @parameter0: java.net.URI;

        $r3 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration>;

        $z0 = $r3.<com.nostra13.universalimageloader.core.ImageLoaderConfiguration: boolean handleOutOfMemory>;

        if $z0 == 0 goto label1;

        $r5 = specialinvoke $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: android.graphics.Bitmap decodeWithOOMHandling(java.net.URI)>($r1);

        return $r5;

     label1:
        $r2 = new com.nostra13.universalimageloader.core.ImageDecoder;

        $r6 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.download.ImageDownloader downloader>;

        $r4 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.DisplayImageOptions options>;

        specialinvoke $r2.<com.nostra13.universalimageloader.core.ImageDecoder: void <init>(java.net.URI,com.nostra13.universalimageloader.core.download.ImageDownloader,com.nostra13.universalimageloader.core.DisplayImageOptions)>($r1, $r6, $r4);

        $z0 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: boolean loggingEnabled>;

        virtualinvoke $r2.<com.nostra13.universalimageloader.core.ImageDecoder: void setLoggingEnabled(boolean)>($z0);

        $r7 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: android.widget.ImageView imageView>;

        $r8 = staticinvoke <com.nostra13.universalimageloader.core.assist.ViewScaleType: com.nostra13.universalimageloader.core.assist.ViewScaleType fromImageView(android.widget.ImageView)>($r7);

        $r9 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.assist.ImageSize targetSize>;

        $r4 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.DisplayImageOptions options>;

        $r10 = virtualinvoke $r4.<com.nostra13.universalimageloader.core.DisplayImageOptions: com.nostra13.universalimageloader.core.assist.ImageScaleType getImageScaleType()>();

        $r5 = virtualinvoke $r2.<com.nostra13.universalimageloader.core.ImageDecoder: android.graphics.Bitmap decode(com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ImageScaleType,com.nostra13.universalimageloader.core.assist.ViewScaleType)>($r9, $r10, $r8);

        return $r5;
    }

    private android.graphics.Bitmap decodeWithOOMHandling(java.net.URI) throws java.io.IOException
    {
        com.nostra13.universalimageloader.core.LoadAndDisplayImageTask $r0;
        java.net.URI $r1;
        int $i0, $i1;
        com.nostra13.universalimageloader.core.ImageDecoder $r2;
        java.lang.OutOfMemoryError $r3;
        com.nostra13.universalimageloader.core.download.ImageDownloader $r4;
        com.nostra13.universalimageloader.core.DisplayImageOptions $r5;
        com.nostra13.universalimageloader.core.assist.ViewScaleType $r6;
        boolean $z0;
        android.widget.ImageView $r7;
        com.nostra13.universalimageloader.core.assist.ImageSize $r8;
        com.nostra13.universalimageloader.core.assist.ImageScaleType $r9;
        android.graphics.Bitmap $r10;
        long $l2;
        com.nostra13.universalimageloader.core.ImageLoaderConfiguration $r11;
        com.nostra13.universalimageloader.cache.memory.MemoryCacheAware $r12;

        $r0 := @this: com.nostra13.universalimageloader.core.LoadAndDisplayImageTask;

        $r1 := @parameter0: java.net.URI;

        $r2 = new com.nostra13.universalimageloader.core.ImageDecoder;

        $r4 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.download.ImageDownloader downloader>;

        $r5 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.DisplayImageOptions options>;

        specialinvoke $r2.<com.nostra13.universalimageloader.core.ImageDecoder: void <init>(java.net.URI,com.nostra13.universalimageloader.core.download.ImageDownloader,com.nostra13.universalimageloader.core.DisplayImageOptions)>($r1, $r4, $r5);

        $z0 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: boolean loggingEnabled>;

        virtualinvoke $r2.<com.nostra13.universalimageloader.core.ImageDecoder: void setLoggingEnabled(boolean)>($z0);

        $i0 = 1;

     label01:
        if $i0 > 3 goto label11;

     label02:
        $r7 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: android.widget.ImageView imageView>;

        $r6 = staticinvoke <com.nostra13.universalimageloader.core.assist.ViewScaleType: com.nostra13.universalimageloader.core.assist.ViewScaleType fromImageView(android.widget.ImageView)>($r7);

     label03:
        $r8 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.assist.ImageSize targetSize>;

     label04:
        $r5 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.DisplayImageOptions options>;

        $r9 = virtualinvoke $r5.<com.nostra13.universalimageloader.core.DisplayImageOptions: com.nostra13.universalimageloader.core.assist.ImageScaleType getImageScaleType()>();

        $r10 = virtualinvoke $r2.<com.nostra13.universalimageloader.core.ImageDecoder: android.graphics.Bitmap decode(com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ImageScaleType,com.nostra13.universalimageloader.core.assist.ViewScaleType)>($r8, $r9, $r6);

     label05:
        return $r10;

     label06:
        $r3 := @caughtexception;

        staticinvoke <com.nostra13.universalimageloader.utils.L: void e(java.lang.Throwable)>($r3);

        lookupswitch($i0)
        {
            case 1: goto label08;
            case 2: goto label09;
            case 3: goto label10;
            default: goto label07;
        };

     label07:
        $i1 = $i0 * 1000;

        $l2 = (long) $i1;

        staticinvoke <android.os.SystemClock: void sleep(long)>($l2);

        $i0 = $i0 + 1;

        goto label01;

     label08:
        staticinvoke <java.lang.System: void gc()>();

        goto label07;

     label09:
        $r11 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration>;

        $r12 = $r11.<com.nostra13.universalimageloader.core.ImageLoaderConfiguration: com.nostra13.universalimageloader.cache.memory.MemoryCacheAware memoryCache>;

        interfaceinvoke $r12.<com.nostra13.universalimageloader.cache.memory.MemoryCacheAware: void clear()>();

        staticinvoke <java.lang.System: void gc()>();

        goto label07;

     label10:
        throw $r3;

     label11:
        return null;

        catch java.lang.OutOfMemoryError from label02 to label03 with label06;
        catch java.lang.OutOfMemoryError from label04 to label05 with label06;
    }

    private void fireImageLoadingFailedEvent(com.nostra13.universalimageloader.core.assist.FailReason)
    {
        com.nostra13.universalimageloader.core.LoadAndDisplayImageTask $r0;
        com.nostra13.universalimageloader.core.assist.FailReason $r1;
        com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$2 $r2;
        boolean $z0;
        android.os.Handler $r3;

        $r0 := @this: com.nostra13.universalimageloader.core.LoadAndDisplayImageTask;

        $r1 := @parameter0: com.nostra13.universalimageloader.core.assist.FailReason;

        $z0 = staticinvoke <java.lang.Thread: boolean interrupted()>();

        if $z0 != 0 goto label1;

        $r3 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: android.os.Handler handler>;

        $r2 = new com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$2;

        specialinvoke $r2.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$2: void <init>(com.nostra13.universalimageloader.core.LoadAndDisplayImageTask,com.nostra13.universalimageloader.core.assist.FailReason)>($r0, $r1);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        return;

     label1:
        return;
    }

    private void saveImageOnDisc(java.io.File) throws java.io.IOException, java.net.URISyntaxException
    {
        com.nostra13.universalimageloader.core.LoadAndDisplayImageTask $r0;
        java.io.File $r1;
        com.nostra13.universalimageloader.core.ImageDecoder $r2;
        int $i0, $i1;
        java.io.BufferedOutputStream $r3;
        com.nostra13.universalimageloader.core.assist.ImageSize $r4;
        com.nostra13.universalimageloader.core.ImageLoaderConfiguration $r5;
        java.lang.String $r6;
        com.nostra13.universalimageloader.core.DisplayImageOptions $r7;
        android.graphics.Bitmap $r8;
        java.net.URI $r9;
        com.nostra13.universalimageloader.core.download.ImageDownloader $r10;
        boolean $z0;
        com.nostra13.universalimageloader.core.assist.ImageScaleType $r11;
        com.nostra13.universalimageloader.core.assist.ViewScaleType $r12;
        java.io.FileOutputStream $r13;
        android.graphics.Bitmap$CompressFormat $r14;
        java.io.InputStream $r15;
        java.lang.Throwable $r16, $r17;

        $r0 := @this: com.nostra13.universalimageloader.core.LoadAndDisplayImageTask;

        $r1 := @parameter0: java.io.File;

        $r5 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration>;

        $i1 = $r5.<com.nostra13.universalimageloader.core.ImageLoaderConfiguration: int maxImageWidthForDiscCache>;

        $r5 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration>;

        $i0 = $r5.<com.nostra13.universalimageloader.core.ImageLoaderConfiguration: int maxImageHeightForDiscCache>;

        if $i1 > 0 goto label1;

        if $i0 <= 0 goto label2;

     label1:
        $r4 = new com.nostra13.universalimageloader.core.assist.ImageSize;

        specialinvoke $r4.<com.nostra13.universalimageloader.core.assist.ImageSize: void <init>(int,int)>($i1, $i0);

        $r2 = new com.nostra13.universalimageloader.core.ImageDecoder;

        $r9 = new java.net.URI;

        $r6 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String uri>;

        specialinvoke $r9.<java.net.URI: void <init>(java.lang.String)>($r6);

        $r10 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.download.ImageDownloader downloader>;

        $r7 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.DisplayImageOptions options>;

        specialinvoke $r2.<com.nostra13.universalimageloader.core.ImageDecoder: void <init>(java.net.URI,com.nostra13.universalimageloader.core.download.ImageDownloader,com.nostra13.universalimageloader.core.DisplayImageOptions)>($r9, $r10, $r7);

        $z0 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: boolean loggingEnabled>;

        virtualinvoke $r2.<com.nostra13.universalimageloader.core.ImageDecoder: void setLoggingEnabled(boolean)>($z0);

        $r11 = <com.nostra13.universalimageloader.core.assist.ImageScaleType: com.nostra13.universalimageloader.core.assist.ImageScaleType IN_SAMPLE_INT>;

        $r12 = <com.nostra13.universalimageloader.core.assist.ViewScaleType: com.nostra13.universalimageloader.core.assist.ViewScaleType FIT_INSIDE>;

        $r8 = virtualinvoke $r2.<com.nostra13.universalimageloader.core.ImageDecoder: android.graphics.Bitmap decode(com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ImageScaleType,com.nostra13.universalimageloader.core.assist.ViewScaleType)>($r4, $r11, $r12);

        $r3 = new java.io.BufferedOutputStream;

        $r13 = new java.io.FileOutputStream;

        specialinvoke $r13.<java.io.FileOutputStream: void <init>(java.io.File)>($r1);

        specialinvoke $r3.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>($r13, 8192);

        $r5 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration>;

        $r14 = $r5.<com.nostra13.universalimageloader.core.ImageLoaderConfiguration: android.graphics.Bitmap$CompressFormat imageCompressFormatForDiscCache>;

        $r5 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration>;

        $i1 = $r5.<com.nostra13.universalimageloader.core.ImageLoaderConfiguration: int imageQualityForDiscCache>;

        $z0 = virtualinvoke $r8.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r14, $i1, $r3);

        if $z0 == 0 goto label2;

        virtualinvoke $r8.<android.graphics.Bitmap: void recycle()>();

        return;

     label2:
        $r10 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.download.ImageDownloader downloader>;

        $r9 = new java.net.URI;

        $r6 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String uri>;

        specialinvoke $r9.<java.net.URI: void <init>(java.lang.String)>($r6);

        $r15 = virtualinvoke $r10.<com.nostra13.universalimageloader.core.download.ImageDownloader: java.io.InputStream getStream(java.net.URI)>($r9);

     label3:
        $r3 = new java.io.BufferedOutputStream;

        $r13 = new java.io.FileOutputStream;

        specialinvoke $r13.<java.io.FileOutputStream: void <init>(java.io.File)>($r1);

        specialinvoke $r3.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>($r13, 8192);

     label4:
        staticinvoke <com.nostra13.universalimageloader.utils.FileUtils: void copyStream(java.io.InputStream,java.io.OutputStream)>($r15, $r3);

     label5:
        virtualinvoke $r3.<java.io.OutputStream: void close()>();

     label6:
        virtualinvoke $r15.<java.io.InputStream: void close()>();

        return;

     label7:
        $r16 := @caughtexception;

     label8:
        virtualinvoke $r3.<java.io.OutputStream: void close()>();

        throw $r16;

     label9:
        $r17 := @caughtexception;

        virtualinvoke $r15.<java.io.InputStream: void close()>();

        throw $r17;

        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label8 to label9 with label9;
    }

    private android.graphics.Bitmap tryLoadBitmap()
    {
        com.nostra13.universalimageloader.core.LoadAndDisplayImageTask $r0;
        android.graphics.Bitmap $r1, $r9;
        com.nostra13.universalimageloader.cache.disc.DiscCacheAware $r2;
        java.io.IOException $r3;
        java.net.URI $r4;
        com.nostra13.universalimageloader.core.ImageLoaderConfiguration $r5;
        java.lang.String $r6;
        java.io.File $r7;
        boolean $z0;
        java.lang.Object[] $r8;
        com.nostra13.universalimageloader.core.DisplayImageOptions $r10;
        com.nostra13.universalimageloader.core.assist.FailReason $r11;
        java.lang.OutOfMemoryError $r12;
        java.lang.Throwable $r13;

        $r0 := @this: com.nostra13.universalimageloader.core.LoadAndDisplayImageTask;

        $r5 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration>;

        $r2 = $r5.<com.nostra13.universalimageloader.core.ImageLoaderConfiguration: com.nostra13.universalimageloader.cache.disc.DiscCacheAware discCache>;

        $r6 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String uri>;

        $r7 = interfaceinvoke $r2.<com.nostra13.universalimageloader.cache.disc.DiscCacheAware: java.io.File get(java.lang.String)>($r6);

        $r1 = null;

     label01:
        $z0 = virtualinvoke $r7.<java.io.File: boolean exists()>();

     label02:
        if $z0 == 0 goto label09;

        $z0 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: boolean loggingEnabled>;

     label03:
        if $z0 == 0 goto label06;

     label04:
        $r8 = newarray (java.lang.Object)[1];

        $r6 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String memoryCacheKey>;

     label05:
        $r8[0] = $r6;

        staticinvoke <com.nostra13.universalimageloader.utils.L: void i(java.lang.String,java.lang.Object[])>("Load image from disc cache [%s]", $r8);

     label06:
        $r4 = virtualinvoke $r7.<java.io.File: java.net.URI toURI()>();

        $r9 = specialinvoke $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: android.graphics.Bitmap decodeImage(java.net.URI)>($r4);

     label07:
        if $r9 == null goto label09;

     label08:
        return $r9;

     label09:
        $z0 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: boolean loggingEnabled>;

        if $z0 == 0 goto label11;

        $r8 = newarray (java.lang.Object)[1];

        $r6 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String memoryCacheKey>;

     label10:
        $r8[0] = $r6;

        staticinvoke <com.nostra13.universalimageloader.utils.L: void i(java.lang.String,java.lang.Object[])>("Load image from Internet [%s]", $r8);

     label11:
        $r10 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.DisplayImageOptions options>;

        $z0 = virtualinvoke $r10.<com.nostra13.universalimageloader.core.DisplayImageOptions: boolean isCacheOnDisc()>();

     label12:
        if $z0 == 0 goto label23;

     label13:
        $z0 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: boolean loggingEnabled>;

     label14:
        if $z0 == 0 goto label17;

     label15:
        $r8 = newarray (java.lang.Object)[1];

        $r6 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String memoryCacheKey>;

     label16:
        $r8[0] = $r6;

        staticinvoke <com.nostra13.universalimageloader.utils.L: void i(java.lang.String,java.lang.Object[])>("Cache image on disc [%s]", $r8);

     label17:
        specialinvoke $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: void saveImageOnDisc(java.io.File)>($r7);

        $r6 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String uri>;

        interfaceinvoke $r2.<com.nostra13.universalimageloader.cache.disc.DiscCacheAware: void put(java.lang.String,java.io.File)>($r6, $r7);

        $r4 = virtualinvoke $r7.<java.io.File: java.net.URI toURI()>();

     label18:
        $r9 = specialinvoke $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: android.graphics.Bitmap decodeImage(java.net.URI)>($r4);

     label19:
        $r1 = $r9;

     label20:
        if $r9 != null goto label22;

     label21:
        $r11 = <com.nostra13.universalimageloader.core.assist.FailReason: com.nostra13.universalimageloader.core.assist.FailReason IO_ERROR>;

        specialinvoke $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: void fireImageLoadingFailedEvent(com.nostra13.universalimageloader.core.assist.FailReason)>($r11);

     label22:
        return $r1;

     label23:
        $r4 = new java.net.URI;

     label24:
        $r6 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String uri>;

        specialinvoke $r4.<java.net.URI: void <init>(java.lang.String)>($r6);

     label25:
        goto label18;

     label26:
        $r3 := @caughtexception;

        staticinvoke <com.nostra13.universalimageloader.utils.L: void e(java.lang.Throwable)>($r3);

        $r11 = <com.nostra13.universalimageloader.core.assist.FailReason: com.nostra13.universalimageloader.core.assist.FailReason IO_ERROR>;

        specialinvoke $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: void fireImageLoadingFailedEvent(com.nostra13.universalimageloader.core.assist.FailReason)>($r11);

        $z0 = virtualinvoke $r7.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label22;

        virtualinvoke $r7.<java.io.File: boolean delete()>();

        goto label22;

     label27:
        $r12 := @caughtexception;

        staticinvoke <com.nostra13.universalimageloader.utils.L: void e(java.lang.Throwable)>($r12);

        $r11 = <com.nostra13.universalimageloader.core.assist.FailReason: com.nostra13.universalimageloader.core.assist.FailReason OUT_OF_MEMORY>;

        specialinvoke $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: void fireImageLoadingFailedEvent(com.nostra13.universalimageloader.core.assist.FailReason)>($r11);

        goto label22;

     label28:
        $r13 := @caughtexception;

        staticinvoke <com.nostra13.universalimageloader.utils.L: void e(java.lang.Throwable)>($r13);

        $r11 = <com.nostra13.universalimageloader.core.assist.FailReason: com.nostra13.universalimageloader.core.assist.FailReason UNKNOWN>;

        specialinvoke $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: void fireImageLoadingFailedEvent(com.nostra13.universalimageloader.core.assist.FailReason)>($r11);

        goto label22;

        catch java.io.IOException from label01 to label02 with label26;
        catch java.io.IOException from label03 to label04 with label26;
        catch java.io.IOException from label05 to label07 with label26;
        catch java.io.IOException from label10 to label12 with label26;
        catch java.io.IOException from label14 to label15 with label26;
        catch java.io.IOException from label16 to label19 with label26;
        catch java.io.IOException from label21 to label22 with label26;
        catch java.io.IOException from label24 to label25 with label26;
        catch java.lang.OutOfMemoryError from label01 to label02 with label27;
        catch java.lang.OutOfMemoryError from label03 to label04 with label27;
        catch java.lang.OutOfMemoryError from label05 to label07 with label27;
        catch java.lang.OutOfMemoryError from label10 to label13 with label27;
        catch java.lang.OutOfMemoryError from label14 to label15 with label27;
        catch java.lang.OutOfMemoryError from label16 to label19 with label27;
        catch java.lang.OutOfMemoryError from label20 to label22 with label27;
        catch java.lang.OutOfMemoryError from label23 to label25 with label27;
        catch java.lang.Throwable from label01 to label08 with label28;
        catch java.lang.Throwable from label09 to label19 with label28;
        catch java.lang.Throwable from label20 to label22 with label28;
        catch java.lang.Throwable from label23 to label25 with label28;
    }

    public void run()
    {
        com.nostra13.universalimageloader.core.LoadAndDisplayImageTask $r0;
        com.nostra13.universalimageloader.core.DisplayBitmapTask $r1;
        java.lang.InterruptedException $r2, $r12;
        java.util.concurrent.locks.ReentrantLock $r3;
        java.lang.String $r4;
        com.nostra13.universalimageloader.core.ImageLoader $r5;
        java.util.concurrent.atomic.AtomicBoolean $r6;
        boolean $z0;
        java.lang.Object[] $r7;
        java.lang.Throwable $r8, $r19;
        com.nostra13.universalimageloader.core.DisplayImageOptions $r9;
        int $i0;
        java.lang.Integer $r10;
        long $l1;
        com.nostra13.universalimageloader.core.ImageLoadingInfo $r11;
        com.nostra13.universalimageloader.cache.memory.MemoryCacheAware $r13;
        java.lang.Object $r14;
        android.graphics.Bitmap $r15, $r16;
        com.nostra13.universalimageloader.core.ImageLoaderConfiguration $r17;
        android.os.Handler $r18;

        $r0 := @this: com.nostra13.universalimageloader.core.LoadAndDisplayImageTask;

        $r5 = staticinvoke <com.nostra13.universalimageloader.core.ImageLoader: com.nostra13.universalimageloader.core.ImageLoader getInstance()>();

        $r6 = virtualinvoke $r5.<com.nostra13.universalimageloader.core.ImageLoader: java.util.concurrent.atomic.AtomicBoolean getPause()>();

        $z0 = virtualinvoke $r6.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 == 0 goto label05;

        entermonitor $r6;

     label01:
        $z0 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: boolean loggingEnabled>;

        if $z0 == 0 goto label02;

        $r7 = newarray (java.lang.Object)[1];

        $r4 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String memoryCacheKey>;

        $r7[0] = $r4;

        staticinvoke <com.nostra13.universalimageloader.utils.L: void i(java.lang.String,java.lang.Object[])>("ImageLoader is paused. Waiting...  [%s]", $r7);

     label02:
        virtualinvoke $r6.<java.lang.Object: void wait()>();

     label03:
        $z0 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: boolean loggingEnabled>;

        if $z0 == 0 goto label04;

        $r7 = newarray (java.lang.Object)[1];

        $r4 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String memoryCacheKey>;

        $r7[0] = $r4;

        staticinvoke <com.nostra13.universalimageloader.utils.L: void i(java.lang.String,java.lang.Object[])>(".. Resume loading [%s]", $r7);

     label04:
        exitmonitor $r6;

     label05:
        $z0 = specialinvoke $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: boolean checkTaskIsNotActual()>();

        if $z0 == 0 goto label11;

        return;

     label06:
        $r2 := @caughtexception;

     label07:
        $r7 = newarray (java.lang.Object)[1];

        $r4 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String memoryCacheKey>;

        $r7[0] = $r4;

        staticinvoke <com.nostra13.universalimageloader.utils.L: void e(java.lang.String,java.lang.Object[])>("Task was interrupted [%s]", $r7);

        exitmonitor $r6;

     label08:
        return;

     label09:
        $r8 := @caughtexception;

        exitmonitor $r6;

     label10:
        throw $r8;

     label11:
        $r9 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.DisplayImageOptions options>;

        $z0 = virtualinvoke $r9.<com.nostra13.universalimageloader.core.DisplayImageOptions: boolean isDelayBeforeLoading()>();

        if $z0 == 0 goto label15;

        $z0 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: boolean loggingEnabled>;

        if $z0 == 0 goto label12;

        $r7 = newarray (java.lang.Object)[2];

        $r9 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.DisplayImageOptions options>;

        $i0 = virtualinvoke $r9.<com.nostra13.universalimageloader.core.DisplayImageOptions: int getDelayBeforeLoading()>();

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r7[0] = $r10;

        $r4 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String memoryCacheKey>;

        $r7[1] = $r4;

        staticinvoke <com.nostra13.universalimageloader.utils.L: void i(java.lang.String,java.lang.Object[])>("Delay %d ms before loading...  [%s]", $r7);

     label12:
        $r9 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.DisplayImageOptions options>;

     label13:
        $i0 = virtualinvoke $r9.<com.nostra13.universalimageloader.core.DisplayImageOptions: int getDelayBeforeLoading()>();

        $l1 = (long) $i0;

        staticinvoke <java.lang.Thread: void sleep(long)>($l1);

     label14:
        $z0 = specialinvoke $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: boolean checkTaskIsNotActual()>();

        if $z0 != 0 goto label31;

     label15:
        $r11 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.ImageLoadingInfo imageLoadingInfo>;

        $r3 = $r11.<com.nostra13.universalimageloader.core.ImageLoadingInfo: java.util.concurrent.locks.ReentrantLock loadFromUriLock>;

        $z0 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: boolean loggingEnabled>;

        if $z0 == 0 goto label16;

        $r7 = newarray (java.lang.Object)[1];

        $r4 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String memoryCacheKey>;

        $r7[0] = $r4;

        staticinvoke <com.nostra13.universalimageloader.utils.L: void i(java.lang.String,java.lang.Object[])>("Start display image task [%s]", $r7);

        $z0 = virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: boolean isLocked()>();

        if $z0 == 0 goto label16;

        $r7 = newarray (java.lang.Object)[1];

        $r4 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String memoryCacheKey>;

        $r7[0] = $r4;

        staticinvoke <com.nostra13.universalimageloader.utils.L: void i(java.lang.String,java.lang.Object[])>("Image already is loading. Waiting... [%s]", $r7);

     label16:
        virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label17:
        $z0 = specialinvoke $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: boolean checkTaskIsNotActual()>();

     label18:
        if $z0 == 0 goto label20;

        virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return;

     label19:
        $r12 := @caughtexception;

        $r7 = newarray (java.lang.Object)[1];

        $r4 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String memoryCacheKey>;

        $r7[0] = $r4;

        staticinvoke <com.nostra13.universalimageloader.utils.L: void e(java.lang.String,java.lang.Object[])>("Task was interrupted [%s]", $r7);

        return;

     label20:
        $r5 = staticinvoke <com.nostra13.universalimageloader.core.ImageLoader: com.nostra13.universalimageloader.core.ImageLoader getInstance()>();

        $r13 = virtualinvoke $r5.<com.nostra13.universalimageloader.core.ImageLoader: com.nostra13.universalimageloader.cache.memory.MemoryCacheAware getMemoryCache()>();

        $r4 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String memoryCacheKey>;

        $r14 = interfaceinvoke $r13.<com.nostra13.universalimageloader.cache.memory.MemoryCacheAware: java.lang.Object get(java.lang.Object)>($r4);

        $r15 = (android.graphics.Bitmap) $r14;

        if $r15 != null goto label28;

        $r16 = specialinvoke $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: android.graphics.Bitmap tryLoadBitmap()>();

     label21:
        $r15 = $r16;

        if $r16 != null goto label22;

        virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return;

     label22:
        $z0 = specialinvoke $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: boolean checkTaskIsNotActual()>();

        if $z0 != 0 goto label24;

        $z0 = specialinvoke $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: boolean checkTaskIsInterrupted()>();

     label23:
        if $z0 == 0 goto label25;

     label24:
        virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return;

     label25:
        $r9 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.DisplayImageOptions options>;

        $z0 = virtualinvoke $r9.<com.nostra13.universalimageloader.core.DisplayImageOptions: boolean isCacheInMemory()>();

        if $z0 == 0 goto label27;

        $z0 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: boolean loggingEnabled>;

        if $z0 == 0 goto label26;

        $r7 = newarray (java.lang.Object)[1];

        $r4 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String memoryCacheKey>;

        $r7[0] = $r4;

        staticinvoke <com.nostra13.universalimageloader.utils.L: void i(java.lang.String,java.lang.Object[])>("Cache image in memory [%s]", $r7);

     label26:
        $r17 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration>;

        $r13 = $r17.<com.nostra13.universalimageloader.core.ImageLoaderConfiguration: com.nostra13.universalimageloader.cache.memory.MemoryCacheAware memoryCache>;

        $r4 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String memoryCacheKey>;

        interfaceinvoke $r13.<com.nostra13.universalimageloader.cache.memory.MemoryCacheAware: boolean put(java.lang.Object,java.lang.Object)>($r4, $r16);

     label27:
        virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        $z0 = specialinvoke $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: boolean checkTaskIsNotActual()>();

        if $z0 != 0 goto label32;

        $z0 = specialinvoke $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: boolean checkTaskIsInterrupted()>();

        if $z0 != 0 goto label33;

        $r1 = new com.nostra13.universalimageloader.core.DisplayBitmapTask;

        $r11 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: com.nostra13.universalimageloader.core.ImageLoadingInfo imageLoadingInfo>;

        specialinvoke $r1.<com.nostra13.universalimageloader.core.DisplayBitmapTask: void <init>(android.graphics.Bitmap,com.nostra13.universalimageloader.core.ImageLoadingInfo)>($r15, $r11);

        $z0 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: boolean loggingEnabled>;

        virtualinvoke $r1.<com.nostra13.universalimageloader.core.DisplayBitmapTask: void setLoggingEnabled(boolean)>($z0);

        $r18 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: android.os.Handler handler>;

        virtualinvoke $r18.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

        return;

     label28:
        $z0 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: boolean loggingEnabled>;

        if $z0 == 0 goto label27;

        $r7 = newarray (java.lang.Object)[1];

        $r4 = $r0.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String memoryCacheKey>;

        $r7[0] = $r4;

        staticinvoke <com.nostra13.universalimageloader.utils.L: void i(java.lang.String,java.lang.Object[])>("...Get cached bitmap from memory after waiting. [%s]", $r7);

     label29:
        goto label27;

     label30:
        $r19 := @caughtexception;

        virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r19;

     label31:
        return;

     label32:
        return;

     label33:
        return;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.InterruptedException from label02 to label03 with label06;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label03 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
        catch java.lang.InterruptedException from label13 to label14 with label19;
        catch java.lang.Throwable from label17 to label18 with label30;
        catch java.lang.Throwable from label20 to label21 with label30;
        catch java.lang.Throwable from label22 to label23 with label30;
        catch java.lang.Throwable from label25 to label27 with label30;
        catch java.lang.Throwable from label28 to label29 with label30;
    }

    public static void <clinit>()
    {
        <com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String LOG_WAITING_FOR_RESUME> = "ImageLoader is paused. Waiting...  [%s]";

        <com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String LOG_WAITING_FOR_IMAGE_LOADED> = "Image already is loading. Waiting... [%s]";

        <com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String LOG_TASK_INTERRUPTED> = "Task was interrupted [%s]";

        <com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String LOG_TASK_CANCELLED> = "ImageView is reused for another image. Task is cancelled. [%s]";

        <com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String LOG_START_DISPLAY_IMAGE_TASK> = "Start display image task [%s]";

        <com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String LOG_RESUME_AFTER_PAUSE> = ".. Resume loading [%s]";

        <com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String LOG_LOAD_IMAGE_FROM_INTERNET> = "Load image from Internet [%s]";

        <com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String LOG_LOAD_IMAGE_FROM_DISC_CACHE> = "Load image from disc cache [%s]";

        <com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String LOG_GET_IMAGE_FROM_MEMORY_CACHE_AFTER_WAITING> = "...Get cached bitmap from memory after waiting. [%s]";

        <com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String LOG_DELAY_BEFORE_LOADING> = "Delay %d ms before loading...  [%s]";

        <com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String LOG_CACHE_IMAGE_ON_DISC> = "Cache image on disc [%s]";

        <com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: java.lang.String LOG_CACHE_IMAGE_IN_MEMORY> = "Cache image in memory [%s]";

        <com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: int BUFFER_SIZE> = 8192;

        <com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: int ATTEMPT_COUNT_TO_DECODE_BITMAP> = 3;

        return;
    }
}
