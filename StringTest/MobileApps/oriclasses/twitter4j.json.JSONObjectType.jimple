public final class twitter4j.json.JSONObjectType extends java.lang.Object
{
    private static final twitter4j.internal.logging.Logger logger;

    static void <clinit>()
    {
        twitter4j.internal.logging.Logger $r0;

        $r0 = staticinvoke <twitter4j.internal.logging.Logger: twitter4j.internal.logging.Logger getLogger(java.lang.Class)>(class "twitter4j/json/JSONObjectType");

        <twitter4j.json.JSONObjectType: twitter4j.internal.logging.Logger logger> = $r0;

        return;
    }

    public void <init>()
    {
        twitter4j.json.JSONObjectType $r0;

        $r0 := @this: twitter4j.json.JSONObjectType;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static twitter4j.json.JSONObjectType$Type determine(twitter4j.internal.org.json.JSONObject)
    {
        twitter4j.internal.org.json.JSONObject $r0;
        twitter4j.internal.org.json.JSONException $r1, $r5;
        boolean $z0;
        java.lang.String $r2, $r3;
        twitter4j.internal.logging.Logger $r4;
        twitter4j.json.JSONObjectType$Type r6;

        $r0 := @parameter0: twitter4j.internal.org.json.JSONObject;

        $z0 = virtualinvoke $r0.<twitter4j.internal.org.json.JSONObject: boolean isNull(java.lang.String)>("sender");

        if $z0 != 0 goto label01;

        r6 = <twitter4j.json.JSONObjectType$Type: twitter4j.json.JSONObjectType$Type SENDER>;

        return r6;

     label01:
        $z0 = virtualinvoke $r0.<twitter4j.internal.org.json.JSONObject: boolean isNull(java.lang.String)>("text");

        if $z0 != 0 goto label02;

        r6 = <twitter4j.json.JSONObjectType$Type: twitter4j.json.JSONObjectType$Type STATUS>;

        return r6;

     label02:
        $z0 = virtualinvoke $r0.<twitter4j.internal.org.json.JSONObject: boolean isNull(java.lang.String)>("direct_message");

        if $z0 != 0 goto label03;

        r6 = <twitter4j.json.JSONObjectType$Type: twitter4j.json.JSONObjectType$Type DIRECT_MESSAGE>;

        return r6;

     label03:
        $z0 = virtualinvoke $r0.<twitter4j.internal.org.json.JSONObject: boolean isNull(java.lang.String)>("delete");

        if $z0 != 0 goto label04;

        r6 = <twitter4j.json.JSONObjectType$Type: twitter4j.json.JSONObjectType$Type DELETE>;

        return r6;

     label04:
        $z0 = virtualinvoke $r0.<twitter4j.internal.org.json.JSONObject: boolean isNull(java.lang.String)>("limit");

        if $z0 != 0 goto label05;

        r6 = <twitter4j.json.JSONObjectType$Type: twitter4j.json.JSONObjectType$Type LIMIT>;

        return r6;

     label05:
        $z0 = virtualinvoke $r0.<twitter4j.internal.org.json.JSONObject: boolean isNull(java.lang.String)>("warning");

        if $z0 != 0 goto label06;

        r6 = <twitter4j.json.JSONObjectType$Type: twitter4j.json.JSONObjectType$Type STALL_WARNING>;

        return r6;

     label06:
        $z0 = virtualinvoke $r0.<twitter4j.internal.org.json.JSONObject: boolean isNull(java.lang.String)>("scrub_geo");

        if $z0 != 0 goto label07;

        r6 = <twitter4j.json.JSONObjectType$Type: twitter4j.json.JSONObjectType$Type SCRUB_GEO>;

        return r6;

     label07:
        $z0 = virtualinvoke $r0.<twitter4j.internal.org.json.JSONObject: boolean isNull(java.lang.String)>("friends");

        if $z0 != 0 goto label08;

        r6 = <twitter4j.json.JSONObjectType$Type: twitter4j.json.JSONObjectType$Type FRIENDS>;

        return r6;

     label08:
        $z0 = virtualinvoke $r0.<twitter4j.internal.org.json.JSONObject: boolean isNull(java.lang.String)>("event");

        if $z0 != 0 goto label42;

     label09:
        $r2 = virtualinvoke $r0.<twitter4j.internal.org.json.JSONObject: java.lang.String getString(java.lang.String)>("event");

        $r3 = "favorite";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

     label10:
        if $z0 == 0 goto label11;

        r6 = <twitter4j.json.JSONObjectType$Type: twitter4j.json.JSONObjectType$Type FAVORITE>;

        return r6;

     label11:
        $r3 = "unfavorite";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

     label12:
        if $z0 == 0 goto label13;

        r6 = <twitter4j.json.JSONObjectType$Type: twitter4j.json.JSONObjectType$Type UNFAVORITE>;

        return r6;

     label13:
        $r3 = "follow";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

     label14:
        if $z0 == 0 goto label15;

        r6 = <twitter4j.json.JSONObjectType$Type: twitter4j.json.JSONObjectType$Type FOLLOW>;

        return r6;

     label15:
        $r3 = "unfollow";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label17;

     label16:
        r6 = <twitter4j.json.JSONObjectType$Type: twitter4j.json.JSONObjectType$Type UNFOLLOW>;

        return r6;

     label17:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("list");

     label18:
        if $z0 == 0 goto label33;

     label19:
        $r3 = "list_member_added";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

     label20:
        if $z0 == 0 goto label21;

        r6 = <twitter4j.json.JSONObjectType$Type: twitter4j.json.JSONObjectType$Type USER_LIST_MEMBER_ADDED>;

        return r6;

     label21:
        $r3 = "list_member_removed";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

     label22:
        if $z0 == 0 goto label23;

        r6 = <twitter4j.json.JSONObjectType$Type: twitter4j.json.JSONObjectType$Type USER_LIST_MEMBER_DELETED>;

        return r6;

     label23:
        $r3 = "list_user_subscribed";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

     label24:
        if $z0 == 0 goto label25;

        r6 = <twitter4j.json.JSONObjectType$Type: twitter4j.json.JSONObjectType$Type USER_LIST_SUBSCRIBED>;

        return r6;

     label25:
        $r3 = "list_user_unsubscribed";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

     label26:
        if $z0 == 0 goto label27;

        r6 = <twitter4j.json.JSONObjectType$Type: twitter4j.json.JSONObjectType$Type USER_LIST_UNSUBSCRIBED>;

        return r6;

     label27:
        $r3 = "list_created";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

     label28:
        if $z0 == 0 goto label29;

        r6 = <twitter4j.json.JSONObjectType$Type: twitter4j.json.JSONObjectType$Type USER_LIST_CREATED>;

        return r6;

     label29:
        $r3 = "list_updated";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

     label30:
        if $z0 == 0 goto label31;

        r6 = <twitter4j.json.JSONObjectType$Type: twitter4j.json.JSONObjectType$Type USER_LIST_UPDATED>;

        return r6;

     label31:
        $r3 = "list_destroyed";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

     label32:
        if $z0 == 0 goto label41;

        r6 = <twitter4j.json.JSONObjectType$Type: twitter4j.json.JSONObjectType$Type USER_LIST_DESTROYED>;

        return r6;

     label33:
        $r3 = "user_update";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

     label34:
        if $z0 == 0 goto label35;

        r6 = <twitter4j.json.JSONObjectType$Type: twitter4j.json.JSONObjectType$Type USER_UPDATE>;

        return r6;

     label35:
        $r3 = "block";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

     label36:
        if $z0 == 0 goto label37;

        r6 = <twitter4j.json.JSONObjectType$Type: twitter4j.json.JSONObjectType$Type BLOCK>;

        return r6;

     label37:
        $r3 = "unblock";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

     label38:
        if $z0 == 0 goto label41;

        r6 = <twitter4j.json.JSONObjectType$Type: twitter4j.json.JSONObjectType$Type UNBLOCK>;

        return r6;

     label39:
        $r1 := @caughtexception;

        $r4 = <twitter4j.json.JSONObjectType: twitter4j.internal.logging.Logger logger>;

     label40:
        $r3 = virtualinvoke $r0.<twitter4j.internal.org.json.JSONObject: java.lang.String toString(int)>(2);

        virtualinvoke $r4.<twitter4j.internal.logging.Logger: void warn(java.lang.String,java.lang.String)>("Failed to get event element: ", $r3);

     label41:
        r6 = <twitter4j.json.JSONObjectType$Type: twitter4j.json.JSONObjectType$Type UNKNOWN>;

        return r6;

     label42:
        $z0 = virtualinvoke $r0.<twitter4j.internal.org.json.JSONObject: boolean isNull(java.lang.String)>("disconnect");

        if $z0 != 0 goto label41;

        r6 = <twitter4j.json.JSONObjectType$Type: twitter4j.json.JSONObjectType$Type DISCONNECTION>;

        return r6;

     label43:
        $r5 := @caughtexception;

        goto label41;

        catch twitter4j.internal.org.json.JSONException from label09 to label10 with label39;
        catch twitter4j.internal.org.json.JSONException from label11 to label12 with label39;
        catch twitter4j.internal.org.json.JSONException from label13 to label14 with label39;
        catch twitter4j.internal.org.json.JSONException from label15 to label16 with label39;
        catch twitter4j.internal.org.json.JSONException from label17 to label18 with label39;
        catch twitter4j.internal.org.json.JSONException from label19 to label20 with label39;
        catch twitter4j.internal.org.json.JSONException from label21 to label22 with label39;
        catch twitter4j.internal.org.json.JSONException from label23 to label24 with label39;
        catch twitter4j.internal.org.json.JSONException from label25 to label26 with label39;
        catch twitter4j.internal.org.json.JSONException from label27 to label28 with label39;
        catch twitter4j.internal.org.json.JSONException from label29 to label30 with label39;
        catch twitter4j.internal.org.json.JSONException from label31 to label32 with label39;
        catch twitter4j.internal.org.json.JSONException from label33 to label34 with label39;
        catch twitter4j.internal.org.json.JSONException from label35 to label36 with label39;
        catch twitter4j.internal.org.json.JSONException from label37 to label38 with label39;
        catch twitter4j.internal.org.json.JSONException from label40 to label41 with label43;
    }
}
