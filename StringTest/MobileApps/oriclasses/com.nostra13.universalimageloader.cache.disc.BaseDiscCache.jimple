public abstract class com.nostra13.universalimageloader.cache.disc.BaseDiscCache extends java.lang.Object implements com.nostra13.universalimageloader.cache.disc.DiscCacheAware
{
    private java.io.File cacheDir;
    private com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator fileNameGenerator;

    public void <init>(java.io.File)
    {
        com.nostra13.universalimageloader.cache.disc.BaseDiscCache $r0;
        java.io.File $r1;
        com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator $r2;

        $r0 := @this: com.nostra13.universalimageloader.cache.disc.BaseDiscCache;

        $r1 := @parameter0: java.io.File;

        $r2 = staticinvoke <com.nostra13.universalimageloader.core.DefaultConfigurationFactory: com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator createFileNameGenerator()>();

        specialinvoke $r0.<com.nostra13.universalimageloader.cache.disc.BaseDiscCache: void <init>(java.io.File,com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator)>($r1, $r2);

        return;
    }

    public void <init>(java.io.File, com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator)
    {
        com.nostra13.universalimageloader.cache.disc.BaseDiscCache $r0;
        java.io.File $r1;
        com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator $r2;

        $r0 := @this: com.nostra13.universalimageloader.cache.disc.BaseDiscCache;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.nostra13.universalimageloader.cache.disc.BaseDiscCache: java.io.File cacheDir> = $r1;

        $r0.<com.nostra13.universalimageloader.cache.disc.BaseDiscCache: com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator fileNameGenerator> = $r2;

        return;
    }

    public void clear()
    {
        com.nostra13.universalimageloader.cache.disc.BaseDiscCache $r0;
        java.io.File $r1;
        int $i0, $i1;
        java.io.File[] $r2;

        $r0 := @this: com.nostra13.universalimageloader.cache.disc.BaseDiscCache;

        $r1 = $r0.<com.nostra13.universalimageloader.cache.disc.BaseDiscCache: java.io.File cacheDir>;

        $r2 = virtualinvoke $r1.<java.io.File: java.io.File[] listFiles()>();

        if $r2 == null goto label2;

        $i1 = lengthof $r2;

        $i0 = 0;

     label1:
        if $i0 >= $i1 goto label3;

        $r1 = $r2[$i0];

        virtualinvoke $r1.<java.io.File: boolean delete()>();

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;

     label3:
        return;
    }

    public java.io.File get(java.lang.String)
    {
        com.nostra13.universalimageloader.cache.disc.BaseDiscCache $r0;
        java.lang.String $r1;
        com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator $r2;
        java.io.File $r3, $r4;

        $r0 := @this: com.nostra13.universalimageloader.cache.disc.BaseDiscCache;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.nostra13.universalimageloader.cache.disc.BaseDiscCache: com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator fileNameGenerator>;

        $r1 = interfaceinvoke $r2.<com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator: java.lang.String generate(java.lang.String)>($r1);

        $r4 = new java.io.File;

        $r3 = $r0.<com.nostra13.universalimageloader.cache.disc.BaseDiscCache: java.io.File cacheDir>;

        specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, $r1);

        return $r4;
    }

    protected java.io.File getCacheDir()
    {
        com.nostra13.universalimageloader.cache.disc.BaseDiscCache $r0;
        java.io.File r1;

        $r0 := @this: com.nostra13.universalimageloader.cache.disc.BaseDiscCache;

        r1 = $r0.<com.nostra13.universalimageloader.cache.disc.BaseDiscCache: java.io.File cacheDir>;

        return r1;
    }
}
