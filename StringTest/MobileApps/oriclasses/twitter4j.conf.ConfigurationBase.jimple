class twitter4j.conf.ConfigurationBase extends java.lang.Object implements twitter4j.conf.Configuration, java.io.Serializable
{
    public static final java.lang.String DALVIK;
    private static final java.lang.String DEFAULT_OAUTH_ACCESS_TOKEN_URL;
    private static final java.lang.String DEFAULT_OAUTH_AUTHENTICATION_URL;
    private static final java.lang.String DEFAULT_OAUTH_AUTHORIZATION_URL;
    private static final java.lang.String DEFAULT_OAUTH_REQUEST_TOKEN_URL;
    private static final java.lang.String DEFAULT_REST_BASE_URL;
    private static final java.lang.String DEFAULT_SITE_STREAM_BASE_URL;
    private static final java.lang.String DEFAULT_STREAM_BASE_URL;
    private static final java.lang.String DEFAULT_USER_STREAM_BASE_URL;
    public static final java.lang.String GAE;
    static java.lang.String dalvikDetected;
    static java.lang.String gaeDetected;
    private static final java.util.List instances;
    private static final long serialVersionUID;
    private boolean IS_DALVIK;
    private boolean IS_GAE;
    private int asyncNumThreads;
    private java.lang.String clientURL;
    private java.lang.String clientVersion;
    private long contributingTo;
    private boolean debug;
    private int defaultMaxPerRoute;
    private java.lang.String dispatcherImpl;
    private boolean gzipEnabled;
    private int httpConnectionTimeout;
    private java.lang.String httpProxyHost;
    private java.lang.String httpProxyPassword;
    private int httpProxyPort;
    private java.lang.String httpProxyUser;
    private int httpReadTimeout;
    private int httpRetryCount;
    private int httpRetryIntervalSeconds;
    private int httpStreamingReadTimeout;
    private boolean includeEntitiesEnabled;
    private boolean includeMyRetweetEnabled;
    private boolean includeRTsEnabled;
    private boolean jsonStoreEnabled;
    private java.lang.String loggerFactory;
    private int maxTotalConnections;
    private boolean mbeanEnabled;
    private java.lang.String mediaProvider;
    private java.lang.String mediaProviderAPIKey;
    private java.util.Properties mediaProviderParameters;
    private java.lang.String oAuthAccessToken;
    private java.lang.String oAuthAccessTokenSecret;
    private java.lang.String oAuthAccessTokenURL;
    private java.lang.String oAuthAuthenticationURL;
    private java.lang.String oAuthAuthorizationURL;
    private java.lang.String oAuthConsumerKey;
    private java.lang.String oAuthConsumerSecret;
    private java.lang.String oAuthRequestTokenURL;
    private java.lang.String password;
    private boolean prettyDebug;
    java.util.Map requestHeaders;
    private java.lang.String restBaseURL;
    private java.lang.String siteStreamBaseURL;
    private boolean stallWarningsEnabled;
    private java.lang.String streamBaseURL;
    private boolean useSSL;
    private java.lang.String user;
    private java.lang.String userAgent;
    private java.lang.String userStreamBaseURL;
    private boolean userStreamRepliesAllEnabled;

    static void <clinit>()
    {
        java.lang.ClassNotFoundException $r0, $r2;
        java.util.ArrayList $r1;

        <twitter4j.conf.ConfigurationBase: long serialVersionUID> = -6610497517837844232L;

        <twitter4j.conf.ConfigurationBase: java.lang.String GAE> = "twitter4j.gae";

        <twitter4j.conf.ConfigurationBase: java.lang.String DEFAULT_USER_STREAM_BASE_URL> = "https://userstream.twitter.com/1.1/";

        <twitter4j.conf.ConfigurationBase: java.lang.String DEFAULT_STREAM_BASE_URL> = "https://stream.twitter.com/1.1/";

        <twitter4j.conf.ConfigurationBase: java.lang.String DEFAULT_SITE_STREAM_BASE_URL> = "https://sitestream.twitter.com/1.1/";

        <twitter4j.conf.ConfigurationBase: java.lang.String DEFAULT_REST_BASE_URL> = "http://api.twitter.com/1.1/";

        <twitter4j.conf.ConfigurationBase: java.lang.String DEFAULT_OAUTH_REQUEST_TOKEN_URL> = "http://api.twitter.com/oauth/request_token";

        <twitter4j.conf.ConfigurationBase: java.lang.String DEFAULT_OAUTH_AUTHORIZATION_URL> = "http://api.twitter.com/oauth/authorize";

        <twitter4j.conf.ConfigurationBase: java.lang.String DEFAULT_OAUTH_AUTHENTICATION_URL> = "http://api.twitter.com/oauth/authenticate";

        <twitter4j.conf.ConfigurationBase: java.lang.String DEFAULT_OAUTH_ACCESS_TOKEN_URL> = "http://api.twitter.com/oauth/access_token";

        <twitter4j.conf.ConfigurationBase: java.lang.String DALVIK> = "twitter4j.dalvik";

     label1:
        staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("dalvik.system.VMRuntime");

     label2:
        <twitter4j.conf.ConfigurationBase: java.lang.String dalvikDetected> = "true";

     label3:
        staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.google.appengine.api.urlfetch.URLFetchService");

     label4:
        <twitter4j.conf.ConfigurationBase: java.lang.String gaeDetected> = "true";

     label5:
        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        <twitter4j.conf.ConfigurationBase: java.util.List instances> = $r1;

        return;

     label6:
        $r0 := @caughtexception;

        <twitter4j.conf.ConfigurationBase: java.lang.String dalvikDetected> = "false";

        goto label3;

     label7:
        $r2 := @caughtexception;

        <twitter4j.conf.ConfigurationBase: java.lang.String gaeDetected> = "false";

        goto label5;

        return;

        catch java.lang.ClassNotFoundException from label1 to label2 with label6;
        catch java.lang.ClassNotFoundException from label3 to label4 with label7;
    }

    protected void <init>()
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.lang.SecurityException $r1, $r5;
        java.lang.String $r2;
        java.lang.StringBuilder $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<twitter4j.conf.ConfigurationBase: boolean includeRTsEnabled> = 1;

        $r0.<twitter4j.conf.ConfigurationBase: boolean includeEntitiesEnabled> = 1;

        $r0.<twitter4j.conf.ConfigurationBase: boolean includeMyRetweetEnabled> = 1;

        virtualinvoke $r0.<twitter4j.conf.ConfigurationBase: void setDebug(boolean)>(0);

        virtualinvoke $r0.<twitter4j.conf.ConfigurationBase: void setUser(java.lang.String)>(null);

        virtualinvoke $r0.<twitter4j.conf.ConfigurationBase: void setPassword(java.lang.String)>(null);

        virtualinvoke $r0.<twitter4j.conf.ConfigurationBase: void setUseSSL(boolean)>(0);

        virtualinvoke $r0.<twitter4j.conf.ConfigurationBase: void setPrettyDebugEnabled(boolean)>(0);

        virtualinvoke $r0.<twitter4j.conf.ConfigurationBase: void setGZIPEnabled(boolean)>(1);

        virtualinvoke $r0.<twitter4j.conf.ConfigurationBase: void setHttpProxyHost(java.lang.String)>(null);

        virtualinvoke $r0.<twitter4j.conf.ConfigurationBase: void setHttpProxyUser(java.lang.String)>(null);

        virtualinvoke $r0.<twitter4j.conf.ConfigurationBase: void setHttpProxyPassword(java.lang.String)>(null);

        virtualinvoke $r0.<twitter4j.conf.ConfigurationBase: void setHttpProxyPort(int)>(-1);

        virtualinvoke $r0.<twitter4j.conf.ConfigurationBase: void setHttpConnectionTimeout(int)>(20000);

        virtualinvoke $r0.<twitter4j.conf.ConfigurationBase: void setHttpReadTimeout(int)>(120000);

        virtualinvoke $r0.<twitter4j.conf.ConfigurationBase: void setHttpStreamingReadTimeout(int)>(40000);

        virtualinvoke $r0.<twitter4j.conf.ConfigurationBase: void setHttpRetryCount(int)>(0);

        virtualinvoke $r0.<twitter4j.conf.ConfigurationBase: void setHttpRetryIntervalSeconds(int)>(5);

        virtualinvoke $r0.<twitter4j.conf.ConfigurationBase: void setHttpMaxTotalConnections(int)>(20);

        virtualinvoke $r0.<twitter4j.conf.ConfigurationBase: void setHttpDefaultMaxPerRoute(int)>(2);

        virtualinvoke $r0.<twitter4j.conf.ConfigurationBase: void setOAuthConsumerKey(java.lang.String)>(null);

        virtualinvoke $r0.<twitter4j.conf.ConfigurationBase: void setOAuthConsumerSecret(java.lang.String)>(null);

        virtualinvoke $r0.<twitter4j.conf.ConfigurationBase: void setOAuthAccessToken(java.lang.String)>(null);

        virtualinvoke $r0.<twitter4j.conf.ConfigurationBase: void setOAuthAccessTokenSecret(java.lang.String)>(null);

        virtualinvoke $r0.<twitter4j.conf.ConfigurationBase: void setAsyncNumThreads(int)>(1);

        virtualinvoke $r0.<twitter4j.conf.ConfigurationBase: void setContributingTo(long)>(-1L);

        $r2 = staticinvoke <twitter4j.Version: java.lang.String getVersion()>();

        virtualinvoke $r0.<twitter4j.conf.ConfigurationBase: void setClientVersion(java.lang.String)>($r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://twitter4j.org/en/twitter4j-");

        $r2 = staticinvoke <twitter4j.Version: java.lang.String getVersion()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".xml");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<twitter4j.conf.ConfigurationBase: void setClientURL(java.lang.String)>($r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("twitter4j http://twitter4j.org/ /");

        $r2 = staticinvoke <twitter4j.Version: java.lang.String getVersion()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<twitter4j.conf.ConfigurationBase: void setUserAgent(java.lang.String)>($r2);

        virtualinvoke $r0.<twitter4j.conf.ConfigurationBase: void setJSONStoreEnabled(boolean)>(0);

        virtualinvoke $r0.<twitter4j.conf.ConfigurationBase: void setMBeanEnabled(boolean)>(0);

        virtualinvoke $r0.<twitter4j.conf.ConfigurationBase: void setOAuthRequestTokenURL(java.lang.String)>("http://api.twitter.com/oauth/request_token");

        virtualinvoke $r0.<twitter4j.conf.ConfigurationBase: void setOAuthAuthorizationURL(java.lang.String)>("http://api.twitter.com/oauth/authorize");

        virtualinvoke $r0.<twitter4j.conf.ConfigurationBase: void setOAuthAccessTokenURL(java.lang.String)>("http://api.twitter.com/oauth/access_token");

        virtualinvoke $r0.<twitter4j.conf.ConfigurationBase: void setOAuthAuthenticationURL(java.lang.String)>("http://api.twitter.com/oauth/authenticate");

        virtualinvoke $r0.<twitter4j.conf.ConfigurationBase: void setRestBaseURL(java.lang.String)>("http://api.twitter.com/1.1/");

        virtualinvoke $r0.<twitter4j.conf.ConfigurationBase: void setStreamBaseURL(java.lang.String)>("https://stream.twitter.com/1.1/");

        virtualinvoke $r0.<twitter4j.conf.ConfigurationBase: void setUserStreamBaseURL(java.lang.String)>("https://userstream.twitter.com/1.1/");

        virtualinvoke $r0.<twitter4j.conf.ConfigurationBase: void setSiteStreamBaseURL(java.lang.String)>("https://sitestream.twitter.com/1.1/");

        virtualinvoke $r0.<twitter4j.conf.ConfigurationBase: void setDispatcherImpl(java.lang.String)>("twitter4j.internal.async.DispatcherImpl");

        virtualinvoke $r0.<twitter4j.conf.ConfigurationBase: void setLoggerFactory(java.lang.String)>(null);

        virtualinvoke $r0.<twitter4j.conf.ConfigurationBase: void setUserStreamRepliesAllEnabled(boolean)>(0);

        virtualinvoke $r0.<twitter4j.conf.ConfigurationBase: void setStallWarningsEnabled(boolean)>(1);

        $r2 = <twitter4j.conf.ConfigurationBase: java.lang.String dalvikDetected>;

     label1:
        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("twitter4j.dalvik", $r2);

     label2:
        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r2);

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        $r0.<twitter4j.conf.ConfigurationBase: boolean IS_DALVIK> = $z0;

        $r2 = <twitter4j.conf.ConfigurationBase: java.lang.String gaeDetected>;

     label3:
        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("twitter4j.gae", $r2);

     label4:
        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r2);

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        $r0.<twitter4j.conf.ConfigurationBase: boolean IS_GAE> = $z0;

        virtualinvoke $r0.<twitter4j.conf.ConfigurationBase: void setMediaProvider(java.lang.String)>("TWITTER");

        virtualinvoke $r0.<twitter4j.conf.ConfigurationBase: void setMediaProviderAPIKey(java.lang.String)>(null);

        virtualinvoke $r0.<twitter4j.conf.ConfigurationBase: void setMediaProviderParameters(java.util.Properties)>(null);

        return;

     label5:
        $r1 := @caughtexception;

        $r2 = <twitter4j.conf.ConfigurationBase: java.lang.String dalvikDetected>;

        goto label2;

     label6:
        $r5 := @caughtexception;

        $r2 = <twitter4j.conf.ConfigurationBase: java.lang.String gaeDetected>;

        goto label4;

        catch java.lang.SecurityException from label1 to label2 with label5;
        catch java.lang.SecurityException from label3 to label4 with label6;
    }

    private static void cacheInstance(twitter4j.conf.ConfigurationBase)
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.util.List $r1;
        boolean $z0;

        $r0 := @parameter0: twitter4j.conf.ConfigurationBase;

        $r1 = <twitter4j.conf.ConfigurationBase: java.util.List instances>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean contains(java.lang.Object)>($r0);

        if $z0 != 0 goto label1;

        $r1 = <twitter4j.conf.ConfigurationBase: java.util.List instances>;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r0);

        return;

     label1:
        return;
    }

    private void fixRestBaseURL()
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        $r1 = "http://api.twitter.com/1.1/";

        $r2 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String restBaseURL>;

        $r2 = staticinvoke <twitter4j.conf.ConfigurationBase: java.lang.String fixURL(boolean,java.lang.String)>(0, $r2);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $z0 = $r0.<twitter4j.conf.ConfigurationBase: boolean useSSL>;

        $r2 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String restBaseURL>;

        $r2 = staticinvoke <twitter4j.conf.ConfigurationBase: java.lang.String fixURL(boolean,java.lang.String)>($z0, $r2);

        $r0.<twitter4j.conf.ConfigurationBase: java.lang.String restBaseURL> = $r2;

     label1:
        $r2 = "http://api.twitter.com/oauth/access_token";

        $r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAccessTokenURL>;

        $r1 = staticinvoke <twitter4j.conf.ConfigurationBase: java.lang.String fixURL(boolean,java.lang.String)>(0, $r1);

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        $z0 = $r0.<twitter4j.conf.ConfigurationBase: boolean useSSL>;

        $r2 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAccessTokenURL>;

        $r2 = staticinvoke <twitter4j.conf.ConfigurationBase: java.lang.String fixURL(boolean,java.lang.String)>($z0, $r2);

        $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAccessTokenURL> = $r2;

     label2:
        $r2 = "http://api.twitter.com/oauth/authenticate";

        $r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAuthenticationURL>;

        $r1 = staticinvoke <twitter4j.conf.ConfigurationBase: java.lang.String fixURL(boolean,java.lang.String)>(0, $r1);

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label3;

        $z0 = $r0.<twitter4j.conf.ConfigurationBase: boolean useSSL>;

        $r2 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAuthenticationURL>;

        $r2 = staticinvoke <twitter4j.conf.ConfigurationBase: java.lang.String fixURL(boolean,java.lang.String)>($z0, $r2);

        $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAuthenticationURL> = $r2;

     label3:
        $r2 = "http://api.twitter.com/oauth/authorize";

        $r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAuthorizationURL>;

        $r1 = staticinvoke <twitter4j.conf.ConfigurationBase: java.lang.String fixURL(boolean,java.lang.String)>(0, $r1);

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label4;

        $z0 = $r0.<twitter4j.conf.ConfigurationBase: boolean useSSL>;

        $r2 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAuthorizationURL>;

        $r2 = staticinvoke <twitter4j.conf.ConfigurationBase: java.lang.String fixURL(boolean,java.lang.String)>($z0, $r2);

        $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAuthorizationURL> = $r2;

     label4:
        $r2 = "http://api.twitter.com/oauth/request_token";

        $r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthRequestTokenURL>;

        $r1 = staticinvoke <twitter4j.conf.ConfigurationBase: java.lang.String fixURL(boolean,java.lang.String)>(0, $r1);

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label5;

        $z0 = $r0.<twitter4j.conf.ConfigurationBase: boolean useSSL>;

        $r2 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthRequestTokenURL>;

        $r2 = staticinvoke <twitter4j.conf.ConfigurationBase: java.lang.String fixURL(boolean,java.lang.String)>($z0, $r2);

        $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthRequestTokenURL> = $r2;

        return;

     label5:
        return;
    }

    static java.lang.String fixURL(boolean, java.lang.String)
    {
        boolean $z0;
        java.lang.String $r0;
        int $i0;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2;

        $z0 := @parameter0: boolean;

        $r0 := @parameter1: java.lang.String;

        if $r0 != null goto label1;

        return null;

     label1:
        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String)>("://");

        if -1 != $i0 goto label2;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("url should contain \'://\'");

        throw $r1;

     label2:
        $i0 = $i0 + 3;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i0);

        if $z0 == 0 goto label3;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("https://");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    private static twitter4j.conf.ConfigurationBase getInstance(twitter4j.conf.ConfigurationBase)
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.util.List $r1;
        int $i0;
        java.lang.Object $r2;

        $r0 := @parameter0: twitter4j.conf.ConfigurationBase;

        $r1 = <twitter4j.conf.ConfigurationBase: java.util.List instances>;

        $i0 = interfaceinvoke $r1.<java.util.List: int indexOf(java.lang.Object)>($r0);

        if $i0 != -1 goto label1;

        $r1 = <twitter4j.conf.ConfigurationBase: java.util.List instances>;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r0);

        return $r0;

     label1:
        $r1 = <twitter4j.conf.ConfigurationBase: java.util.List instances>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r0 = (twitter4j.conf.ConfigurationBase) $r2;

        return $r0;
    }

    private void initRequestHeaders()
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.util.HashMap $r1;
        java.lang.String $r2;
        java.util.Map $r3;
        boolean $z0;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        $r0.<twitter4j.conf.ConfigurationBase: java.util.Map requestHeaders> = $r1;

        $r3 = $r0.<twitter4j.conf.ConfigurationBase: java.util.Map requestHeaders>;

        $r2 = virtualinvoke $r0.<twitter4j.conf.ConfigurationBase: java.lang.String getClientVersion()>();

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("X-Twitter-Client-Version", $r2);

        $r3 = $r0.<twitter4j.conf.ConfigurationBase: java.util.Map requestHeaders>;

        $r2 = virtualinvoke $r0.<twitter4j.conf.ConfigurationBase: java.lang.String getClientURL()>();

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("X-Twitter-Client-URL", $r2);

        $r3 = $r0.<twitter4j.conf.ConfigurationBase: java.util.Map requestHeaders>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("X-Twitter-Client", "Twitter4J");

        $r3 = $r0.<twitter4j.conf.ConfigurationBase: java.util.Map requestHeaders>;

        $r2 = virtualinvoke $r0.<twitter4j.conf.ConfigurationBase: java.lang.String getUserAgent()>();

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("User-Agent", $r2);

        $z0 = $r0.<twitter4j.conf.ConfigurationBase: boolean gzipEnabled>;

        if $z0 == 0 goto label1;

        $r3 = $r0.<twitter4j.conf.ConfigurationBase: java.util.Map requestHeaders>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Accept-Encoding", "gzip");

     label1:
        $z0 = $r0.<twitter4j.conf.ConfigurationBase: boolean IS_DALVIK>;

        if $z0 == 0 goto label2;

        $r3 = $r0.<twitter4j.conf.ConfigurationBase: java.util.Map requestHeaders>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Connection", "close");

        return;

     label2:
        return;
    }

    protected void cacheInstance()
    {
        twitter4j.conf.ConfigurationBase $r0;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        staticinvoke <twitter4j.conf.ConfigurationBase: void cacheInstance(twitter4j.conf.ConfigurationBase)>($r0);

        return;
    }

    public void dumpConfiguration()
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.lang.reflect.Field $r1;
        int $i0, $i1;
        java.lang.String $r2, $r7;
        twitter4j.internal.logging.Logger $r3;
        boolean $z0;
        java.lang.Class $r4;
        java.lang.reflect.Field[] $r5;
        java.lang.Object $r6;
        java.lang.StringBuilder $r8;
        java.lang.IllegalAccessException $r9;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        $r3 = staticinvoke <twitter4j.internal.logging.Logger: twitter4j.internal.logging.Logger getLogger(java.lang.Class)>(class "twitter4j/conf/ConfigurationBase");

        $z0 = $r0.<twitter4j.conf.ConfigurationBase: boolean debug>;

        if $z0 == 0 goto label07;

        $r4 = class "twitter4j/conf/ConfigurationBase";

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        $i1 = lengthof $r5;

        $i0 = 0;

     label01:
        if $i0 >= $i1 goto label07;

        $r1 = $r5[$i0];

     label02:
        $r6 = virtualinvoke $r1.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r0);

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

     label03:
        if $r6 == null goto label05;

        $r7 = virtualinvoke $r1.<java.lang.reflect.Field: java.lang.String getName()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean matches(java.lang.String)>("oAuthConsumerSecret|oAuthAccessTokenSecret|password");

        if $z0 == 0 goto label05;

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        $r7 = staticinvoke <twitter4j.internal.util.z_T4JInternalStringUtil: java.lang.String maskString(java.lang.String)>($r7);

     label04:
        $r2 = $r7;

     label05:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r1.<java.lang.reflect.Field: java.lang.String getName()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<twitter4j.internal.logging.Logger: void debug(java.lang.String)>($r7);

     label06:
        $i0 = $i0 + 1;

        goto label01;

     label07:
        $z0 = $r0.<twitter4j.conf.ConfigurationBase: boolean includeRTsEnabled>;

        if $z0 != 0 goto label08;

        virtualinvoke $r3.<twitter4j.internal.logging.Logger: void warn(java.lang.String)>("includeRTsEnabled is set to false. This configuration may not take effect after May 14th, 2012. https://dev.twitter.com/blog/api-housekeeping");

     label08:
        $z0 = $r0.<twitter4j.conf.ConfigurationBase: boolean includeEntitiesEnabled>;

        if $z0 != 0 goto label10;

        virtualinvoke $r3.<twitter4j.internal.logging.Logger: void warn(java.lang.String)>("includeEntitiesEnabled is set to false. This configuration may not take effect after May 14th, 2012. https://dev.twitter.com/blog/api-housekeeping");

        return;

     label09:
        $r9 := @caughtexception;

        goto label06;

     label10:
        return;

        catch java.lang.IllegalAccessException from label02 to label03 with label09;
        catch java.lang.IllegalAccessException from label03 to label04 with label09;
        catch java.lang.IllegalAccessException from label05 to label06 with label09;
    }

    public boolean equals(java.lang.Object)
    {
        twitter4j.conf.ConfigurationBase $r0, $r4;
        java.lang.Object $r1;
        long $l0, $l3;
        java.lang.Class $r2, $r3;
        boolean $z0, $z1;
        int $i1, $i2;
        byte $b4;
        java.lang.String $r5, $r6;
        java.util.Properties $r7, $r8;
        java.util.Map $r9, $r10;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        $r1 := @parameter0: java.lang.Object;

        if $r0 != $r1 goto label001;

        return 1;

     label001:
        if $r1 == null goto label002;

        $r2 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label003;

     label002:
        return 0;

     label003:
        $r4 = (twitter4j.conf.ConfigurationBase) $r1;

        $z0 = $r0.<twitter4j.conf.ConfigurationBase: boolean IS_DALVIK>;

        $z1 = $r4.<twitter4j.conf.ConfigurationBase: boolean IS_DALVIK>;

        if $z0 == $z1 goto label004;

        return 0;

     label004:
        $z1 = $r0.<twitter4j.conf.ConfigurationBase: boolean IS_GAE>;

        $z0 = $r4.<twitter4j.conf.ConfigurationBase: boolean IS_GAE>;

        if $z1 == $z0 goto label005;

        return 0;

     label005:
        $i1 = $r0.<twitter4j.conf.ConfigurationBase: int asyncNumThreads>;

        $i2 = $r4.<twitter4j.conf.ConfigurationBase: int asyncNumThreads>;

        if $i1 == $i2 goto label006;

        return 0;

     label006:
        $l3 = $r0.<twitter4j.conf.ConfigurationBase: long contributingTo>;

        $l0 = $r4.<twitter4j.conf.ConfigurationBase: long contributingTo>;

        $b4 = $l3 cmp $l0;

        if $b4 == 0 goto label007;

        return 0;

     label007:
        $z1 = $r0.<twitter4j.conf.ConfigurationBase: boolean debug>;

        $z0 = $r4.<twitter4j.conf.ConfigurationBase: boolean debug>;

        if $z1 == $z0 goto label008;

        return 0;

     label008:
        $i2 = $r0.<twitter4j.conf.ConfigurationBase: int defaultMaxPerRoute>;

        $i1 = $r4.<twitter4j.conf.ConfigurationBase: int defaultMaxPerRoute>;

        if $i2 == $i1 goto label009;

        return 0;

     label009:
        $z1 = $r0.<twitter4j.conf.ConfigurationBase: boolean gzipEnabled>;

        $z0 = $r4.<twitter4j.conf.ConfigurationBase: boolean gzipEnabled>;

        if $z1 == $z0 goto label010;

        return 0;

     label010:
        $i2 = $r0.<twitter4j.conf.ConfigurationBase: int httpConnectionTimeout>;

        $i1 = $r4.<twitter4j.conf.ConfigurationBase: int httpConnectionTimeout>;

        if $i2 == $i1 goto label011;

        return 0;

     label011:
        $i2 = $r0.<twitter4j.conf.ConfigurationBase: int httpProxyPort>;

        $i1 = $r4.<twitter4j.conf.ConfigurationBase: int httpProxyPort>;

        if $i2 == $i1 goto label012;

        return 0;

     label012:
        $i2 = $r0.<twitter4j.conf.ConfigurationBase: int httpReadTimeout>;

        $i1 = $r4.<twitter4j.conf.ConfigurationBase: int httpReadTimeout>;

        if $i2 == $i1 goto label013;

        return 0;

     label013:
        $i2 = $r0.<twitter4j.conf.ConfigurationBase: int httpRetryCount>;

        $i1 = $r4.<twitter4j.conf.ConfigurationBase: int httpRetryCount>;

        if $i2 == $i1 goto label014;

        return 0;

     label014:
        $i2 = $r0.<twitter4j.conf.ConfigurationBase: int httpRetryIntervalSeconds>;

        $i1 = $r4.<twitter4j.conf.ConfigurationBase: int httpRetryIntervalSeconds>;

        if $i2 == $i1 goto label015;

        return 0;

     label015:
        $i2 = $r0.<twitter4j.conf.ConfigurationBase: int httpStreamingReadTimeout>;

        $i1 = $r4.<twitter4j.conf.ConfigurationBase: int httpStreamingReadTimeout>;

        if $i2 == $i1 goto label016;

        return 0;

     label016:
        $z1 = $r0.<twitter4j.conf.ConfigurationBase: boolean includeEntitiesEnabled>;

        $z0 = $r4.<twitter4j.conf.ConfigurationBase: boolean includeEntitiesEnabled>;

        if $z1 == $z0 goto label017;

        return 0;

     label017:
        $z1 = $r0.<twitter4j.conf.ConfigurationBase: boolean includeMyRetweetEnabled>;

        $z0 = $r4.<twitter4j.conf.ConfigurationBase: boolean includeMyRetweetEnabled>;

        if $z1 == $z0 goto label018;

        return 0;

     label018:
        $z1 = $r0.<twitter4j.conf.ConfigurationBase: boolean includeRTsEnabled>;

        $z0 = $r4.<twitter4j.conf.ConfigurationBase: boolean includeRTsEnabled>;

        if $z1 == $z0 goto label019;

        return 0;

     label019:
        $z1 = $r0.<twitter4j.conf.ConfigurationBase: boolean jsonStoreEnabled>;

        $z0 = $r4.<twitter4j.conf.ConfigurationBase: boolean jsonStoreEnabled>;

        if $z1 == $z0 goto label020;

        return 0;

     label020:
        $i2 = $r0.<twitter4j.conf.ConfigurationBase: int maxTotalConnections>;

        $i1 = $r4.<twitter4j.conf.ConfigurationBase: int maxTotalConnections>;

        if $i2 == $i1 goto label021;

        return 0;

     label021:
        $z1 = $r0.<twitter4j.conf.ConfigurationBase: boolean mbeanEnabled>;

        $z0 = $r4.<twitter4j.conf.ConfigurationBase: boolean mbeanEnabled>;

        if $z1 == $z0 goto label022;

        return 0;

     label022:
        $z1 = $r0.<twitter4j.conf.ConfigurationBase: boolean prettyDebug>;

        $z0 = $r4.<twitter4j.conf.ConfigurationBase: boolean prettyDebug>;

        if $z1 == $z0 goto label023;

        return 0;

     label023:
        $z1 = $r0.<twitter4j.conf.ConfigurationBase: boolean stallWarningsEnabled>;

        $z0 = $r4.<twitter4j.conf.ConfigurationBase: boolean stallWarningsEnabled>;

        if $z1 == $z0 goto label024;

        return 0;

     label024:
        $z1 = $r0.<twitter4j.conf.ConfigurationBase: boolean useSSL>;

        $z0 = $r4.<twitter4j.conf.ConfigurationBase: boolean useSSL>;

        if $z1 == $z0 goto label025;

        return 0;

     label025:
        $z1 = $r0.<twitter4j.conf.ConfigurationBase: boolean userStreamRepliesAllEnabled>;

        $z0 = $r4.<twitter4j.conf.ConfigurationBase: boolean userStreamRepliesAllEnabled>;

        if $z1 == $z0 goto label026;

        return 0;

     label026:
        $r5 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String clientURL>;

        if $r5 == null goto label028;

        $r5 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String clientURL>;

        $r6 = $r4.<twitter4j.conf.ConfigurationBase: java.lang.String clientURL>;

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 != 0 goto label029;

     label027:
        return 0;

     label028:
        $r6 = $r4.<twitter4j.conf.ConfigurationBase: java.lang.String clientURL>;

        if $r6 != null goto label027;

     label029:
        $r6 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String clientVersion>;

        if $r6 == null goto label031;

        $r6 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String clientVersion>;

        $r5 = $r4.<twitter4j.conf.ConfigurationBase: java.lang.String clientVersion>;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 != 0 goto label032;

     label030:
        return 0;

     label031:
        $r6 = $r4.<twitter4j.conf.ConfigurationBase: java.lang.String clientVersion>;

        if $r6 != null goto label030;

     label032:
        $r6 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String dispatcherImpl>;

        if $r6 == null goto label034;

        $r6 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String dispatcherImpl>;

        $r5 = $r4.<twitter4j.conf.ConfigurationBase: java.lang.String dispatcherImpl>;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 != 0 goto label035;

     label033:
        return 0;

     label034:
        $r6 = $r4.<twitter4j.conf.ConfigurationBase: java.lang.String dispatcherImpl>;

        if $r6 != null goto label033;

     label035:
        $r6 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String httpProxyHost>;

        if $r6 == null goto label037;

        $r6 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String httpProxyHost>;

        $r5 = $r4.<twitter4j.conf.ConfigurationBase: java.lang.String httpProxyHost>;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 != 0 goto label038;

     label036:
        return 0;

     label037:
        $r6 = $r4.<twitter4j.conf.ConfigurationBase: java.lang.String httpProxyHost>;

        if $r6 != null goto label036;

     label038:
        $r6 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String httpProxyPassword>;

        if $r6 == null goto label040;

        $r6 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String httpProxyPassword>;

        $r5 = $r4.<twitter4j.conf.ConfigurationBase: java.lang.String httpProxyPassword>;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 != 0 goto label041;

     label039:
        return 0;

     label040:
        $r6 = $r4.<twitter4j.conf.ConfigurationBase: java.lang.String httpProxyPassword>;

        if $r6 != null goto label039;

     label041:
        $r6 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String httpProxyUser>;

        if $r6 == null goto label043;

        $r6 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String httpProxyUser>;

        $r5 = $r4.<twitter4j.conf.ConfigurationBase: java.lang.String httpProxyUser>;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 != 0 goto label044;

     label042:
        return 0;

     label043:
        $r6 = $r4.<twitter4j.conf.ConfigurationBase: java.lang.String httpProxyUser>;

        if $r6 != null goto label042;

     label044:
        $r6 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String loggerFactory>;

        if $r6 == null goto label046;

        $r6 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String loggerFactory>;

        $r5 = $r4.<twitter4j.conf.ConfigurationBase: java.lang.String loggerFactory>;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 != 0 goto label047;

     label045:
        return 0;

     label046:
        $r6 = $r4.<twitter4j.conf.ConfigurationBase: java.lang.String loggerFactory>;

        if $r6 != null goto label045;

     label047:
        $r6 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String mediaProvider>;

        if $r6 == null goto label049;

        $r6 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String mediaProvider>;

        $r5 = $r4.<twitter4j.conf.ConfigurationBase: java.lang.String mediaProvider>;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 != 0 goto label050;

     label048:
        return 0;

     label049:
        $r6 = $r4.<twitter4j.conf.ConfigurationBase: java.lang.String mediaProvider>;

        if $r6 != null goto label048;

     label050:
        $r6 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String mediaProviderAPIKey>;

        if $r6 == null goto label052;

        $r6 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String mediaProviderAPIKey>;

        $r5 = $r4.<twitter4j.conf.ConfigurationBase: java.lang.String mediaProviderAPIKey>;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 != 0 goto label053;

     label051:
        return 0;

     label052:
        $r6 = $r4.<twitter4j.conf.ConfigurationBase: java.lang.String mediaProviderAPIKey>;

        if $r6 != null goto label051;

     label053:
        $r7 = $r0.<twitter4j.conf.ConfigurationBase: java.util.Properties mediaProviderParameters>;

        if $r7 == null goto label055;

        $r7 = $r0.<twitter4j.conf.ConfigurationBase: java.util.Properties mediaProviderParameters>;

        $r8 = $r4.<twitter4j.conf.ConfigurationBase: java.util.Properties mediaProviderParameters>;

        $z1 = virtualinvoke $r7.<java.util.Properties: boolean equals(java.lang.Object)>($r8);

        if $z1 != 0 goto label056;

     label054:
        return 0;

     label055:
        $r8 = $r4.<twitter4j.conf.ConfigurationBase: java.util.Properties mediaProviderParameters>;

        if $r8 != null goto label054;

     label056:
        $r6 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAccessToken>;

        if $r6 == null goto label058;

        $r6 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAccessToken>;

        $r5 = $r4.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAccessToken>;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 != 0 goto label059;

     label057:
        return 0;

     label058:
        $r6 = $r4.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAccessToken>;

        if $r6 != null goto label057;

     label059:
        $r6 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAccessTokenSecret>;

        if $r6 == null goto label061;

        $r6 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAccessTokenSecret>;

        $r5 = $r4.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAccessTokenSecret>;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 != 0 goto label062;

     label060:
        return 0;

     label061:
        $r6 = $r4.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAccessTokenSecret>;

        if $r6 != null goto label060;

     label062:
        $r6 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAccessTokenURL>;

        if $r6 == null goto label064;

        $r6 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAccessTokenURL>;

        $r5 = $r4.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAccessTokenURL>;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 != 0 goto label065;

     label063:
        return 0;

     label064:
        $r6 = $r4.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAccessTokenURL>;

        if $r6 != null goto label063;

     label065:
        $r6 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAuthenticationURL>;

        if $r6 == null goto label067;

        $r6 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAuthenticationURL>;

        $r5 = $r4.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAuthenticationURL>;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 != 0 goto label068;

     label066:
        return 0;

     label067:
        $r6 = $r4.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAuthenticationURL>;

        if $r6 != null goto label066;

     label068:
        $r6 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAuthorizationURL>;

        if $r6 == null goto label070;

        $r6 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAuthorizationURL>;

        $r5 = $r4.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAuthorizationURL>;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 != 0 goto label071;

     label069:
        return 0;

     label070:
        $r6 = $r4.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAuthorizationURL>;

        if $r6 != null goto label069;

     label071:
        $r6 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthConsumerKey>;

        if $r6 == null goto label073;

        $r6 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthConsumerKey>;

        $r5 = $r4.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthConsumerKey>;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 != 0 goto label074;

     label072:
        return 0;

     label073:
        $r6 = $r4.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthConsumerKey>;

        if $r6 != null goto label072;

     label074:
        $r6 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthConsumerSecret>;

        if $r6 == null goto label076;

        $r6 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthConsumerSecret>;

        $r5 = $r4.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthConsumerSecret>;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 != 0 goto label077;

     label075:
        return 0;

     label076:
        $r6 = $r4.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthConsumerSecret>;

        if $r6 != null goto label075;

     label077:
        $r6 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthRequestTokenURL>;

        if $r6 == null goto label079;

        $r6 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthRequestTokenURL>;

        $r5 = $r4.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthRequestTokenURL>;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 != 0 goto label080;

     label078:
        return 0;

     label079:
        $r6 = $r4.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthRequestTokenURL>;

        if $r6 != null goto label078;

     label080:
        $r6 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String password>;

        if $r6 == null goto label082;

        $r6 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String password>;

        $r5 = $r4.<twitter4j.conf.ConfigurationBase: java.lang.String password>;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 != 0 goto label083;

     label081:
        return 0;

     label082:
        $r6 = $r4.<twitter4j.conf.ConfigurationBase: java.lang.String password>;

        if $r6 != null goto label081;

     label083:
        $r9 = $r0.<twitter4j.conf.ConfigurationBase: java.util.Map requestHeaders>;

        if $r9 == null goto label085;

        $r9 = $r0.<twitter4j.conf.ConfigurationBase: java.util.Map requestHeaders>;

        $r10 = $r4.<twitter4j.conf.ConfigurationBase: java.util.Map requestHeaders>;

        $z1 = interfaceinvoke $r9.<java.util.Map: boolean equals(java.lang.Object)>($r10);

        if $z1 != 0 goto label086;

     label084:
        return 0;

     label085:
        $r10 = $r4.<twitter4j.conf.ConfigurationBase: java.util.Map requestHeaders>;

        if $r10 != null goto label084;

     label086:
        $r6 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String restBaseURL>;

        if $r6 == null goto label088;

        $r6 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String restBaseURL>;

        $r5 = $r4.<twitter4j.conf.ConfigurationBase: java.lang.String restBaseURL>;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 != 0 goto label089;

     label087:
        return 0;

     label088:
        $r6 = $r4.<twitter4j.conf.ConfigurationBase: java.lang.String restBaseURL>;

        if $r6 != null goto label087;

     label089:
        $r6 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String siteStreamBaseURL>;

        if $r6 == null goto label091;

        $r6 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String siteStreamBaseURL>;

        $r5 = $r4.<twitter4j.conf.ConfigurationBase: java.lang.String siteStreamBaseURL>;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 != 0 goto label092;

     label090:
        return 0;

     label091:
        $r6 = $r4.<twitter4j.conf.ConfigurationBase: java.lang.String siteStreamBaseURL>;

        if $r6 != null goto label090;

     label092:
        $r6 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String streamBaseURL>;

        if $r6 == null goto label094;

        $r6 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String streamBaseURL>;

        $r5 = $r4.<twitter4j.conf.ConfigurationBase: java.lang.String streamBaseURL>;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 != 0 goto label095;

     label093:
        return 0;

     label094:
        $r6 = $r4.<twitter4j.conf.ConfigurationBase: java.lang.String streamBaseURL>;

        if $r6 != null goto label093;

     label095:
        $r6 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String user>;

        if $r6 == null goto label097;

        $r6 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String user>;

        $r5 = $r4.<twitter4j.conf.ConfigurationBase: java.lang.String user>;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 != 0 goto label098;

     label096:
        return 0;

     label097:
        $r6 = $r4.<twitter4j.conf.ConfigurationBase: java.lang.String user>;

        if $r6 != null goto label096;

     label098:
        $r6 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String userAgent>;

        if $r6 == null goto label100;

        $r6 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String userAgent>;

        $r5 = $r4.<twitter4j.conf.ConfigurationBase: java.lang.String userAgent>;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 != 0 goto label101;

     label099:
        return 0;

     label100:
        $r6 = $r4.<twitter4j.conf.ConfigurationBase: java.lang.String userAgent>;

        if $r6 != null goto label099;

     label101:
        $r6 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String userStreamBaseURL>;

        if $r6 == null goto label103;

        $r6 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String userStreamBaseURL>;

        $r5 = $r4.<twitter4j.conf.ConfigurationBase: java.lang.String userStreamBaseURL>;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 != 0 goto label104;

     label102:
        return 0;

     label103:
        $r6 = $r4.<twitter4j.conf.ConfigurationBase: java.lang.String userStreamBaseURL>;

        if $r6 == null goto label105;

        goto label102;

     label104:
        return 1;

     label105:
        return 1;
    }

    public final int getAsyncNumThreads()
    {
        twitter4j.conf.ConfigurationBase $r0;
        int i0;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        i0 = $r0.<twitter4j.conf.ConfigurationBase: int asyncNumThreads>;

        return i0;
    }

    public final java.lang.String getClientURL()
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.lang.String r1;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String clientURL>;

        return r1;
    }

    public final java.lang.String getClientVersion()
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.lang.String r1;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String clientVersion>;

        return r1;
    }

    public final long getContributingTo()
    {
        twitter4j.conf.ConfigurationBase $r0;
        long l0;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        l0 = $r0.<twitter4j.conf.ConfigurationBase: long contributingTo>;

        return l0;
    }

    public java.lang.String getDispatcherImpl()
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.lang.String r1;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String dispatcherImpl>;

        return r1;
    }

    public final int getHttpConnectionTimeout()
    {
        twitter4j.conf.ConfigurationBase $r0;
        int i0;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        i0 = $r0.<twitter4j.conf.ConfigurationBase: int httpConnectionTimeout>;

        return i0;
    }

    public final int getHttpDefaultMaxPerRoute()
    {
        twitter4j.conf.ConfigurationBase $r0;
        int i0;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        i0 = $r0.<twitter4j.conf.ConfigurationBase: int defaultMaxPerRoute>;

        return i0;
    }

    public final int getHttpMaxTotalConnections()
    {
        twitter4j.conf.ConfigurationBase $r0;
        int i0;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        i0 = $r0.<twitter4j.conf.ConfigurationBase: int maxTotalConnections>;

        return i0;
    }

    public final java.lang.String getHttpProxyHost()
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.lang.String r1;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String httpProxyHost>;

        return r1;
    }

    public final java.lang.String getHttpProxyPassword()
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.lang.String r1;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String httpProxyPassword>;

        return r1;
    }

    public final int getHttpProxyPort()
    {
        twitter4j.conf.ConfigurationBase $r0;
        int i0;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        i0 = $r0.<twitter4j.conf.ConfigurationBase: int httpProxyPort>;

        return i0;
    }

    public final java.lang.String getHttpProxyUser()
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.lang.String r1;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String httpProxyUser>;

        return r1;
    }

    public final int getHttpReadTimeout()
    {
        twitter4j.conf.ConfigurationBase $r0;
        int i0;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        i0 = $r0.<twitter4j.conf.ConfigurationBase: int httpReadTimeout>;

        return i0;
    }

    public final int getHttpRetryCount()
    {
        twitter4j.conf.ConfigurationBase $r0;
        int i0;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        i0 = $r0.<twitter4j.conf.ConfigurationBase: int httpRetryCount>;

        return i0;
    }

    public final int getHttpRetryIntervalSeconds()
    {
        twitter4j.conf.ConfigurationBase $r0;
        int i0;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        i0 = $r0.<twitter4j.conf.ConfigurationBase: int httpRetryIntervalSeconds>;

        return i0;
    }

    public int getHttpStreamingReadTimeout()
    {
        twitter4j.conf.ConfigurationBase $r0;
        int i0;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        i0 = $r0.<twitter4j.conf.ConfigurationBase: int httpStreamingReadTimeout>;

        return i0;
    }

    public java.lang.String getLoggerFactory()
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.lang.String r1;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String loggerFactory>;

        return r1;
    }

    public java.lang.String getMediaProvider()
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.lang.String r1;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String mediaProvider>;

        return r1;
    }

    public java.lang.String getMediaProviderAPIKey()
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.lang.String r1;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String mediaProviderAPIKey>;

        return r1;
    }

    public java.util.Properties getMediaProviderParameters()
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.util.Properties r1;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        r1 = $r0.<twitter4j.conf.ConfigurationBase: java.util.Properties mediaProviderParameters>;

        return r1;
    }

    public java.lang.String getOAuthAccessToken()
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.lang.String r1;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAccessToken>;

        return r1;
    }

    public java.lang.String getOAuthAccessTokenSecret()
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.lang.String r1;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAccessTokenSecret>;

        return r1;
    }

    public java.lang.String getOAuthAccessTokenURL()
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.lang.String r1;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAccessTokenURL>;

        return r1;
    }

    public java.lang.String getOAuthAuthenticationURL()
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.lang.String r1;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAuthenticationURL>;

        return r1;
    }

    public java.lang.String getOAuthAuthorizationURL()
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.lang.String r1;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAuthorizationURL>;

        return r1;
    }

    public final java.lang.String getOAuthConsumerKey()
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.lang.String r1;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthConsumerKey>;

        return r1;
    }

    public final java.lang.String getOAuthConsumerSecret()
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.lang.String r1;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthConsumerSecret>;

        return r1;
    }

    public java.lang.String getOAuthRequestTokenURL()
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.lang.String r1;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthRequestTokenURL>;

        return r1;
    }

    public final java.lang.String getPassword()
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.lang.String r1;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String password>;

        return r1;
    }

    public java.util.Map getRequestHeaders()
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.util.Map r1;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        r1 = $r0.<twitter4j.conf.ConfigurationBase: java.util.Map requestHeaders>;

        return r1;
    }

    public java.lang.String getRestBaseURL()
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.lang.String r1;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String restBaseURL>;

        return r1;
    }

    public java.lang.String getSiteStreamBaseURL()
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.lang.String r1;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String siteStreamBaseURL>;

        return r1;
    }

    public java.lang.String getStreamBaseURL()
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.lang.String r1;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String streamBaseURL>;

        return r1;
    }

    public final java.lang.String getUser()
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.lang.String r1;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String user>;

        return r1;
    }

    public final java.lang.String getUserAgent()
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.lang.String r1;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String userAgent>;

        return r1;
    }

    public java.lang.String getUserStreamBaseURL()
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.lang.String r1;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String userStreamBaseURL>;

        return r1;
    }

    public int hashCode()
    {
        twitter4j.conf.ConfigurationBase $r0;
        byte $b0, $b1;
        int $i2, $i3, $i5;
        boolean $z0;
        long $l4, $l6;
        java.lang.String $r1;
        java.util.Properties $r2;
        java.util.Map $r3;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        $b1 = 1;

        $i2 = 0;

        $z0 = $r0.<twitter4j.conf.ConfigurationBase: boolean debug>;

        if $z0 == 0 goto label40;

        $b0 = 1;

     label01:
        $i3 = $b0 * 31;

        $r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String userAgent>;

        if $r1 == null goto label41;

        $r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String userAgent>;

        $i5 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

     label02:
        $i5 = $i3 + $i5;

        $i5 = $i5 * 31;

        $r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String user>;

        if $r1 == null goto label42;

        $r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String user>;

        $i3 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

     label03:
        $i5 = $i5 + $i3;

        $i5 = $i5 * 31;

        $r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String password>;

        if $r1 == null goto label43;

        $r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String password>;

        $i3 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

     label04:
        $i5 = $i5 + $i3;

        $i5 = $i5 * 31;

        $z0 = $r0.<twitter4j.conf.ConfigurationBase: boolean useSSL>;

        if $z0 == 0 goto label44;

        $b0 = 1;

     label05:
        $i5 = $i5 + $b0;

        $i5 = $i5 * 31;

        $z0 = $r0.<twitter4j.conf.ConfigurationBase: boolean prettyDebug>;

        if $z0 == 0 goto label45;

        $b0 = 1;

     label06:
        $i5 = $i5 + $b0;

        $i5 = $i5 * 31;

        $z0 = $r0.<twitter4j.conf.ConfigurationBase: boolean gzipEnabled>;

        if $z0 == 0 goto label46;

        $b0 = 1;

     label07:
        $i5 = $i5 + $b0;

        $i5 = $i5 * 31;

        $r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String httpProxyHost>;

        if $r1 == null goto label47;

        $r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String httpProxyHost>;

        $i3 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

     label08:
        $i5 = $i5 + $i3;

        $i5 = $i5 * 31;

        $r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String httpProxyUser>;

        if $r1 == null goto label48;

        $r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String httpProxyUser>;

        $i3 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

     label09:
        $i5 = $i5 + $i3;

        $i5 = $i5 * 31;

        $r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String httpProxyPassword>;

        if $r1 == null goto label49;

        $r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String httpProxyPassword>;

        $i3 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

     label10:
        $i5 = $i5 + $i3;

        $i5 = $i5 * 31;

        $i3 = $r0.<twitter4j.conf.ConfigurationBase: int httpProxyPort>;

        $i5 = $i5 + $i3;

        $i5 = $i5 * 31;

        $i3 = $r0.<twitter4j.conf.ConfigurationBase: int httpConnectionTimeout>;

        $i5 = $i5 + $i3;

        $i5 = $i5 * 31;

        $i3 = $r0.<twitter4j.conf.ConfigurationBase: int httpReadTimeout>;

        $i5 = $i5 + $i3;

        $i5 = $i5 * 31;

        $i3 = $r0.<twitter4j.conf.ConfigurationBase: int httpStreamingReadTimeout>;

        $i5 = $i5 + $i3;

        $i5 = $i5 * 31;

        $i3 = $r0.<twitter4j.conf.ConfigurationBase: int httpRetryCount>;

        $i5 = $i5 + $i3;

        $i5 = $i5 * 31;

        $i3 = $r0.<twitter4j.conf.ConfigurationBase: int httpRetryIntervalSeconds>;

        $i5 = $i5 + $i3;

        $i5 = $i5 * 31;

        $i3 = $r0.<twitter4j.conf.ConfigurationBase: int maxTotalConnections>;

        $i5 = $i5 + $i3;

        $i5 = $i5 * 31;

        $i3 = $r0.<twitter4j.conf.ConfigurationBase: int defaultMaxPerRoute>;

        $i5 = $i5 + $i3;

        $i5 = $i5 * 31;

        $r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthConsumerKey>;

        if $r1 == null goto label50;

        $r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthConsumerKey>;

        $i3 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

     label11:
        $i5 = $i5 + $i3;

        $i5 = $i5 * 31;

        $r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthConsumerSecret>;

        if $r1 == null goto label51;

        $r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthConsumerSecret>;

        $i3 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

     label12:
        $i5 = $i5 + $i3;

        $i5 = $i5 * 31;

        $r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAccessToken>;

        if $r1 == null goto label52;

        $r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAccessToken>;

        $i3 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

     label13:
        $i5 = $i5 + $i3;

        $i5 = $i5 * 31;

        $r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAccessTokenSecret>;

        if $r1 == null goto label53;

        $r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAccessTokenSecret>;

        $i3 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

     label14:
        $i5 = $i5 + $i3;

        $i5 = $i5 * 31;

        $r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthRequestTokenURL>;

        if $r1 == null goto label54;

        $r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthRequestTokenURL>;

        $i3 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

     label15:
        $i5 = $i5 + $i3;

        $i5 = $i5 * 31;

        $r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAuthorizationURL>;

        if $r1 == null goto label55;

        $r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAuthorizationURL>;

        $i3 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

     label16:
        $i5 = $i5 + $i3;

        $i5 = $i5 * 31;

        $r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAccessTokenURL>;

        if $r1 == null goto label56;

        $r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAccessTokenURL>;

        $i3 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

     label17:
        $i5 = $i5 + $i3;

        $i5 = $i5 * 31;

        $r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAuthenticationURL>;

        if $r1 == null goto label57;

        $r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAuthenticationURL>;

        $i3 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

     label18:
        $i5 = $i5 + $i3;

        $i5 = $i5 * 31;

        $r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String restBaseURL>;

        if $r1 == null goto label58;

        $r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String restBaseURL>;

        $i3 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

     label19:
        $i5 = $i5 + $i3;

        $i5 = $i5 * 31;

        $r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String streamBaseURL>;

        if $r1 == null goto label59;

        $r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String streamBaseURL>;

        $i3 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

     label20:
        $i5 = $i5 + $i3;

        $i5 = $i5 * 31;

        $r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String userStreamBaseURL>;

        if $r1 == null goto label60;

        $r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String userStreamBaseURL>;

        $i3 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

     label21:
        $i5 = $i5 + $i3;

        $i5 = $i5 * 31;

        $r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String siteStreamBaseURL>;

        if $r1 == null goto label61;

        $r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String siteStreamBaseURL>;

        $i3 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

     label22:
        $i5 = $i5 + $i3;

        $i5 = $i5 * 31;

        $r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String dispatcherImpl>;

        if $r1 == null goto label62;

        $r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String dispatcherImpl>;

        $i3 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

     label23:
        $i5 = $i5 + $i3;

        $i5 = $i5 * 31;

        $r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String loggerFactory>;

        if $r1 == null goto label63;

        $r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String loggerFactory>;

        $i3 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

     label24:
        $i5 = $i5 + $i3;

        $i5 = $i5 * 31;

        $i3 = $r0.<twitter4j.conf.ConfigurationBase: int asyncNumThreads>;

        $i5 = $i5 + $i3;

        $i5 = $i5 * 31;

        $l6 = $r0.<twitter4j.conf.ConfigurationBase: long contributingTo>;

        $l4 = $r0.<twitter4j.conf.ConfigurationBase: long contributingTo>;

        $l4 = $l4 >>> 32;

        $l6 = $l6 ^ $l4;

        $i3 = (int) $l6;

        $i5 = $i5 + $i3;

        $i5 = $i5 * 31;

        $z0 = $r0.<twitter4j.conf.ConfigurationBase: boolean includeRTsEnabled>;

        if $z0 == 0 goto label64;

        $b0 = 1;

     label25:
        $i5 = $i5 + $b0;

        $i5 = $i5 * 31;

        $z0 = $r0.<twitter4j.conf.ConfigurationBase: boolean includeEntitiesEnabled>;

        if $z0 == 0 goto label65;

        $b0 = 1;

     label26:
        $i5 = $i5 + $b0;

        $i5 = $i5 * 31;

        $z0 = $r0.<twitter4j.conf.ConfigurationBase: boolean includeMyRetweetEnabled>;

        if $z0 == 0 goto label66;

        $b0 = 1;

     label27:
        $i5 = $i5 + $b0;

        $i5 = $i5 * 31;

        $z0 = $r0.<twitter4j.conf.ConfigurationBase: boolean jsonStoreEnabled>;

        if $z0 == 0 goto label67;

        $b0 = 1;

     label28:
        $i5 = $i5 + $b0;

        $i5 = $i5 * 31;

        $z0 = $r0.<twitter4j.conf.ConfigurationBase: boolean mbeanEnabled>;

        if $z0 == 0 goto label68;

        $b0 = 1;

     label29:
        $i5 = $i5 + $b0;

        $i5 = $i5 * 31;

        $z0 = $r0.<twitter4j.conf.ConfigurationBase: boolean userStreamRepliesAllEnabled>;

        if $z0 == 0 goto label69;

        $b0 = 1;

     label30:
        $i5 = $i5 + $b0;

        $i5 = $i5 * 31;

        $z0 = $r0.<twitter4j.conf.ConfigurationBase: boolean stallWarningsEnabled>;

        if $z0 == 0 goto label70;

        $b0 = 1;

     label31:
        $i5 = $i5 + $b0;

        $i5 = $i5 * 31;

        $r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String mediaProvider>;

        if $r1 == null goto label71;

        $r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String mediaProvider>;

        $i3 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

     label32:
        $i5 = $i5 + $i3;

        $i5 = $i5 * 31;

        $r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String mediaProviderAPIKey>;

        if $r1 == null goto label72;

        $r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String mediaProviderAPIKey>;

        $i3 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

     label33:
        $i5 = $i5 + $i3;

        $i5 = $i5 * 31;

        $r2 = $r0.<twitter4j.conf.ConfigurationBase: java.util.Properties mediaProviderParameters>;

        if $r2 == null goto label73;

        $r2 = $r0.<twitter4j.conf.ConfigurationBase: java.util.Properties mediaProviderParameters>;

        $i3 = virtualinvoke $r2.<java.util.Properties: int hashCode()>();

     label34:
        $i5 = $i5 + $i3;

        $i5 = $i5 * 31;

        $r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String clientVersion>;

        if $r1 == null goto label74;

        $r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String clientVersion>;

        $i3 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

     label35:
        $i5 = $i5 + $i3;

        $i5 = $i5 * 31;

        $r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String clientURL>;

        if $r1 == null goto label75;

        $r1 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String clientURL>;

        $i3 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

     label36:
        $i5 = $i5 + $i3;

        $i5 = $i5 * 31;

        $z0 = $r0.<twitter4j.conf.ConfigurationBase: boolean IS_DALVIK>;

        if $z0 == 0 goto label76;

        $b0 = 1;

     label37:
        $i5 = $i5 + $b0;

        $i5 = $i5 * 31;

        $z0 = $r0.<twitter4j.conf.ConfigurationBase: boolean IS_GAE>;

        if $z0 == 0 goto label77;

     label38:
        $i5 = $i5 + $b1;

        $i5 = $i5 * 31;

        $r3 = $r0.<twitter4j.conf.ConfigurationBase: java.util.Map requestHeaders>;

        if $r3 == null goto label39;

        $r3 = $r0.<twitter4j.conf.ConfigurationBase: java.util.Map requestHeaders>;

        $i2 = interfaceinvoke $r3.<java.util.Map: int hashCode()>();

     label39:
        $i5 = $i5 + $i2;

        return $i5;

     label40:
        $b0 = 0;

        goto label01;

     label41:
        $i5 = 0;

        goto label02;

     label42:
        $i3 = 0;

        goto label03;

     label43:
        $i3 = 0;

        goto label04;

     label44:
        $b0 = 0;

        goto label05;

     label45:
        $b0 = 0;

        goto label06;

     label46:
        $b0 = 0;

        goto label07;

     label47:
        $i3 = 0;

        goto label08;

     label48:
        $i3 = 0;

        goto label09;

     label49:
        $i3 = 0;

        goto label10;

     label50:
        $i3 = 0;

        goto label11;

     label51:
        $i3 = 0;

        goto label12;

     label52:
        $i3 = 0;

        goto label13;

     label53:
        $i3 = 0;

        goto label14;

     label54:
        $i3 = 0;

        goto label15;

     label55:
        $i3 = 0;

        goto label16;

     label56:
        $i3 = 0;

        goto label17;

     label57:
        $i3 = 0;

        goto label18;

     label58:
        $i3 = 0;

        goto label19;

     label59:
        $i3 = 0;

        goto label20;

     label60:
        $i3 = 0;

        goto label21;

     label61:
        $i3 = 0;

        goto label22;

     label62:
        $i3 = 0;

        goto label23;

     label63:
        $i3 = 0;

        goto label24;

     label64:
        $b0 = 0;

        goto label25;

     label65:
        $b0 = 0;

        goto label26;

     label66:
        $b0 = 0;

        goto label27;

     label67:
        $b0 = 0;

        goto label28;

     label68:
        $b0 = 0;

        goto label29;

     label69:
        $b0 = 0;

        goto label30;

     label70:
        $b0 = 0;

        goto label31;

     label71:
        $i3 = 0;

        goto label32;

     label72:
        $i3 = 0;

        goto label33;

     label73:
        $i3 = 0;

        goto label34;

     label74:
        $i3 = 0;

        goto label35;

     label75:
        $i3 = 0;

        goto label36;

     label76:
        $b0 = 0;

        goto label37;

     label77:
        $b1 = 0;

        goto label38;
    }

    public final boolean isDalvik()
    {
        twitter4j.conf.ConfigurationBase $r0;
        boolean z0;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        z0 = $r0.<twitter4j.conf.ConfigurationBase: boolean IS_DALVIK>;

        return z0;
    }

    public final boolean isDebugEnabled()
    {
        twitter4j.conf.ConfigurationBase $r0;
        boolean z0;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        z0 = $r0.<twitter4j.conf.ConfigurationBase: boolean debug>;

        return z0;
    }

    public boolean isGAE()
    {
        twitter4j.conf.ConfigurationBase $r0;
        boolean z0;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        z0 = $r0.<twitter4j.conf.ConfigurationBase: boolean IS_GAE>;

        return z0;
    }

    public boolean isGZIPEnabled()
    {
        twitter4j.conf.ConfigurationBase $r0;
        boolean z0;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        z0 = $r0.<twitter4j.conf.ConfigurationBase: boolean gzipEnabled>;

        return z0;
    }

    public boolean isIncludeEntitiesEnabled()
    {
        twitter4j.conf.ConfigurationBase $r0;
        boolean z0;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        z0 = $r0.<twitter4j.conf.ConfigurationBase: boolean includeEntitiesEnabled>;

        return z0;
    }

    public boolean isIncludeMyRetweetEnabled()
    {
        twitter4j.conf.ConfigurationBase $r0;
        boolean z0;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        z0 = $r0.<twitter4j.conf.ConfigurationBase: boolean includeMyRetweetEnabled>;

        return z0;
    }

    public boolean isIncludeRTsEnabled()
    {
        twitter4j.conf.ConfigurationBase $r0;
        boolean z0;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        z0 = $r0.<twitter4j.conf.ConfigurationBase: boolean includeRTsEnabled>;

        return z0;
    }

    public boolean isJSONStoreEnabled()
    {
        twitter4j.conf.ConfigurationBase $r0;
        boolean z0;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        z0 = $r0.<twitter4j.conf.ConfigurationBase: boolean jsonStoreEnabled>;

        return z0;
    }

    public boolean isMBeanEnabled()
    {
        twitter4j.conf.ConfigurationBase $r0;
        boolean z0;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        z0 = $r0.<twitter4j.conf.ConfigurationBase: boolean mbeanEnabled>;

        return z0;
    }

    public boolean isPrettyDebugEnabled()
    {
        twitter4j.conf.ConfigurationBase $r0;
        boolean z0;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        z0 = $r0.<twitter4j.conf.ConfigurationBase: boolean prettyDebug>;

        return z0;
    }

    public boolean isStallWarningsEnabled()
    {
        twitter4j.conf.ConfigurationBase $r0;
        boolean z0;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        z0 = $r0.<twitter4j.conf.ConfigurationBase: boolean stallWarningsEnabled>;

        return z0;
    }

    public boolean isUserStreamRepliesAllEnabled()
    {
        twitter4j.conf.ConfigurationBase $r0;
        boolean z0;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        z0 = $r0.<twitter4j.conf.ConfigurationBase: boolean userStreamRepliesAllEnabled>;

        return z0;
    }

    protected java.lang.Object readResolve() throws java.io.ObjectStreamException
    {
        twitter4j.conf.ConfigurationBase $r0;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        $r0 = staticinvoke <twitter4j.conf.ConfigurationBase: twitter4j.conf.ConfigurationBase getInstance(twitter4j.conf.ConfigurationBase)>($r0);

        return $r0;
    }

    protected final void setAsyncNumThreads(int)
    {
        twitter4j.conf.ConfigurationBase $r0;
        int $i0;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        $i0 := @parameter0: int;

        $r0.<twitter4j.conf.ConfigurationBase: int asyncNumThreads> = $i0;

        return;
    }

    protected final void setClientURL(java.lang.String)
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.lang.String $r1;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        $r1 := @parameter0: java.lang.String;

        $r0.<twitter4j.conf.ConfigurationBase: java.lang.String clientURL> = $r1;

        specialinvoke $r0.<twitter4j.conf.ConfigurationBase: void initRequestHeaders()>();

        return;
    }

    protected final void setClientVersion(java.lang.String)
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.lang.String $r1;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        $r1 := @parameter0: java.lang.String;

        $r0.<twitter4j.conf.ConfigurationBase: java.lang.String clientVersion> = $r1;

        specialinvoke $r0.<twitter4j.conf.ConfigurationBase: void initRequestHeaders()>();

        return;
    }

    protected final void setContributingTo(long)
    {
        twitter4j.conf.ConfigurationBase $r0;
        long $l0;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        $l0 := @parameter0: long;

        $r0.<twitter4j.conf.ConfigurationBase: long contributingTo> = $l0;

        return;
    }

    protected final void setDebug(boolean)
    {
        twitter4j.conf.ConfigurationBase $r0;
        boolean $z0;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        $z0 := @parameter0: boolean;

        $r0.<twitter4j.conf.ConfigurationBase: boolean debug> = $z0;

        return;
    }

    protected final void setDispatcherImpl(java.lang.String)
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.lang.String $r1;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        $r1 := @parameter0: java.lang.String;

        $r0.<twitter4j.conf.ConfigurationBase: java.lang.String dispatcherImpl> = $r1;

        return;
    }

    protected final void setGZIPEnabled(boolean)
    {
        twitter4j.conf.ConfigurationBase $r0;
        boolean $z0;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        $z0 := @parameter0: boolean;

        $r0.<twitter4j.conf.ConfigurationBase: boolean gzipEnabled> = $z0;

        specialinvoke $r0.<twitter4j.conf.ConfigurationBase: void initRequestHeaders()>();

        return;
    }

    protected final void setHttpConnectionTimeout(int)
    {
        twitter4j.conf.ConfigurationBase $r0;
        int $i0;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        $i0 := @parameter0: int;

        $r0.<twitter4j.conf.ConfigurationBase: int httpConnectionTimeout> = $i0;

        return;
    }

    protected final void setHttpDefaultMaxPerRoute(int)
    {
        twitter4j.conf.ConfigurationBase $r0;
        int $i0;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        $i0 := @parameter0: int;

        $r0.<twitter4j.conf.ConfigurationBase: int defaultMaxPerRoute> = $i0;

        return;
    }

    protected final void setHttpMaxTotalConnections(int)
    {
        twitter4j.conf.ConfigurationBase $r0;
        int $i0;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        $i0 := @parameter0: int;

        $r0.<twitter4j.conf.ConfigurationBase: int maxTotalConnections> = $i0;

        return;
    }

    protected final void setHttpProxyHost(java.lang.String)
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.lang.String $r1;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        $r1 := @parameter0: java.lang.String;

        $r0.<twitter4j.conf.ConfigurationBase: java.lang.String httpProxyHost> = $r1;

        return;
    }

    protected final void setHttpProxyPassword(java.lang.String)
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.lang.String $r1;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        $r1 := @parameter0: java.lang.String;

        $r0.<twitter4j.conf.ConfigurationBase: java.lang.String httpProxyPassword> = $r1;

        return;
    }

    protected final void setHttpProxyPort(int)
    {
        twitter4j.conf.ConfigurationBase $r0;
        int $i0;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        $i0 := @parameter0: int;

        $r0.<twitter4j.conf.ConfigurationBase: int httpProxyPort> = $i0;

        return;
    }

    protected final void setHttpProxyUser(java.lang.String)
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.lang.String $r1;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        $r1 := @parameter0: java.lang.String;

        $r0.<twitter4j.conf.ConfigurationBase: java.lang.String httpProxyUser> = $r1;

        return;
    }

    protected final void setHttpReadTimeout(int)
    {
        twitter4j.conf.ConfigurationBase $r0;
        int $i0;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        $i0 := @parameter0: int;

        $r0.<twitter4j.conf.ConfigurationBase: int httpReadTimeout> = $i0;

        return;
    }

    protected final void setHttpRetryCount(int)
    {
        twitter4j.conf.ConfigurationBase $r0;
        int $i0;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        $i0 := @parameter0: int;

        $r0.<twitter4j.conf.ConfigurationBase: int httpRetryCount> = $i0;

        return;
    }

    protected final void setHttpRetryIntervalSeconds(int)
    {
        twitter4j.conf.ConfigurationBase $r0;
        int $i0;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        $i0 := @parameter0: int;

        $r0.<twitter4j.conf.ConfigurationBase: int httpRetryIntervalSeconds> = $i0;

        return;
    }

    protected final void setHttpStreamingReadTimeout(int)
    {
        twitter4j.conf.ConfigurationBase $r0;
        int $i0;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        $i0 := @parameter0: int;

        $r0.<twitter4j.conf.ConfigurationBase: int httpStreamingReadTimeout> = $i0;

        return;
    }

    protected final void setIncludeEntitiesEnbled(boolean)
    {
        twitter4j.conf.ConfigurationBase $r0;
        boolean $z0;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        $z0 := @parameter0: boolean;

        $r0.<twitter4j.conf.ConfigurationBase: boolean includeEntitiesEnabled> = $z0;

        return;
    }

    public void setIncludeMyRetweetEnabled(boolean)
    {
        twitter4j.conf.ConfigurationBase $r0;
        boolean $z0;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        $z0 := @parameter0: boolean;

        $r0.<twitter4j.conf.ConfigurationBase: boolean includeMyRetweetEnabled> = $z0;

        return;
    }

    protected final void setIncludeRTsEnbled(boolean)
    {
        twitter4j.conf.ConfigurationBase $r0;
        boolean $z0;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        $z0 := @parameter0: boolean;

        $r0.<twitter4j.conf.ConfigurationBase: boolean includeRTsEnabled> = $z0;

        return;
    }

    protected final void setJSONStoreEnabled(boolean)
    {
        twitter4j.conf.ConfigurationBase $r0;
        boolean $z0;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        $z0 := @parameter0: boolean;

        $r0.<twitter4j.conf.ConfigurationBase: boolean jsonStoreEnabled> = $z0;

        return;
    }

    protected final void setLoggerFactory(java.lang.String)
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.lang.String $r1;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        $r1 := @parameter0: java.lang.String;

        $r0.<twitter4j.conf.ConfigurationBase: java.lang.String loggerFactory> = $r1;

        return;
    }

    protected final void setMBeanEnabled(boolean)
    {
        twitter4j.conf.ConfigurationBase $r0;
        boolean $z0;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        $z0 := @parameter0: boolean;

        $r0.<twitter4j.conf.ConfigurationBase: boolean mbeanEnabled> = $z0;

        return;
    }

    protected final void setMediaProvider(java.lang.String)
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.lang.String $r1;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        $r1 := @parameter0: java.lang.String;

        $r0.<twitter4j.conf.ConfigurationBase: java.lang.String mediaProvider> = $r1;

        return;
    }

    protected final void setMediaProviderAPIKey(java.lang.String)
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.lang.String $r1;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        $r1 := @parameter0: java.lang.String;

        $r0.<twitter4j.conf.ConfigurationBase: java.lang.String mediaProviderAPIKey> = $r1;

        return;
    }

    protected final void setMediaProviderParameters(java.util.Properties)
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.util.Properties $r1;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        $r1 := @parameter0: java.util.Properties;

        $r0.<twitter4j.conf.ConfigurationBase: java.util.Properties mediaProviderParameters> = $r1;

        return;
    }

    protected final void setOAuthAccessToken(java.lang.String)
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.lang.String $r1;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        $r1 := @parameter0: java.lang.String;

        $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAccessToken> = $r1;

        return;
    }

    protected final void setOAuthAccessTokenSecret(java.lang.String)
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.lang.String $r1;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        $r1 := @parameter0: java.lang.String;

        $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAccessTokenSecret> = $r1;

        return;
    }

    protected final void setOAuthAccessTokenURL(java.lang.String)
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.lang.String $r1;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        $r1 := @parameter0: java.lang.String;

        $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAccessTokenURL> = $r1;

        specialinvoke $r0.<twitter4j.conf.ConfigurationBase: void fixRestBaseURL()>();

        return;
    }

    protected final void setOAuthAuthenticationURL(java.lang.String)
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.lang.String $r1;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        $r1 := @parameter0: java.lang.String;

        $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAuthenticationURL> = $r1;

        specialinvoke $r0.<twitter4j.conf.ConfigurationBase: void fixRestBaseURL()>();

        return;
    }

    protected final void setOAuthAuthorizationURL(java.lang.String)
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.lang.String $r1;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        $r1 := @parameter0: java.lang.String;

        $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAuthorizationURL> = $r1;

        specialinvoke $r0.<twitter4j.conf.ConfigurationBase: void fixRestBaseURL()>();

        return;
    }

    protected final void setOAuthConsumerKey(java.lang.String)
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.lang.String $r1;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        $r1 := @parameter0: java.lang.String;

        $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthConsumerKey> = $r1;

        specialinvoke $r0.<twitter4j.conf.ConfigurationBase: void fixRestBaseURL()>();

        return;
    }

    protected final void setOAuthConsumerSecret(java.lang.String)
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.lang.String $r1;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        $r1 := @parameter0: java.lang.String;

        $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthConsumerSecret> = $r1;

        specialinvoke $r0.<twitter4j.conf.ConfigurationBase: void fixRestBaseURL()>();

        return;
    }

    protected final void setOAuthRequestTokenURL(java.lang.String)
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.lang.String $r1;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        $r1 := @parameter0: java.lang.String;

        $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthRequestTokenURL> = $r1;

        specialinvoke $r0.<twitter4j.conf.ConfigurationBase: void fixRestBaseURL()>();

        return;
    }

    protected final void setPassword(java.lang.String)
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.lang.String $r1;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        $r1 := @parameter0: java.lang.String;

        $r0.<twitter4j.conf.ConfigurationBase: java.lang.String password> = $r1;

        return;
    }

    protected final void setPrettyDebugEnabled(boolean)
    {
        twitter4j.conf.ConfigurationBase $r0;
        boolean $z0;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        $z0 := @parameter0: boolean;

        $r0.<twitter4j.conf.ConfigurationBase: boolean prettyDebug> = $z0;

        return;
    }

    protected final void setRestBaseURL(java.lang.String)
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.lang.String $r1;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        $r1 := @parameter0: java.lang.String;

        $r0.<twitter4j.conf.ConfigurationBase: java.lang.String restBaseURL> = $r1;

        specialinvoke $r0.<twitter4j.conf.ConfigurationBase: void fixRestBaseURL()>();

        return;
    }

    protected final void setSiteStreamBaseURL(java.lang.String)
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.lang.String $r1;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        $r1 := @parameter0: java.lang.String;

        $r0.<twitter4j.conf.ConfigurationBase: java.lang.String siteStreamBaseURL> = $r1;

        return;
    }

    protected final void setStallWarningsEnabled(boolean)
    {
        twitter4j.conf.ConfigurationBase $r0;
        boolean $z0;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        $z0 := @parameter0: boolean;

        $r0.<twitter4j.conf.ConfigurationBase: boolean stallWarningsEnabled> = $z0;

        return;
    }

    protected final void setStreamBaseURL(java.lang.String)
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.lang.String $r1;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        $r1 := @parameter0: java.lang.String;

        $r0.<twitter4j.conf.ConfigurationBase: java.lang.String streamBaseURL> = $r1;

        return;
    }

    protected final void setUseSSL(boolean)
    {
        twitter4j.conf.ConfigurationBase $r0;
        boolean $z0;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        $z0 := @parameter0: boolean;

        $r0.<twitter4j.conf.ConfigurationBase: boolean useSSL> = $z0;

        specialinvoke $r0.<twitter4j.conf.ConfigurationBase: void fixRestBaseURL()>();

        return;
    }

    protected final void setUser(java.lang.String)
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.lang.String $r1;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        $r1 := @parameter0: java.lang.String;

        $r0.<twitter4j.conf.ConfigurationBase: java.lang.String user> = $r1;

        return;
    }

    protected final void setUserAgent(java.lang.String)
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.lang.String $r1;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        $r1 := @parameter0: java.lang.String;

        $r0.<twitter4j.conf.ConfigurationBase: java.lang.String userAgent> = $r1;

        specialinvoke $r0.<twitter4j.conf.ConfigurationBase: void initRequestHeaders()>();

        return;
    }

    protected final void setUserStreamBaseURL(java.lang.String)
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.lang.String $r1;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        $r1 := @parameter0: java.lang.String;

        $r0.<twitter4j.conf.ConfigurationBase: java.lang.String userStreamBaseURL> = $r1;

        return;
    }

    protected final void setUserStreamRepliesAllEnabled(boolean)
    {
        twitter4j.conf.ConfigurationBase $r0;
        boolean $z0;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        $z0 := @parameter0: boolean;

        $r0.<twitter4j.conf.ConfigurationBase: boolean userStreamRepliesAllEnabled> = $z0;

        return;
    }

    public java.lang.String toString()
    {
        twitter4j.conf.ConfigurationBase $r0;
        java.lang.StringBuilder $r1;
        boolean $z0;
        java.lang.String $r2;
        int $i0;
        long $l1;
        java.util.Properties $r3;
        java.util.Map $r4;

        $r0 := @this: twitter4j.conf.ConfigurationBase;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ConfigurationBase{debug=");

        $z0 = $r0.<twitter4j.conf.ConfigurationBase: boolean debug>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", userAgent=\'");

        $r2 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String userAgent>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", user=\'");

        $r2 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String user>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", password=\'");

        $r2 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String password>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", useSSL=");

        $z0 = $r0.<twitter4j.conf.ConfigurationBase: boolean useSSL>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", prettyDebug=");

        $z0 = $r0.<twitter4j.conf.ConfigurationBase: boolean prettyDebug>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", gzipEnabled=");

        $z0 = $r0.<twitter4j.conf.ConfigurationBase: boolean gzipEnabled>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", httpProxyHost=\'");

        $r2 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String httpProxyHost>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", httpProxyUser=\'");

        $r2 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String httpProxyUser>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", httpProxyPassword=\'");

        $r2 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String httpProxyPassword>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", httpProxyPort=");

        $i0 = $r0.<twitter4j.conf.ConfigurationBase: int httpProxyPort>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", httpConnectionTimeout=");

        $i0 = $r0.<twitter4j.conf.ConfigurationBase: int httpConnectionTimeout>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", httpReadTimeout=");

        $i0 = $r0.<twitter4j.conf.ConfigurationBase: int httpReadTimeout>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", httpStreamingReadTimeout=");

        $i0 = $r0.<twitter4j.conf.ConfigurationBase: int httpStreamingReadTimeout>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", httpRetryCount=");

        $i0 = $r0.<twitter4j.conf.ConfigurationBase: int httpRetryCount>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", httpRetryIntervalSeconds=");

        $i0 = $r0.<twitter4j.conf.ConfigurationBase: int httpRetryIntervalSeconds>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", maxTotalConnections=");

        $i0 = $r0.<twitter4j.conf.ConfigurationBase: int maxTotalConnections>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", defaultMaxPerRoute=");

        $i0 = $r0.<twitter4j.conf.ConfigurationBase: int defaultMaxPerRoute>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", oAuthConsumerKey=\'");

        $r2 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthConsumerKey>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", oAuthConsumerSecret=\'");

        $r2 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthConsumerSecret>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", oAuthAccessToken=\'");

        $r2 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAccessToken>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", oAuthAccessTokenSecret=\'");

        $r2 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAccessTokenSecret>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", oAuthRequestTokenURL=\'");

        $r2 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthRequestTokenURL>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", oAuthAuthorizationURL=\'");

        $r2 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAuthorizationURL>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", oAuthAccessTokenURL=\'");

        $r2 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAccessTokenURL>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", oAuthAuthenticationURL=\'");

        $r2 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAuthenticationURL>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", restBaseURL=\'");

        $r2 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String restBaseURL>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", streamBaseURL=\'");

        $r2 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String streamBaseURL>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", userStreamBaseURL=\'");

        $r2 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String userStreamBaseURL>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", siteStreamBaseURL=\'");

        $r2 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String siteStreamBaseURL>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", dispatcherImpl=\'");

        $r2 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String dispatcherImpl>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", loggerFactory=\'");

        $r2 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String loggerFactory>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", asyncNumThreads=");

        $i0 = $r0.<twitter4j.conf.ConfigurationBase: int asyncNumThreads>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", contributingTo=");

        $l1 = $r0.<twitter4j.conf.ConfigurationBase: long contributingTo>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", includeRTsEnabled=");

        $z0 = $r0.<twitter4j.conf.ConfigurationBase: boolean includeRTsEnabled>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", includeEntitiesEnabled=");

        $z0 = $r0.<twitter4j.conf.ConfigurationBase: boolean includeEntitiesEnabled>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", includeMyRetweetEnabled=");

        $z0 = $r0.<twitter4j.conf.ConfigurationBase: boolean includeMyRetweetEnabled>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", jsonStoreEnabled=");

        $z0 = $r0.<twitter4j.conf.ConfigurationBase: boolean jsonStoreEnabled>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mbeanEnabled=");

        $z0 = $r0.<twitter4j.conf.ConfigurationBase: boolean mbeanEnabled>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", userStreamRepliesAllEnabled=");

        $z0 = $r0.<twitter4j.conf.ConfigurationBase: boolean userStreamRepliesAllEnabled>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", stallWarningsEnabled=");

        $z0 = $r0.<twitter4j.conf.ConfigurationBase: boolean stallWarningsEnabled>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mediaProvider=\'");

        $r2 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String mediaProvider>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mediaProviderAPIKey=\'");

        $r2 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String mediaProviderAPIKey>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mediaProviderParameters=");

        $r3 = $r0.<twitter4j.conf.ConfigurationBase: java.util.Properties mediaProviderParameters>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", clientVersion=\'");

        $r2 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String clientVersion>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", clientURL=\'");

        $r2 = $r0.<twitter4j.conf.ConfigurationBase: java.lang.String clientURL>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", IS_DALVIK=");

        $z0 = $r0.<twitter4j.conf.ConfigurationBase: boolean IS_DALVIK>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", IS_GAE=");

        $z0 = $r0.<twitter4j.conf.ConfigurationBase: boolean IS_GAE>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", requestHeaders=");

        $r4 = $r0.<twitter4j.conf.ConfigurationBase: java.util.Map requestHeaders>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
}
