public final class twitter4j.json.DataObjectFactory extends java.lang.Object
{
    private static final java.lang.reflect.Constructor IDsConstructor;
    private static final java.lang.reflect.Constructor accountTotalsConstructor;
    private static final java.lang.reflect.Constructor categoryConstructor;
    private static final java.lang.reflect.Constructor directMessageConstructor;
    private static final java.lang.reflect.Constructor locationConstructor;
    private static final java.lang.reflect.Constructor oembedConstructor;
    private static final java.lang.reflect.Constructor placeConstructor;
    private static final java.lang.reflect.Method rateLimitStatusConstructor;
    private static final java.lang.ThreadLocal rawJsonMap;
    private static final java.lang.reflect.Constructor relatedResultsConstructor;
    private static final java.lang.reflect.Constructor relationshipConstructor;
    private static final java.lang.reflect.Constructor savedSearchConstructor;
    private static final java.lang.reflect.Constructor statusConstructor;
    private static final java.lang.reflect.Constructor statusDeletionNoticeConstructor;
    private static final java.lang.reflect.Constructor trendConstructor;
    private static final java.lang.reflect.Constructor trendsConstructor;
    private static final java.lang.reflect.Constructor userConstructor;
    private static final java.lang.reflect.Constructor userListConstructor;

    static void <clinit>()
    {
        java.lang.NoSuchMethodException $r0;
        java.lang.Class $r1;
        java.lang.Class[] $r2;
        java.lang.reflect.Constructor $r3;
        java.lang.reflect.Method $r4;
        twitter4j.json.DataObjectFactory$1 $r5;
        java.lang.ExceptionInInitializerError $r6;
        java.lang.ClassNotFoundException $r7;

     label01:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("twitter4j.internal.json.StatusJSONImpl");

     label02:
        $r2 = newarray (java.lang.Class)[1];

     label03:
        $r2[0] = class "twitter4j/internal/org/json/JSONObject";

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r2);

     label04:
        <twitter4j.json.DataObjectFactory: java.lang.reflect.Constructor statusConstructor> = $r3;

     label05:
        $r3 = <twitter4j.json.DataObjectFactory: java.lang.reflect.Constructor statusConstructor>;

        virtualinvoke $r3.<java.lang.reflect.Constructor: void setAccessible(boolean)>(1);

        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("twitter4j.internal.json.UserJSONImpl");

     label06:
        $r2 = newarray (java.lang.Class)[1];

     label07:
        $r2[0] = class "twitter4j/internal/org/json/JSONObject";

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r2);

     label08:
        <twitter4j.json.DataObjectFactory: java.lang.reflect.Constructor userConstructor> = $r3;

     label09:
        $r3 = <twitter4j.json.DataObjectFactory: java.lang.reflect.Constructor userConstructor>;

        virtualinvoke $r3.<java.lang.reflect.Constructor: void setAccessible(boolean)>(1);

        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("twitter4j.internal.json.RelationshipJSONImpl");

     label10:
        $r2 = newarray (java.lang.Class)[1];

     label11:
        $r2[0] = class "twitter4j/internal/org/json/JSONObject";

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r2);

     label12:
        <twitter4j.json.DataObjectFactory: java.lang.reflect.Constructor relationshipConstructor> = $r3;

     label13:
        $r3 = <twitter4j.json.DataObjectFactory: java.lang.reflect.Constructor relationshipConstructor>;

        virtualinvoke $r3.<java.lang.reflect.Constructor: void setAccessible(boolean)>(1);

        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("twitter4j.internal.json.PlaceJSONImpl");

     label14:
        $r2 = newarray (java.lang.Class)[1];

     label15:
        $r2[0] = class "twitter4j/internal/org/json/JSONObject";

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r2);

     label16:
        <twitter4j.json.DataObjectFactory: java.lang.reflect.Constructor placeConstructor> = $r3;

     label17:
        $r3 = <twitter4j.json.DataObjectFactory: java.lang.reflect.Constructor placeConstructor>;

        virtualinvoke $r3.<java.lang.reflect.Constructor: void setAccessible(boolean)>(1);

        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("twitter4j.internal.json.SavedSearchJSONImpl");

     label18:
        $r2 = newarray (java.lang.Class)[1];

     label19:
        $r2[0] = class "twitter4j/internal/org/json/JSONObject";

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r2);

     label20:
        <twitter4j.json.DataObjectFactory: java.lang.reflect.Constructor savedSearchConstructor> = $r3;

     label21:
        $r3 = <twitter4j.json.DataObjectFactory: java.lang.reflect.Constructor savedSearchConstructor>;

        virtualinvoke $r3.<java.lang.reflect.Constructor: void setAccessible(boolean)>(1);

        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("twitter4j.internal.json.TrendJSONImpl");

     label22:
        $r2 = newarray (java.lang.Class)[1];

     label23:
        $r2[0] = class "twitter4j/internal/org/json/JSONObject";

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r2);

     label24:
        <twitter4j.json.DataObjectFactory: java.lang.reflect.Constructor trendConstructor> = $r3;

     label25:
        $r3 = <twitter4j.json.DataObjectFactory: java.lang.reflect.Constructor trendConstructor>;

        virtualinvoke $r3.<java.lang.reflect.Constructor: void setAccessible(boolean)>(1);

        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("twitter4j.internal.json.TrendsJSONImpl");

     label26:
        $r2 = newarray (java.lang.Class)[1];

     label27:
        $r2[0] = class "java/lang/String";

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r2);

     label28:
        <twitter4j.json.DataObjectFactory: java.lang.reflect.Constructor trendsConstructor> = $r3;

     label29:
        $r3 = <twitter4j.json.DataObjectFactory: java.lang.reflect.Constructor trendsConstructor>;

        virtualinvoke $r3.<java.lang.reflect.Constructor: void setAccessible(boolean)>(1);

        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("twitter4j.internal.json.IDsJSONImpl");

     label30:
        $r2 = newarray (java.lang.Class)[1];

     label31:
        $r2[0] = class "java/lang/String";

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r2);

     label32:
        <twitter4j.json.DataObjectFactory: java.lang.reflect.Constructor IDsConstructor> = $r3;

     label33:
        $r3 = <twitter4j.json.DataObjectFactory: java.lang.reflect.Constructor IDsConstructor>;

        virtualinvoke $r3.<java.lang.reflect.Constructor: void setAccessible(boolean)>(1);

        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("twitter4j.internal.json.RateLimitStatusJSONImpl");

     label34:
        $r2 = newarray (java.lang.Class)[1];

     label35:
        $r2[0] = class "twitter4j/internal/org/json/JSONObject";

        $r4 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("createRateLimitStatuses", $r2);

     label36:
        <twitter4j.json.DataObjectFactory: java.lang.reflect.Method rateLimitStatusConstructor> = $r4;

     label37:
        $r4 = <twitter4j.json.DataObjectFactory: java.lang.reflect.Method rateLimitStatusConstructor>;

        virtualinvoke $r4.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("twitter4j.internal.json.CategoryJSONImpl");

     label38:
        $r2 = newarray (java.lang.Class)[1];

     label39:
        $r2[0] = class "twitter4j/internal/org/json/JSONObject";

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r2);

     label40:
        <twitter4j.json.DataObjectFactory: java.lang.reflect.Constructor categoryConstructor> = $r3;

     label41:
        $r3 = <twitter4j.json.DataObjectFactory: java.lang.reflect.Constructor categoryConstructor>;

        virtualinvoke $r3.<java.lang.reflect.Constructor: void setAccessible(boolean)>(1);

        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("twitter4j.internal.json.DirectMessageJSONImpl");

     label42:
        $r2 = newarray (java.lang.Class)[1];

     label43:
        $r2[0] = class "twitter4j/internal/org/json/JSONObject";

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r2);

     label44:
        <twitter4j.json.DataObjectFactory: java.lang.reflect.Constructor directMessageConstructor> = $r3;

     label45:
        $r3 = <twitter4j.json.DataObjectFactory: java.lang.reflect.Constructor directMessageConstructor>;

        virtualinvoke $r3.<java.lang.reflect.Constructor: void setAccessible(boolean)>(1);

        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("twitter4j.internal.json.LocationJSONImpl");

     label46:
        $r2 = newarray (java.lang.Class)[1];

     label47:
        $r2[0] = class "twitter4j/internal/org/json/JSONObject";

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r2);

     label48:
        <twitter4j.json.DataObjectFactory: java.lang.reflect.Constructor locationConstructor> = $r3;

     label49:
        $r3 = <twitter4j.json.DataObjectFactory: java.lang.reflect.Constructor locationConstructor>;

        virtualinvoke $r3.<java.lang.reflect.Constructor: void setAccessible(boolean)>(1);

        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("twitter4j.internal.json.UserListJSONImpl");

     label50:
        $r2 = newarray (java.lang.Class)[1];

     label51:
        $r2[0] = class "twitter4j/internal/org/json/JSONObject";

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r2);

     label52:
        <twitter4j.json.DataObjectFactory: java.lang.reflect.Constructor userListConstructor> = $r3;

     label53:
        $r3 = <twitter4j.json.DataObjectFactory: java.lang.reflect.Constructor userListConstructor>;

        virtualinvoke $r3.<java.lang.reflect.Constructor: void setAccessible(boolean)>(1);

        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("twitter4j.internal.json.RelatedResultsJSONImpl");

     label54:
        $r2 = newarray (java.lang.Class)[1];

     label55:
        $r2[0] = class "twitter4j/internal/org/json/JSONArray";

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r2);

     label56:
        <twitter4j.json.DataObjectFactory: java.lang.reflect.Constructor relatedResultsConstructor> = $r3;

     label57:
        $r3 = <twitter4j.json.DataObjectFactory: java.lang.reflect.Constructor relatedResultsConstructor>;

        virtualinvoke $r3.<java.lang.reflect.Constructor: void setAccessible(boolean)>(1);

        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("twitter4j.StatusDeletionNoticeImpl");

     label58:
        $r2 = newarray (java.lang.Class)[1];

     label59:
        $r2[0] = class "twitter4j/internal/org/json/JSONObject";

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r2);

     label60:
        <twitter4j.json.DataObjectFactory: java.lang.reflect.Constructor statusDeletionNoticeConstructor> = $r3;

     label61:
        $r3 = <twitter4j.json.DataObjectFactory: java.lang.reflect.Constructor statusDeletionNoticeConstructor>;

        virtualinvoke $r3.<java.lang.reflect.Constructor: void setAccessible(boolean)>(1);

        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("twitter4j.internal.json.AccountTotalsJSONImpl");

     label62:
        $r2 = newarray (java.lang.Class)[1];

     label63:
        $r2[0] = class "twitter4j/internal/org/json/JSONObject";

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r2);

     label64:
        <twitter4j.json.DataObjectFactory: java.lang.reflect.Constructor accountTotalsConstructor> = $r3;

     label65:
        $r3 = <twitter4j.json.DataObjectFactory: java.lang.reflect.Constructor accountTotalsConstructor>;

        virtualinvoke $r3.<java.lang.reflect.Constructor: void setAccessible(boolean)>(1);

        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("twitter4j.internal.json.OEmbedJSONImpl");

     label66:
        $r2 = newarray (java.lang.Class)[1];

     label67:
        $r2[0] = class "twitter4j/internal/org/json/JSONObject";

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r2);

     label68:
        <twitter4j.json.DataObjectFactory: java.lang.reflect.Constructor oembedConstructor> = $r3;

     label69:
        $r3 = <twitter4j.json.DataObjectFactory: java.lang.reflect.Constructor oembedConstructor>;

        virtualinvoke $r3.<java.lang.reflect.Constructor: void setAccessible(boolean)>(1);

     label70:
        $r5 = new twitter4j.json.DataObjectFactory$1;

        specialinvoke $r5.<twitter4j.json.DataObjectFactory$1: void <init>()>();

        <twitter4j.json.DataObjectFactory: java.lang.ThreadLocal rawJsonMap> = $r5;

        return;

     label71:
        $r0 := @caughtexception;

        $r6 = new java.lang.ExceptionInInitializerError;

        specialinvoke $r6.<java.lang.ExceptionInInitializerError: void <init>(java.lang.Throwable)>($r0);

        throw $r6;

     label72:
        $r7 := @caughtexception;

        $r6 = new java.lang.ExceptionInInitializerError;

        specialinvoke $r6.<java.lang.ExceptionInInitializerError: void <init>(java.lang.Throwable)>($r7);

        throw $r6;

        catch java.lang.NoSuchMethodException from label01 to label02 with label71;
        catch java.lang.NoSuchMethodException from label03 to label04 with label71;
        catch java.lang.NoSuchMethodException from label05 to label06 with label71;
        catch java.lang.NoSuchMethodException from label07 to label08 with label71;
        catch java.lang.NoSuchMethodException from label09 to label10 with label71;
        catch java.lang.NoSuchMethodException from label11 to label12 with label71;
        catch java.lang.NoSuchMethodException from label13 to label14 with label71;
        catch java.lang.NoSuchMethodException from label15 to label16 with label71;
        catch java.lang.NoSuchMethodException from label17 to label18 with label71;
        catch java.lang.NoSuchMethodException from label19 to label20 with label71;
        catch java.lang.NoSuchMethodException from label21 to label22 with label71;
        catch java.lang.NoSuchMethodException from label23 to label24 with label71;
        catch java.lang.NoSuchMethodException from label25 to label26 with label71;
        catch java.lang.NoSuchMethodException from label27 to label28 with label71;
        catch java.lang.NoSuchMethodException from label29 to label30 with label71;
        catch java.lang.NoSuchMethodException from label31 to label32 with label71;
        catch java.lang.NoSuchMethodException from label33 to label34 with label71;
        catch java.lang.NoSuchMethodException from label35 to label36 with label71;
        catch java.lang.NoSuchMethodException from label37 to label38 with label71;
        catch java.lang.NoSuchMethodException from label39 to label40 with label71;
        catch java.lang.NoSuchMethodException from label41 to label42 with label71;
        catch java.lang.NoSuchMethodException from label43 to label44 with label71;
        catch java.lang.NoSuchMethodException from label45 to label46 with label71;
        catch java.lang.NoSuchMethodException from label47 to label48 with label71;
        catch java.lang.NoSuchMethodException from label49 to label50 with label71;
        catch java.lang.NoSuchMethodException from label51 to label52 with label71;
        catch java.lang.NoSuchMethodException from label53 to label54 with label71;
        catch java.lang.NoSuchMethodException from label55 to label56 with label71;
        catch java.lang.NoSuchMethodException from label57 to label58 with label71;
        catch java.lang.NoSuchMethodException from label59 to label60 with label71;
        catch java.lang.NoSuchMethodException from label61 to label62 with label71;
        catch java.lang.NoSuchMethodException from label63 to label64 with label71;
        catch java.lang.NoSuchMethodException from label65 to label66 with label71;
        catch java.lang.NoSuchMethodException from label67 to label68 with label71;
        catch java.lang.NoSuchMethodException from label69 to label70 with label71;
        catch java.lang.ClassNotFoundException from label01 to label02 with label72;
        catch java.lang.ClassNotFoundException from label03 to label04 with label72;
        catch java.lang.ClassNotFoundException from label05 to label06 with label72;
        catch java.lang.ClassNotFoundException from label07 to label08 with label72;
        catch java.lang.ClassNotFoundException from label09 to label10 with label72;
        catch java.lang.ClassNotFoundException from label11 to label12 with label72;
        catch java.lang.ClassNotFoundException from label13 to label14 with label72;
        catch java.lang.ClassNotFoundException from label15 to label16 with label72;
        catch java.lang.ClassNotFoundException from label17 to label18 with label72;
        catch java.lang.ClassNotFoundException from label19 to label20 with label72;
        catch java.lang.ClassNotFoundException from label21 to label22 with label72;
        catch java.lang.ClassNotFoundException from label23 to label24 with label72;
        catch java.lang.ClassNotFoundException from label25 to label26 with label72;
        catch java.lang.ClassNotFoundException from label27 to label28 with label72;
        catch java.lang.ClassNotFoundException from label29 to label30 with label72;
        catch java.lang.ClassNotFoundException from label31 to label32 with label72;
        catch java.lang.ClassNotFoundException from label33 to label34 with label72;
        catch java.lang.ClassNotFoundException from label35 to label36 with label72;
        catch java.lang.ClassNotFoundException from label37 to label38 with label72;
        catch java.lang.ClassNotFoundException from label39 to label40 with label72;
        catch java.lang.ClassNotFoundException from label41 to label42 with label72;
        catch java.lang.ClassNotFoundException from label43 to label44 with label72;
        catch java.lang.ClassNotFoundException from label45 to label46 with label72;
        catch java.lang.ClassNotFoundException from label47 to label48 with label72;
        catch java.lang.ClassNotFoundException from label49 to label50 with label72;
        catch java.lang.ClassNotFoundException from label51 to label52 with label72;
        catch java.lang.ClassNotFoundException from label53 to label54 with label72;
        catch java.lang.ClassNotFoundException from label55 to label56 with label72;
        catch java.lang.ClassNotFoundException from label57 to label58 with label72;
        catch java.lang.ClassNotFoundException from label59 to label60 with label72;
        catch java.lang.ClassNotFoundException from label61 to label62 with label72;
        catch java.lang.ClassNotFoundException from label63 to label64 with label72;
        catch java.lang.ClassNotFoundException from label65 to label66 with label72;
        catch java.lang.ClassNotFoundException from label67 to label68 with label72;
        catch java.lang.ClassNotFoundException from label69 to label70 with label72;
    }

    private void <init>()
    {
        twitter4j.json.DataObjectFactory $r0;
        java.lang.AssertionError $r1;

        $r0 := @this: twitter4j.json.DataObjectFactory;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>(java.lang.Object)>("not intended to be instantiated.");

        throw $r1;
    }

    static void clearThreadLocalMap()
    {
        java.lang.ThreadLocal $r0;
        java.lang.Object $r1;
        java.util.Map $r2;

        $r0 = <twitter4j.json.DataObjectFactory: java.lang.ThreadLocal rawJsonMap>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r2 = (java.util.Map) $r1;

        interfaceinvoke $r2.<java.util.Map: void clear()>();

        return;
    }

    public static twitter4j.AccountTotals createAccountTotals(java.lang.String) throws twitter4j.TwitterException
    {
        java.lang.String $r0;
        java.lang.InstantiationException $r1;
        twitter4j.internal.org.json.JSONObject $r2;
        java.lang.reflect.Constructor $r3;
        java.lang.Object $r4;
        java.lang.Object[] $r5;
        twitter4j.AccountTotals $r6;
        twitter4j.TwitterException $r7;
        java.lang.IllegalAccessException $r8;
        java.lang.AssertionError $r9;
        java.lang.reflect.InvocationTargetException $r10;
        twitter4j.internal.org.json.JSONException $r11;

        $r0 := @parameter0: java.lang.String;

        $r2 = new twitter4j.internal.org.json.JSONObject;

     label1:
        specialinvoke $r2.<twitter4j.internal.org.json.JSONObject: void <init>(java.lang.String)>($r0);

     label2:
        $r3 = <twitter4j.json.DataObjectFactory: java.lang.reflect.Constructor accountTotalsConstructor>;

        $r5 = newarray (java.lang.Object)[1];

     label3:
        $r5[0] = $r2;

        $r4 = virtualinvoke $r3.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r5);

     label4:
        $r6 = (twitter4j.AccountTotals) $r4;

        return $r6;

     label5:
        $r1 := @caughtexception;

        $r7 = new twitter4j.TwitterException;

        specialinvoke $r7.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r1);

        throw $r7;

     label6:
        $r8 := @caughtexception;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>(java.lang.Object)>($r8);

        throw $r9;

     label7:
        $r10 := @caughtexception;

        $r7 = new twitter4j.TwitterException;

        specialinvoke $r7.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r10);

        throw $r7;

     label8:
        $r11 := @caughtexception;

        $r7 = new twitter4j.TwitterException;

        specialinvoke $r7.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r11);

        throw $r7;

        catch java.lang.InstantiationException from label1 to label2 with label5;
        catch java.lang.InstantiationException from label3 to label4 with label5;
        catch java.lang.IllegalAccessException from label1 to label2 with label6;
        catch java.lang.IllegalAccessException from label3 to label4 with label6;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label7;
        catch java.lang.reflect.InvocationTargetException from label3 to label4 with label7;
        catch twitter4j.internal.org.json.JSONException from label1 to label2 with label8;
        catch twitter4j.internal.org.json.JSONException from label3 to label4 with label8;
    }

    public static twitter4j.Category createCategory(java.lang.String) throws twitter4j.TwitterException
    {
        java.lang.String $r0;
        java.lang.InstantiationException $r1;
        twitter4j.internal.org.json.JSONObject $r2;
        java.lang.reflect.Constructor $r3;
        java.lang.Object $r4;
        java.lang.Object[] $r5;
        twitter4j.Category $r6;
        twitter4j.TwitterException $r7;
        java.lang.IllegalAccessException $r8;
        java.lang.AssertionError $r9;
        java.lang.reflect.InvocationTargetException $r10;
        twitter4j.internal.org.json.JSONException $r11;

        $r0 := @parameter0: java.lang.String;

        $r2 = new twitter4j.internal.org.json.JSONObject;

     label1:
        specialinvoke $r2.<twitter4j.internal.org.json.JSONObject: void <init>(java.lang.String)>($r0);

     label2:
        $r3 = <twitter4j.json.DataObjectFactory: java.lang.reflect.Constructor categoryConstructor>;

        $r5 = newarray (java.lang.Object)[1];

     label3:
        $r5[0] = $r2;

        $r4 = virtualinvoke $r3.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r5);

     label4:
        $r6 = (twitter4j.Category) $r4;

        return $r6;

     label5:
        $r1 := @caughtexception;

        $r7 = new twitter4j.TwitterException;

        specialinvoke $r7.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r1);

        throw $r7;

     label6:
        $r8 := @caughtexception;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>(java.lang.Object)>($r8);

        throw $r9;

     label7:
        $r10 := @caughtexception;

        $r7 = new twitter4j.TwitterException;

        specialinvoke $r7.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r10);

        throw $r7;

     label8:
        $r11 := @caughtexception;

        $r7 = new twitter4j.TwitterException;

        specialinvoke $r7.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r11);

        throw $r7;

        catch java.lang.InstantiationException from label1 to label2 with label5;
        catch java.lang.InstantiationException from label3 to label4 with label5;
        catch java.lang.IllegalAccessException from label1 to label2 with label6;
        catch java.lang.IllegalAccessException from label3 to label4 with label6;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label7;
        catch java.lang.reflect.InvocationTargetException from label3 to label4 with label7;
        catch twitter4j.internal.org.json.JSONException from label1 to label2 with label8;
        catch twitter4j.internal.org.json.JSONException from label3 to label4 with label8;
    }

    public static twitter4j.DirectMessage createDirectMessage(java.lang.String) throws twitter4j.TwitterException
    {
        java.lang.String $r0;
        java.lang.InstantiationException $r1;
        twitter4j.internal.org.json.JSONObject $r2;
        java.lang.reflect.Constructor $r3;
        java.lang.Object $r4;
        java.lang.Object[] $r5;
        twitter4j.DirectMessage $r6;
        twitter4j.TwitterException $r7;
        java.lang.IllegalAccessException $r8;
        java.lang.AssertionError $r9;
        java.lang.reflect.InvocationTargetException $r10;
        twitter4j.internal.org.json.JSONException $r11;

        $r0 := @parameter0: java.lang.String;

        $r2 = new twitter4j.internal.org.json.JSONObject;

     label1:
        specialinvoke $r2.<twitter4j.internal.org.json.JSONObject: void <init>(java.lang.String)>($r0);

     label2:
        $r3 = <twitter4j.json.DataObjectFactory: java.lang.reflect.Constructor directMessageConstructor>;

        $r5 = newarray (java.lang.Object)[1];

     label3:
        $r5[0] = $r2;

        $r4 = virtualinvoke $r3.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r5);

     label4:
        $r6 = (twitter4j.DirectMessage) $r4;

        return $r6;

     label5:
        $r1 := @caughtexception;

        $r7 = new twitter4j.TwitterException;

        specialinvoke $r7.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r1);

        throw $r7;

     label6:
        $r8 := @caughtexception;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>(java.lang.Object)>($r8);

        throw $r9;

     label7:
        $r10 := @caughtexception;

        $r7 = new twitter4j.TwitterException;

        specialinvoke $r7.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r10);

        throw $r7;

     label8:
        $r11 := @caughtexception;

        $r7 = new twitter4j.TwitterException;

        specialinvoke $r7.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r11);

        throw $r7;

        catch java.lang.InstantiationException from label1 to label2 with label5;
        catch java.lang.InstantiationException from label3 to label4 with label5;
        catch java.lang.IllegalAccessException from label1 to label2 with label6;
        catch java.lang.IllegalAccessException from label3 to label4 with label6;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label7;
        catch java.lang.reflect.InvocationTargetException from label3 to label4 with label7;
        catch twitter4j.internal.org.json.JSONException from label1 to label2 with label8;
        catch twitter4j.internal.org.json.JSONException from label3 to label4 with label8;
    }

    public static twitter4j.IDs createIDs(java.lang.String) throws twitter4j.TwitterException
    {
        java.lang.String $r0;
        java.lang.InstantiationException $r1;
        java.lang.reflect.Constructor $r2;
        java.lang.Object $r3;
        java.lang.Object[] $r4;
        twitter4j.IDs $r5;
        twitter4j.TwitterException $r6;
        java.lang.IllegalAccessException $r7;
        java.lang.AssertionError $r8;
        java.lang.reflect.InvocationTargetException $r9;

        $r0 := @parameter0: java.lang.String;

        $r2 = <twitter4j.json.DataObjectFactory: java.lang.reflect.Constructor IDsConstructor>;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = $r0;

     label1:
        $r3 = virtualinvoke $r2.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r4);

     label2:
        $r5 = (twitter4j.IDs) $r3;

        return $r5;

     label3:
        $r1 := @caughtexception;

        $r6 = new twitter4j.TwitterException;

        specialinvoke $r6.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r1);

        throw $r6;

     label4:
        $r7 := @caughtexception;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>(java.lang.Object)>($r7);

        throw $r8;

     label5:
        $r9 := @caughtexception;

        $r6 = new twitter4j.TwitterException;

        specialinvoke $r6.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r9);

        throw $r6;

        catch java.lang.InstantiationException from label1 to label2 with label3;
        catch java.lang.IllegalAccessException from label1 to label2 with label4;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label5;
    }

    public static twitter4j.Location createLocation(java.lang.String) throws twitter4j.TwitterException
    {
        java.lang.String $r0;
        java.lang.InstantiationException $r1;
        twitter4j.internal.org.json.JSONObject $r2;
        java.lang.reflect.Constructor $r3;
        java.lang.Object $r4;
        java.lang.Object[] $r5;
        twitter4j.Location $r6;
        twitter4j.TwitterException $r7;
        java.lang.IllegalAccessException $r8;
        java.lang.AssertionError $r9;
        java.lang.reflect.InvocationTargetException $r10;
        twitter4j.internal.org.json.JSONException $r11;

        $r0 := @parameter0: java.lang.String;

        $r2 = new twitter4j.internal.org.json.JSONObject;

     label1:
        specialinvoke $r2.<twitter4j.internal.org.json.JSONObject: void <init>(java.lang.String)>($r0);

     label2:
        $r3 = <twitter4j.json.DataObjectFactory: java.lang.reflect.Constructor locationConstructor>;

        $r5 = newarray (java.lang.Object)[1];

     label3:
        $r5[0] = $r2;

        $r4 = virtualinvoke $r3.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r5);

     label4:
        $r6 = (twitter4j.Location) $r4;

        return $r6;

     label5:
        $r1 := @caughtexception;

        $r7 = new twitter4j.TwitterException;

        specialinvoke $r7.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r1);

        throw $r7;

     label6:
        $r8 := @caughtexception;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>(java.lang.Object)>($r8);

        throw $r9;

     label7:
        $r10 := @caughtexception;

        $r7 = new twitter4j.TwitterException;

        specialinvoke $r7.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r10);

        throw $r7;

     label8:
        $r11 := @caughtexception;

        $r7 = new twitter4j.TwitterException;

        specialinvoke $r7.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r11);

        throw $r7;

        catch java.lang.InstantiationException from label1 to label2 with label5;
        catch java.lang.InstantiationException from label3 to label4 with label5;
        catch java.lang.IllegalAccessException from label1 to label2 with label6;
        catch java.lang.IllegalAccessException from label3 to label4 with label6;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label7;
        catch java.lang.reflect.InvocationTargetException from label3 to label4 with label7;
        catch twitter4j.internal.org.json.JSONException from label1 to label2 with label8;
        catch twitter4j.internal.org.json.JSONException from label3 to label4 with label8;
    }

    public static twitter4j.OEmbed createOEmbed(java.lang.String) throws twitter4j.TwitterException
    {
        java.lang.String $r0;
        java.lang.InstantiationException $r1;
        twitter4j.internal.org.json.JSONObject $r2;
        java.lang.reflect.Constructor $r3;
        java.lang.Object $r4;
        java.lang.Object[] $r5;
        twitter4j.OEmbed $r6;
        twitter4j.TwitterException $r7;
        java.lang.IllegalAccessException $r8;
        java.lang.AssertionError $r9;
        java.lang.reflect.InvocationTargetException $r10;
        twitter4j.internal.org.json.JSONException $r11;

        $r0 := @parameter0: java.lang.String;

        $r2 = new twitter4j.internal.org.json.JSONObject;

     label1:
        specialinvoke $r2.<twitter4j.internal.org.json.JSONObject: void <init>(java.lang.String)>($r0);

     label2:
        $r3 = <twitter4j.json.DataObjectFactory: java.lang.reflect.Constructor oembedConstructor>;

        $r5 = newarray (java.lang.Object)[1];

     label3:
        $r5[0] = $r2;

        $r4 = virtualinvoke $r3.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r5);

     label4:
        $r6 = (twitter4j.OEmbed) $r4;

        return $r6;

     label5:
        $r1 := @caughtexception;

        $r7 = new twitter4j.TwitterException;

        specialinvoke $r7.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r1);

        throw $r7;

     label6:
        $r8 := @caughtexception;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>(java.lang.Object)>($r8);

        throw $r9;

     label7:
        $r10 := @caughtexception;

        $r7 = new twitter4j.TwitterException;

        specialinvoke $r7.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r10);

        throw $r7;

     label8:
        $r11 := @caughtexception;

        $r7 = new twitter4j.TwitterException;

        specialinvoke $r7.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r11);

        throw $r7;

        catch java.lang.InstantiationException from label1 to label2 with label5;
        catch java.lang.InstantiationException from label3 to label4 with label5;
        catch java.lang.IllegalAccessException from label1 to label2 with label6;
        catch java.lang.IllegalAccessException from label3 to label4 with label6;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label7;
        catch java.lang.reflect.InvocationTargetException from label3 to label4 with label7;
        catch twitter4j.internal.org.json.JSONException from label1 to label2 with label8;
        catch twitter4j.internal.org.json.JSONException from label3 to label4 with label8;
    }

    public static java.lang.Object createObject(java.lang.String) throws twitter4j.TwitterException
    {
        java.lang.String $r0;
        java.lang.InstantiationException $r1;
        twitter4j.internal.org.json.JSONObject $r2, $r7;
        int[] $r3;
        twitter4j.json.JSONObjectType$Type $r4;
        int $i0;
        java.lang.reflect.Constructor $r5;
        java.lang.Object[] $r6;
        java.lang.Object $r8;
        twitter4j.TwitterException $r9;
        java.lang.IllegalAccessException $r10;
        java.lang.AssertionError $r11;
        java.lang.reflect.InvocationTargetException $r12;
        twitter4j.internal.org.json.JSONException $r13;

        $r0 := @parameter0: java.lang.String;

        $r2 = new twitter4j.internal.org.json.JSONObject;

     label01:
        specialinvoke $r2.<twitter4j.internal.org.json.JSONObject: void <init>(java.lang.String)>($r0);

        $r4 = staticinvoke <twitter4j.json.JSONObjectType: twitter4j.json.JSONObjectType$Type determine(twitter4j.internal.org.json.JSONObject)>($r2);

        $r3 = <twitter4j.json.DataObjectFactory$2: int[] $SwitchMap$twitter4j$json$JSONObjectType$Type>;

        $i0 = virtualinvoke $r4.<twitter4j.json.JSONObjectType$Type: int ordinal()>();

     label02:
        $i0 = $r3[$i0];

        lookupswitch($i0)
        {
            case 1: goto label04;
            case 2: goto label07;
            case 3: goto label10;
            case 4: goto label13;
            case 5: goto label03;
            case 6: goto label03;
            default: goto label03;
        };

     label03:
        return $r2;

     label04:
        $r5 = <twitter4j.json.DataObjectFactory: java.lang.reflect.Constructor directMessageConstructor>;

     label05:
        $r6 = newarray (java.lang.Object)[1];

        $r7 = virtualinvoke $r2.<twitter4j.internal.org.json.JSONObject: twitter4j.internal.org.json.JSONObject getJSONObject(java.lang.String)>("direct_message");

        $r6[0] = $r7;

        $r8 = virtualinvoke $r5.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r6);

        $r8 = staticinvoke <twitter4j.json.DataObjectFactory: java.lang.Object registerJSONObject(java.lang.Object,java.lang.Object)>($r8, $r2);

     label06:
        return $r8;

     label07:
        $r5 = <twitter4j.json.DataObjectFactory: java.lang.reflect.Constructor statusConstructor>;

        $r6 = newarray (java.lang.Object)[1];

     label08:
        $r6[0] = $r2;

        $r8 = virtualinvoke $r5.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r6);

        $r8 = staticinvoke <twitter4j.json.DataObjectFactory: java.lang.Object registerJSONObject(java.lang.Object,java.lang.Object)>($r8, $r2);

     label09:
        return $r8;

     label10:
        $r5 = <twitter4j.json.DataObjectFactory: java.lang.reflect.Constructor directMessageConstructor>;

     label11:
        $r6 = newarray (java.lang.Object)[1];

        $r7 = virtualinvoke $r2.<twitter4j.internal.org.json.JSONObject: twitter4j.internal.org.json.JSONObject getJSONObject(java.lang.String)>("direct_message");

        $r6[0] = $r7;

        $r8 = virtualinvoke $r5.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r6);

        $r8 = staticinvoke <twitter4j.json.DataObjectFactory: java.lang.Object registerJSONObject(java.lang.Object,java.lang.Object)>($r8, $r2);

     label12:
        return $r8;

     label13:
        $r5 = <twitter4j.json.DataObjectFactory: java.lang.reflect.Constructor statusDeletionNoticeConstructor>;

     label14:
        $r6 = newarray (java.lang.Object)[1];

        $r7 = virtualinvoke $r2.<twitter4j.internal.org.json.JSONObject: twitter4j.internal.org.json.JSONObject getJSONObject(java.lang.String)>("delete");

        $r7 = virtualinvoke $r7.<twitter4j.internal.org.json.JSONObject: twitter4j.internal.org.json.JSONObject getJSONObject(java.lang.String)>("status");

        $r6[0] = $r7;

        $r8 = virtualinvoke $r5.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r6);

        $r8 = staticinvoke <twitter4j.json.DataObjectFactory: java.lang.Object registerJSONObject(java.lang.Object,java.lang.Object)>($r8, $r2);

     label15:
        return $r8;

     label16:
        $r1 := @caughtexception;

        $r9 = new twitter4j.TwitterException;

        specialinvoke $r9.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r1);

        throw $r9;

     label17:
        $r10 := @caughtexception;

        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>(java.lang.Object)>($r10);

        throw $r11;

     label18:
        $r12 := @caughtexception;

        $r9 = new twitter4j.TwitterException;

        specialinvoke $r9.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r12);

        throw $r9;

     label19:
        $r13 := @caughtexception;

        $r9 = new twitter4j.TwitterException;

        specialinvoke $r9.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r13);

        throw $r9;

        catch java.lang.InstantiationException from label01 to label02 with label16;
        catch java.lang.InstantiationException from label05 to label06 with label16;
        catch java.lang.InstantiationException from label08 to label09 with label16;
        catch java.lang.InstantiationException from label11 to label12 with label16;
        catch java.lang.InstantiationException from label14 to label15 with label16;
        catch java.lang.IllegalAccessException from label01 to label02 with label17;
        catch java.lang.IllegalAccessException from label05 to label06 with label17;
        catch java.lang.IllegalAccessException from label08 to label09 with label17;
        catch java.lang.IllegalAccessException from label11 to label12 with label17;
        catch java.lang.IllegalAccessException from label14 to label15 with label17;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label18;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label18;
        catch java.lang.reflect.InvocationTargetException from label08 to label09 with label18;
        catch java.lang.reflect.InvocationTargetException from label11 to label12 with label18;
        catch java.lang.reflect.InvocationTargetException from label14 to label15 with label18;
        catch twitter4j.internal.org.json.JSONException from label01 to label02 with label19;
        catch twitter4j.internal.org.json.JSONException from label05 to label06 with label19;
        catch twitter4j.internal.org.json.JSONException from label08 to label09 with label19;
        catch twitter4j.internal.org.json.JSONException from label11 to label12 with label19;
        catch twitter4j.internal.org.json.JSONException from label14 to label15 with label19;
    }

    public static twitter4j.Place createPlace(java.lang.String) throws twitter4j.TwitterException
    {
        java.lang.String $r0;
        java.lang.InstantiationException $r1;
        twitter4j.internal.org.json.JSONObject $r2;
        java.lang.reflect.Constructor $r3;
        java.lang.Object $r4;
        java.lang.Object[] $r5;
        twitter4j.Place $r6;
        twitter4j.TwitterException $r7;
        java.lang.IllegalAccessException $r8;
        java.lang.AssertionError $r9;
        java.lang.reflect.InvocationTargetException $r10;
        twitter4j.internal.org.json.JSONException $r11;

        $r0 := @parameter0: java.lang.String;

        $r2 = new twitter4j.internal.org.json.JSONObject;

     label1:
        specialinvoke $r2.<twitter4j.internal.org.json.JSONObject: void <init>(java.lang.String)>($r0);

     label2:
        $r3 = <twitter4j.json.DataObjectFactory: java.lang.reflect.Constructor placeConstructor>;

        $r5 = newarray (java.lang.Object)[1];

     label3:
        $r5[0] = $r2;

        $r4 = virtualinvoke $r3.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r5);

     label4:
        $r6 = (twitter4j.Place) $r4;

        return $r6;

     label5:
        $r1 := @caughtexception;

        $r7 = new twitter4j.TwitterException;

        specialinvoke $r7.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r1);

        throw $r7;

     label6:
        $r8 := @caughtexception;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>(java.lang.Object)>($r8);

        throw $r9;

     label7:
        $r10 := @caughtexception;

        $r7 = new twitter4j.TwitterException;

        specialinvoke $r7.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r10);

        throw $r7;

     label8:
        $r11 := @caughtexception;

        $r7 = new twitter4j.TwitterException;

        specialinvoke $r7.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r11);

        throw $r7;

        catch java.lang.InstantiationException from label1 to label2 with label5;
        catch java.lang.InstantiationException from label3 to label4 with label5;
        catch java.lang.IllegalAccessException from label1 to label2 with label6;
        catch java.lang.IllegalAccessException from label3 to label4 with label6;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label7;
        catch java.lang.reflect.InvocationTargetException from label3 to label4 with label7;
        catch twitter4j.internal.org.json.JSONException from label1 to label2 with label8;
        catch twitter4j.internal.org.json.JSONException from label3 to label4 with label8;
    }

    public static java.util.Map createRateLimitStatus(java.lang.String) throws twitter4j.TwitterException
    {
        java.lang.String $r0;
        java.lang.ClassNotFoundException $r1;
        twitter4j.internal.org.json.JSONObject $r2;
        java.lang.reflect.Method $r3;
        java.lang.Class $r4;
        java.lang.Object[] $r5;
        java.lang.Object $r6;
        java.util.Map $r7;
        twitter4j.TwitterException $r8;
        java.lang.IllegalAccessException $r9;
        java.lang.AssertionError $r10;
        java.lang.reflect.InvocationTargetException $r11;
        twitter4j.internal.org.json.JSONException $r12;

        $r0 := @parameter0: java.lang.String;

        $r2 = new twitter4j.internal.org.json.JSONObject;

     label1:
        specialinvoke $r2.<twitter4j.internal.org.json.JSONObject: void <init>(java.lang.String)>($r0);

        $r3 = <twitter4j.json.DataObjectFactory: java.lang.reflect.Method rateLimitStatusConstructor>;

        $r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("twitter4j.internal.json.RateLimitStatusJSONImpl");

     label2:
        $r5 = newarray (java.lang.Object)[1];

     label3:
        $r5[0] = $r2;

        $r6 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r4, $r5);

     label4:
        $r7 = (java.util.Map) $r6;

        return $r7;

     label5:
        $r1 := @caughtexception;

        $r8 = new twitter4j.TwitterException;

        specialinvoke $r8.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r1);

        throw $r8;

     label6:
        $r9 := @caughtexception;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>(java.lang.Object)>($r9);

        throw $r10;

     label7:
        $r11 := @caughtexception;

        $r8 = new twitter4j.TwitterException;

        specialinvoke $r8.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r11);

        throw $r8;

     label8:
        $r12 := @caughtexception;

        $r8 = new twitter4j.TwitterException;

        specialinvoke $r8.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r12);

        throw $r8;

        catch java.lang.ClassNotFoundException from label1 to label2 with label5;
        catch java.lang.ClassNotFoundException from label3 to label4 with label5;
        catch java.lang.IllegalAccessException from label1 to label2 with label6;
        catch java.lang.IllegalAccessException from label3 to label4 with label6;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label7;
        catch java.lang.reflect.InvocationTargetException from label3 to label4 with label7;
        catch twitter4j.internal.org.json.JSONException from label1 to label2 with label8;
        catch twitter4j.internal.org.json.JSONException from label3 to label4 with label8;
    }

    public static twitter4j.RelatedResults createRelatedResults(java.lang.String) throws twitter4j.TwitterException
    {
        java.lang.String $r0;
        java.lang.InstantiationException $r1;
        twitter4j.internal.org.json.JSONArray $r2;
        java.lang.reflect.Constructor $r3;
        java.lang.Object $r4;
        java.lang.Object[] $r5;
        twitter4j.RelatedResults $r6;
        twitter4j.TwitterException $r7;
        java.lang.IllegalAccessException $r8;
        java.lang.AssertionError $r9;
        java.lang.reflect.InvocationTargetException $r10;
        twitter4j.internal.org.json.JSONException $r11;

        $r0 := @parameter0: java.lang.String;

        $r2 = new twitter4j.internal.org.json.JSONArray;

     label1:
        specialinvoke $r2.<twitter4j.internal.org.json.JSONArray: void <init>(java.lang.String)>($r0);

     label2:
        $r3 = <twitter4j.json.DataObjectFactory: java.lang.reflect.Constructor relatedResultsConstructor>;

        $r5 = newarray (java.lang.Object)[1];

     label3:
        $r5[0] = $r2;

        $r4 = virtualinvoke $r3.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r5);

     label4:
        $r6 = (twitter4j.RelatedResults) $r4;

        return $r6;

     label5:
        $r1 := @caughtexception;

        $r7 = new twitter4j.TwitterException;

        specialinvoke $r7.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r1);

        throw $r7;

     label6:
        $r8 := @caughtexception;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>(java.lang.Object)>($r8);

        throw $r9;

     label7:
        $r10 := @caughtexception;

        $r7 = new twitter4j.TwitterException;

        specialinvoke $r7.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r10);

        throw $r7;

     label8:
        $r11 := @caughtexception;

        $r7 = new twitter4j.TwitterException;

        specialinvoke $r7.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r11);

        throw $r7;

        catch java.lang.InstantiationException from label1 to label2 with label5;
        catch java.lang.InstantiationException from label3 to label4 with label5;
        catch java.lang.IllegalAccessException from label1 to label2 with label6;
        catch java.lang.IllegalAccessException from label3 to label4 with label6;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label7;
        catch java.lang.reflect.InvocationTargetException from label3 to label4 with label7;
        catch twitter4j.internal.org.json.JSONException from label1 to label2 with label8;
        catch twitter4j.internal.org.json.JSONException from label3 to label4 with label8;
    }

    public static twitter4j.Relationship createRelationship(java.lang.String) throws twitter4j.TwitterException
    {
        java.lang.String $r0;
        java.lang.InstantiationException $r1;
        twitter4j.internal.org.json.JSONObject $r2;
        java.lang.reflect.Constructor $r3;
        java.lang.Object $r4;
        java.lang.Object[] $r5;
        twitter4j.Relationship $r6;
        twitter4j.TwitterException $r7;
        java.lang.IllegalAccessException $r8;
        java.lang.AssertionError $r9;
        java.lang.reflect.InvocationTargetException $r10;
        twitter4j.internal.org.json.JSONException $r11;

        $r0 := @parameter0: java.lang.String;

        $r2 = new twitter4j.internal.org.json.JSONObject;

     label1:
        specialinvoke $r2.<twitter4j.internal.org.json.JSONObject: void <init>(java.lang.String)>($r0);

     label2:
        $r3 = <twitter4j.json.DataObjectFactory: java.lang.reflect.Constructor relationshipConstructor>;

        $r5 = newarray (java.lang.Object)[1];

     label3:
        $r5[0] = $r2;

        $r4 = virtualinvoke $r3.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r5);

     label4:
        $r6 = (twitter4j.Relationship) $r4;

        return $r6;

     label5:
        $r1 := @caughtexception;

        $r7 = new twitter4j.TwitterException;

        specialinvoke $r7.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r1);

        throw $r7;

     label6:
        $r8 := @caughtexception;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>(java.lang.Object)>($r8);

        throw $r9;

     label7:
        $r10 := @caughtexception;

        $r7 = new twitter4j.TwitterException;

        specialinvoke $r7.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r10);

        throw $r7;

     label8:
        $r11 := @caughtexception;

        $r7 = new twitter4j.TwitterException;

        specialinvoke $r7.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r11);

        throw $r7;

        catch java.lang.InstantiationException from label1 to label2 with label5;
        catch java.lang.InstantiationException from label3 to label4 with label5;
        catch java.lang.IllegalAccessException from label1 to label2 with label6;
        catch java.lang.IllegalAccessException from label3 to label4 with label6;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label7;
        catch java.lang.reflect.InvocationTargetException from label3 to label4 with label7;
        catch twitter4j.internal.org.json.JSONException from label1 to label2 with label8;
        catch twitter4j.internal.org.json.JSONException from label3 to label4 with label8;
    }

    public static twitter4j.SavedSearch createSavedSearch(java.lang.String) throws twitter4j.TwitterException
    {
        java.lang.String $r0;
        java.lang.InstantiationException $r1;
        twitter4j.internal.org.json.JSONObject $r2;
        java.lang.reflect.Constructor $r3;
        java.lang.Object $r4;
        java.lang.Object[] $r5;
        twitter4j.SavedSearch $r6;
        twitter4j.TwitterException $r7;
        java.lang.IllegalAccessException $r8;
        java.lang.AssertionError $r9;
        java.lang.reflect.InvocationTargetException $r10;
        twitter4j.internal.org.json.JSONException $r11;

        $r0 := @parameter0: java.lang.String;

        $r2 = new twitter4j.internal.org.json.JSONObject;

     label1:
        specialinvoke $r2.<twitter4j.internal.org.json.JSONObject: void <init>(java.lang.String)>($r0);

     label2:
        $r3 = <twitter4j.json.DataObjectFactory: java.lang.reflect.Constructor savedSearchConstructor>;

        $r5 = newarray (java.lang.Object)[1];

     label3:
        $r5[0] = $r2;

        $r4 = virtualinvoke $r3.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r5);

     label4:
        $r6 = (twitter4j.SavedSearch) $r4;

        return $r6;

     label5:
        $r1 := @caughtexception;

        $r7 = new twitter4j.TwitterException;

        specialinvoke $r7.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r1);

        throw $r7;

     label6:
        $r8 := @caughtexception;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>(java.lang.Object)>($r8);

        throw $r9;

     label7:
        $r10 := @caughtexception;

        $r7 = new twitter4j.TwitterException;

        specialinvoke $r7.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r10);

        throw $r7;

     label8:
        $r11 := @caughtexception;

        $r7 = new twitter4j.TwitterException;

        specialinvoke $r7.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r11);

        throw $r7;

        catch java.lang.InstantiationException from label1 to label2 with label5;
        catch java.lang.InstantiationException from label3 to label4 with label5;
        catch java.lang.IllegalAccessException from label1 to label2 with label6;
        catch java.lang.IllegalAccessException from label3 to label4 with label6;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label7;
        catch java.lang.reflect.InvocationTargetException from label3 to label4 with label7;
        catch twitter4j.internal.org.json.JSONException from label1 to label2 with label8;
        catch twitter4j.internal.org.json.JSONException from label3 to label4 with label8;
    }

    public static twitter4j.Status createStatus(java.lang.String) throws twitter4j.TwitterException
    {
        java.lang.String $r0;
        java.lang.InstantiationException $r1;
        twitter4j.internal.org.json.JSONObject $r2;
        java.lang.reflect.Constructor $r3;
        java.lang.Object $r4;
        java.lang.Object[] $r5;
        twitter4j.Status $r6;
        twitter4j.TwitterException $r7;
        java.lang.IllegalAccessException $r8;
        java.lang.AssertionError $r9;
        java.lang.reflect.InvocationTargetException $r10;
        twitter4j.internal.org.json.JSONException $r11;

        $r0 := @parameter0: java.lang.String;

        $r2 = new twitter4j.internal.org.json.JSONObject;

     label1:
        specialinvoke $r2.<twitter4j.internal.org.json.JSONObject: void <init>(java.lang.String)>($r0);

     label2:
        $r3 = <twitter4j.json.DataObjectFactory: java.lang.reflect.Constructor statusConstructor>;

        $r5 = newarray (java.lang.Object)[1];

     label3:
        $r5[0] = $r2;

        $r4 = virtualinvoke $r3.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r5);

     label4:
        $r6 = (twitter4j.Status) $r4;

        return $r6;

     label5:
        $r1 := @caughtexception;

        $r7 = new twitter4j.TwitterException;

        specialinvoke $r7.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r1);

        throw $r7;

     label6:
        $r8 := @caughtexception;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>(java.lang.Object)>($r8);

        throw $r9;

     label7:
        $r10 := @caughtexception;

        $r7 = new twitter4j.TwitterException;

        specialinvoke $r7.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r10);

        throw $r7;

     label8:
        $r11 := @caughtexception;

        $r7 = new twitter4j.TwitterException;

        specialinvoke $r7.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r11);

        throw $r7;

        catch java.lang.InstantiationException from label1 to label2 with label5;
        catch java.lang.InstantiationException from label3 to label4 with label5;
        catch java.lang.IllegalAccessException from label1 to label2 with label6;
        catch java.lang.IllegalAccessException from label3 to label4 with label6;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label7;
        catch java.lang.reflect.InvocationTargetException from label3 to label4 with label7;
        catch twitter4j.internal.org.json.JSONException from label1 to label2 with label8;
        catch twitter4j.internal.org.json.JSONException from label3 to label4 with label8;
    }

    public static twitter4j.Trend createTrend(java.lang.String) throws twitter4j.TwitterException
    {
        java.lang.String $r0;
        java.lang.InstantiationException $r1;
        twitter4j.internal.org.json.JSONObject $r2;
        java.lang.reflect.Constructor $r3;
        java.lang.Object $r4;
        java.lang.Object[] $r5;
        twitter4j.Trend $r6;
        twitter4j.TwitterException $r7;
        java.lang.IllegalAccessException $r8;
        java.lang.AssertionError $r9;
        java.lang.reflect.InvocationTargetException $r10;
        twitter4j.internal.org.json.JSONException $r11;

        $r0 := @parameter0: java.lang.String;

        $r2 = new twitter4j.internal.org.json.JSONObject;

     label1:
        specialinvoke $r2.<twitter4j.internal.org.json.JSONObject: void <init>(java.lang.String)>($r0);

     label2:
        $r3 = <twitter4j.json.DataObjectFactory: java.lang.reflect.Constructor trendConstructor>;

        $r5 = newarray (java.lang.Object)[1];

     label3:
        $r5[0] = $r2;

        $r4 = virtualinvoke $r3.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r5);

     label4:
        $r6 = (twitter4j.Trend) $r4;

        return $r6;

     label5:
        $r1 := @caughtexception;

        $r7 = new twitter4j.TwitterException;

        specialinvoke $r7.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r1);

        throw $r7;

     label6:
        $r8 := @caughtexception;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>(java.lang.Object)>($r8);

        throw $r9;

     label7:
        $r10 := @caughtexception;

        $r7 = new twitter4j.TwitterException;

        specialinvoke $r7.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r10);

        throw $r7;

     label8:
        $r11 := @caughtexception;

        $r7 = new twitter4j.TwitterException;

        specialinvoke $r7.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r11);

        throw $r7;

        catch java.lang.InstantiationException from label1 to label2 with label5;
        catch java.lang.InstantiationException from label3 to label4 with label5;
        catch java.lang.IllegalAccessException from label1 to label2 with label6;
        catch java.lang.IllegalAccessException from label3 to label4 with label6;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label7;
        catch java.lang.reflect.InvocationTargetException from label3 to label4 with label7;
        catch twitter4j.internal.org.json.JSONException from label1 to label2 with label8;
        catch twitter4j.internal.org.json.JSONException from label3 to label4 with label8;
    }

    public static twitter4j.Trends createTrends(java.lang.String) throws twitter4j.TwitterException
    {
        java.lang.String $r0;
        java.lang.InstantiationException $r1;
        java.lang.reflect.Constructor $r2;
        java.lang.Object $r3;
        java.lang.Object[] $r4;
        twitter4j.Trends $r5;
        twitter4j.TwitterException $r6;
        java.lang.IllegalAccessException $r7;
        java.lang.reflect.InvocationTargetException $r8;
        java.lang.AssertionError $r9;

        $r0 := @parameter0: java.lang.String;

        $r2 = <twitter4j.json.DataObjectFactory: java.lang.reflect.Constructor trendsConstructor>;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = $r0;

     label1:
        $r3 = virtualinvoke $r2.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r4);

     label2:
        $r5 = (twitter4j.Trends) $r3;

        return $r5;

     label3:
        $r1 := @caughtexception;

        $r6 = new twitter4j.TwitterException;

        specialinvoke $r6.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r1);

        throw $r6;

     label4:
        $r7 := @caughtexception;

        $r6 = new twitter4j.TwitterException;

        specialinvoke $r6.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r7);

        throw $r6;

     label5:
        $r8 := @caughtexception;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>(java.lang.Object)>($r8);

        throw $r9;

        catch java.lang.InstantiationException from label1 to label2 with label3;
        catch java.lang.IllegalAccessException from label1 to label2 with label4;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label5;
    }

    public static twitter4j.User createUser(java.lang.String) throws twitter4j.TwitterException
    {
        java.lang.String $r0;
        java.lang.InstantiationException $r1;
        twitter4j.internal.org.json.JSONObject $r2;
        java.lang.reflect.Constructor $r3;
        java.lang.Object $r4;
        java.lang.Object[] $r5;
        twitter4j.User $r6;
        twitter4j.TwitterException $r7;
        java.lang.IllegalAccessException $r8;
        java.lang.AssertionError $r9;
        java.lang.reflect.InvocationTargetException $r10;
        twitter4j.internal.org.json.JSONException $r11;

        $r0 := @parameter0: java.lang.String;

        $r2 = new twitter4j.internal.org.json.JSONObject;

     label1:
        specialinvoke $r2.<twitter4j.internal.org.json.JSONObject: void <init>(java.lang.String)>($r0);

     label2:
        $r3 = <twitter4j.json.DataObjectFactory: java.lang.reflect.Constructor userConstructor>;

        $r5 = newarray (java.lang.Object)[1];

     label3:
        $r5[0] = $r2;

        $r4 = virtualinvoke $r3.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r5);

     label4:
        $r6 = (twitter4j.User) $r4;

        return $r6;

     label5:
        $r1 := @caughtexception;

        $r7 = new twitter4j.TwitterException;

        specialinvoke $r7.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r1);

        throw $r7;

     label6:
        $r8 := @caughtexception;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>(java.lang.Object)>($r8);

        throw $r9;

     label7:
        $r10 := @caughtexception;

        $r7 = new twitter4j.TwitterException;

        specialinvoke $r7.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r10);

        throw $r7;

     label8:
        $r11 := @caughtexception;

        $r7 = new twitter4j.TwitterException;

        specialinvoke $r7.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r11);

        throw $r7;

        catch java.lang.InstantiationException from label1 to label2 with label5;
        catch java.lang.InstantiationException from label3 to label4 with label5;
        catch java.lang.IllegalAccessException from label1 to label2 with label6;
        catch java.lang.IllegalAccessException from label3 to label4 with label6;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label7;
        catch java.lang.reflect.InvocationTargetException from label3 to label4 with label7;
        catch twitter4j.internal.org.json.JSONException from label1 to label2 with label8;
        catch twitter4j.internal.org.json.JSONException from label3 to label4 with label8;
    }

    public static twitter4j.UserList createUserList(java.lang.String) throws twitter4j.TwitterException
    {
        java.lang.String $r0;
        java.lang.InstantiationException $r1;
        twitter4j.internal.org.json.JSONObject $r2;
        java.lang.reflect.Constructor $r3;
        java.lang.Object $r4;
        java.lang.Object[] $r5;
        twitter4j.UserList $r6;
        twitter4j.TwitterException $r7;
        java.lang.IllegalAccessException $r8;
        java.lang.AssertionError $r9;
        java.lang.reflect.InvocationTargetException $r10;
        twitter4j.internal.org.json.JSONException $r11;

        $r0 := @parameter0: java.lang.String;

        $r2 = new twitter4j.internal.org.json.JSONObject;

     label1:
        specialinvoke $r2.<twitter4j.internal.org.json.JSONObject: void <init>(java.lang.String)>($r0);

     label2:
        $r3 = <twitter4j.json.DataObjectFactory: java.lang.reflect.Constructor userListConstructor>;

        $r5 = newarray (java.lang.Object)[1];

     label3:
        $r5[0] = $r2;

        $r4 = virtualinvoke $r3.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r5);

     label4:
        $r6 = (twitter4j.UserList) $r4;

        return $r6;

     label5:
        $r1 := @caughtexception;

        $r7 = new twitter4j.TwitterException;

        specialinvoke $r7.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r1);

        throw $r7;

     label6:
        $r8 := @caughtexception;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>(java.lang.Object)>($r8);

        throw $r9;

     label7:
        $r10 := @caughtexception;

        $r7 = new twitter4j.TwitterException;

        specialinvoke $r7.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r10);

        throw $r7;

     label8:
        $r11 := @caughtexception;

        $r7 = new twitter4j.TwitterException;

        specialinvoke $r7.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r11);

        throw $r7;

        catch java.lang.InstantiationException from label1 to label2 with label5;
        catch java.lang.InstantiationException from label3 to label4 with label5;
        catch java.lang.IllegalAccessException from label1 to label2 with label6;
        catch java.lang.IllegalAccessException from label3 to label4 with label6;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label7;
        catch java.lang.reflect.InvocationTargetException from label3 to label4 with label7;
        catch twitter4j.internal.org.json.JSONException from label1 to label2 with label8;
        catch twitter4j.internal.org.json.JSONException from label3 to label4 with label8;
    }

    public static java.lang.String getRawJSON(java.lang.Object)
    {
        java.lang.Object $r0, $r2;
        java.lang.ThreadLocal $r1;
        java.util.Map $r3;
        boolean $z0;
        java.lang.String $r4;

        $r0 := @parameter0: java.lang.Object;

        $r1 = <twitter4j.json.DataObjectFactory: java.lang.ThreadLocal rawJsonMap>;

        $r2 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r3 = (java.util.Map) $r2;

        $r2 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r0);

        $z0 = $r2 instanceof java.lang.String;

        if $z0 == 0 goto label1;

        $r4 = (java.lang.String) $r2;

        return $r4;

     label1:
        if $r2 == null goto label2;

        $r4 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        return $r4;

     label2:
        return null;
    }

    static java.lang.Object registerJSONObject(java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r0, $r1, $r3;
        java.lang.ThreadLocal $r2;
        java.util.Map $r4;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r2 = <twitter4j.json.DataObjectFactory: java.lang.ThreadLocal rawJsonMap>;

        $r3 = virtualinvoke $r2.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r4 = (java.util.Map) $r3;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, $r1);

        return $r0;
    }
}
