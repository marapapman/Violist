class twitter4j.internal.json.UserListJSONImpl extends twitter4j.internal.json.TwitterResponseImpl implements twitter4j.UserList, java.io.Serializable
{
    private static final long serialVersionUID;
    private java.lang.String description;
    private boolean following;
    private java.lang.String fullName;
    private int id;
    private int memberCount;
    private boolean mode;
    private java.lang.String name;
    private java.lang.String slug;
    private int subscriberCount;
    private java.lang.String uri;
    private twitter4j.User user;

    void <init>(twitter4j.internal.http.HttpResponse, twitter4j.conf.Configuration) throws twitter4j.TwitterException
    {
        twitter4j.internal.json.UserListJSONImpl $r0;
        twitter4j.internal.http.HttpResponse $r1;
        twitter4j.conf.Configuration $r2;
        boolean $z0;
        twitter4j.internal.org.json.JSONObject $r3;

        $r0 := @this: twitter4j.internal.json.UserListJSONImpl;

        $r1 := @parameter0: twitter4j.internal.http.HttpResponse;

        $r2 := @parameter1: twitter4j.conf.Configuration;

        specialinvoke $r0.<twitter4j.internal.json.TwitterResponseImpl: void <init>(twitter4j.internal.http.HttpResponse)>($r1);

        $z0 = interfaceinvoke $r2.<twitter4j.conf.Configuration: boolean isJSONStoreEnabled()>();

        if $z0 == 0 goto label1;

        staticinvoke <twitter4j.internal.json.DataObjectFactoryUtil: void clearThreadLocalMap()>();

     label1:
        $r3 = virtualinvoke $r1.<twitter4j.internal.http.HttpResponse: twitter4j.internal.org.json.JSONObject asJSONObject()>();

        specialinvoke $r0.<twitter4j.internal.json.UserListJSONImpl: void init(twitter4j.internal.org.json.JSONObject)>($r3);

        $z0 = interfaceinvoke $r2.<twitter4j.conf.Configuration: boolean isJSONStoreEnabled()>();

        if $z0 == 0 goto label2;

        staticinvoke <twitter4j.internal.json.DataObjectFactoryUtil: java.lang.Object registerJSONObject(java.lang.Object,java.lang.Object)>($r0, $r3);

        return;

     label2:
        return;
    }

    void <init>(twitter4j.internal.org.json.JSONObject) throws twitter4j.TwitterException
    {
        twitter4j.internal.json.UserListJSONImpl $r0;
        twitter4j.internal.org.json.JSONObject $r1;

        $r0 := @this: twitter4j.internal.json.UserListJSONImpl;

        $r1 := @parameter0: twitter4j.internal.org.json.JSONObject;

        specialinvoke $r0.<twitter4j.internal.json.TwitterResponseImpl: void <init>()>();

        specialinvoke $r0.<twitter4j.internal.json.UserListJSONImpl: void init(twitter4j.internal.org.json.JSONObject)>($r1);

        return;
    }

    static twitter4j.PagableResponseList createPagableUserListList(twitter4j.internal.http.HttpResponse, twitter4j.conf.Configuration) throws twitter4j.TwitterException
    {
        twitter4j.internal.http.HttpResponse $r0;
        twitter4j.conf.Configuration $r1;
        int $i0, $i1;
        twitter4j.internal.org.json.JSONException $r2;
        twitter4j.TwitterException $r3;
        twitter4j.internal.json.UserListJSONImpl $r4;
        twitter4j.internal.json.PagableResponseListImpl $r5;
        boolean $z0;
        twitter4j.internal.org.json.JSONObject $r6, $r8;
        twitter4j.internal.org.json.JSONArray $r7;

        $r0 := @parameter0: twitter4j.internal.http.HttpResponse;

        $r1 := @parameter1: twitter4j.conf.Configuration;

     label01:
        $z0 = interfaceinvoke $r1.<twitter4j.conf.Configuration: boolean isJSONStoreEnabled()>();

        if $z0 == 0 goto label02;

        staticinvoke <twitter4j.internal.json.DataObjectFactoryUtil: void clearThreadLocalMap()>();

     label02:
        $r6 = virtualinvoke $r0.<twitter4j.internal.http.HttpResponse: twitter4j.internal.org.json.JSONObject asJSONObject()>();

        $r7 = virtualinvoke $r6.<twitter4j.internal.org.json.JSONObject: twitter4j.internal.org.json.JSONArray getJSONArray(java.lang.String)>("lists");

        $i1 = virtualinvoke $r7.<twitter4j.internal.org.json.JSONArray: int length()>();

        $r5 = new twitter4j.internal.json.PagableResponseListImpl;

        specialinvoke $r5.<twitter4j.internal.json.PagableResponseListImpl: void <init>(int,twitter4j.internal.org.json.JSONObject,twitter4j.internal.http.HttpResponse)>($i1, $r6, $r0);

     label03:
        $i0 = 0;

     label04:
        if $i0 >= $i1 goto label06;

        $r8 = virtualinvoke $r7.<twitter4j.internal.org.json.JSONArray: twitter4j.internal.org.json.JSONObject getJSONObject(int)>($i0);

        $r4 = new twitter4j.internal.json.UserListJSONImpl;

        specialinvoke $r4.<twitter4j.internal.json.UserListJSONImpl: void <init>(twitter4j.internal.org.json.JSONObject)>($r8);

        interfaceinvoke $r5.<twitter4j.PagableResponseList: boolean add(java.lang.Object)>($r4);

        $z0 = interfaceinvoke $r1.<twitter4j.conf.Configuration: boolean isJSONStoreEnabled()>();

        if $z0 == 0 goto label05;

        staticinvoke <twitter4j.internal.json.DataObjectFactoryUtil: java.lang.Object registerJSONObject(java.lang.Object,java.lang.Object)>($r4, $r8);

     label05:
        $i0 = $i0 + 1;

        goto label04;

     label06:
        $z0 = interfaceinvoke $r1.<twitter4j.conf.Configuration: boolean isJSONStoreEnabled()>();

        if $z0 == 0 goto label10;

        staticinvoke <twitter4j.internal.json.DataObjectFactoryUtil: java.lang.Object registerJSONObject(java.lang.Object,java.lang.Object)>($r5, $r6);

     label07:
        return $r5;

     label08:
        $r2 := @caughtexception;

        $r3 = new twitter4j.TwitterException;

        specialinvoke $r3.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r2);

        throw $r3;

     label09:
        $r3 := @caughtexception;

        throw $r3;

     label10:
        return $r5;

        catch twitter4j.internal.org.json.JSONException from label01 to label03 with label08;
        catch twitter4j.internal.org.json.JSONException from label04 to label05 with label08;
        catch twitter4j.internal.org.json.JSONException from label06 to label07 with label08;
        catch twitter4j.TwitterException from label01 to label03 with label09;
        catch twitter4j.TwitterException from label04 to label05 with label09;
        catch twitter4j.TwitterException from label06 to label07 with label09;
    }

    static twitter4j.ResponseList createUserListList(twitter4j.internal.http.HttpResponse, twitter4j.conf.Configuration) throws twitter4j.TwitterException
    {
        twitter4j.internal.http.HttpResponse $r0;
        twitter4j.conf.Configuration $r1;
        int $i0, $i1;
        twitter4j.internal.org.json.JSONException $r2;
        twitter4j.TwitterException $r3;
        twitter4j.internal.json.UserListJSONImpl $r4;
        twitter4j.internal.json.ResponseListImpl $r5;
        boolean $z0;
        twitter4j.internal.org.json.JSONArray $r6;
        twitter4j.internal.org.json.JSONObject $r7;

        $r0 := @parameter0: twitter4j.internal.http.HttpResponse;

        $r1 := @parameter1: twitter4j.conf.Configuration;

     label01:
        $z0 = interfaceinvoke $r1.<twitter4j.conf.Configuration: boolean isJSONStoreEnabled()>();

        if $z0 == 0 goto label02;

        staticinvoke <twitter4j.internal.json.DataObjectFactoryUtil: void clearThreadLocalMap()>();

     label02:
        $r6 = virtualinvoke $r0.<twitter4j.internal.http.HttpResponse: twitter4j.internal.org.json.JSONArray asJSONArray()>();

        $i1 = virtualinvoke $r6.<twitter4j.internal.org.json.JSONArray: int length()>();

        $r5 = new twitter4j.internal.json.ResponseListImpl;

        specialinvoke $r5.<twitter4j.internal.json.ResponseListImpl: void <init>(int,twitter4j.internal.http.HttpResponse)>($i1, $r0);

     label03:
        $i0 = 0;

     label04:
        if $i0 >= $i1 goto label06;

        $r7 = virtualinvoke $r6.<twitter4j.internal.org.json.JSONArray: twitter4j.internal.org.json.JSONObject getJSONObject(int)>($i0);

        $r4 = new twitter4j.internal.json.UserListJSONImpl;

        specialinvoke $r4.<twitter4j.internal.json.UserListJSONImpl: void <init>(twitter4j.internal.org.json.JSONObject)>($r7);

        interfaceinvoke $r5.<twitter4j.ResponseList: boolean add(java.lang.Object)>($r4);

        $z0 = interfaceinvoke $r1.<twitter4j.conf.Configuration: boolean isJSONStoreEnabled()>();

        if $z0 == 0 goto label05;

        staticinvoke <twitter4j.internal.json.DataObjectFactoryUtil: java.lang.Object registerJSONObject(java.lang.Object,java.lang.Object)>($r4, $r7);

     label05:
        $i0 = $i0 + 1;

        goto label04;

     label06:
        $z0 = interfaceinvoke $r1.<twitter4j.conf.Configuration: boolean isJSONStoreEnabled()>();

        if $z0 == 0 goto label10;

        staticinvoke <twitter4j.internal.json.DataObjectFactoryUtil: java.lang.Object registerJSONObject(java.lang.Object,java.lang.Object)>($r5, $r6);

     label07:
        return $r5;

     label08:
        $r2 := @caughtexception;

        $r3 = new twitter4j.TwitterException;

        specialinvoke $r3.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r2);

        throw $r3;

     label09:
        $r3 := @caughtexception;

        throw $r3;

     label10:
        return $r5;

        catch twitter4j.internal.org.json.JSONException from label01 to label03 with label08;
        catch twitter4j.internal.org.json.JSONException from label04 to label05 with label08;
        catch twitter4j.internal.org.json.JSONException from label06 to label07 with label08;
        catch twitter4j.TwitterException from label01 to label03 with label09;
        catch twitter4j.TwitterException from label04 to label05 with label09;
        catch twitter4j.TwitterException from label06 to label07 with label09;
    }

    private void init(twitter4j.internal.org.json.JSONObject) throws twitter4j.TwitterException
    {
        twitter4j.internal.json.UserListJSONImpl $r0;
        twitter4j.internal.org.json.JSONObject $r1, $r6;
        twitter4j.internal.org.json.JSONException $r2;
        int $i0;
        java.lang.String $r3, $r4;
        boolean $z0;
        twitter4j.internal.json.UserJSONImpl $r5;
        twitter4j.TwitterException $r7;
        java.lang.StringBuilder $r8;

        $r0 := @this: twitter4j.internal.json.UserListJSONImpl;

        $r1 := @parameter0: twitter4j.internal.org.json.JSONObject;

        $i0 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: int getInt(java.lang.String,twitter4j.internal.org.json.JSONObject)>("id", $r1);

        $r0.<twitter4j.internal.json.UserListJSONImpl: int id> = $i0;

        $r3 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: java.lang.String getRawString(java.lang.String,twitter4j.internal.org.json.JSONObject)>("name", $r1);

        $r0.<twitter4j.internal.json.UserListJSONImpl: java.lang.String name> = $r3;

        $r3 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: java.lang.String getRawString(java.lang.String,twitter4j.internal.org.json.JSONObject)>("full_name", $r1);

        $r0.<twitter4j.internal.json.UserListJSONImpl: java.lang.String fullName> = $r3;

        $r3 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: java.lang.String getRawString(java.lang.String,twitter4j.internal.org.json.JSONObject)>("slug", $r1);

        $r0.<twitter4j.internal.json.UserListJSONImpl: java.lang.String slug> = $r3;

        $r3 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: java.lang.String getRawString(java.lang.String,twitter4j.internal.org.json.JSONObject)>("description", $r1);

        $r0.<twitter4j.internal.json.UserListJSONImpl: java.lang.String description> = $r3;

        $i0 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: int getInt(java.lang.String,twitter4j.internal.org.json.JSONObject)>("subscriber_count", $r1);

        $r0.<twitter4j.internal.json.UserListJSONImpl: int subscriberCount> = $i0;

        $i0 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: int getInt(java.lang.String,twitter4j.internal.org.json.JSONObject)>("member_count", $r1);

        $r0.<twitter4j.internal.json.UserListJSONImpl: int memberCount> = $i0;

        $r3 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: java.lang.String getRawString(java.lang.String,twitter4j.internal.org.json.JSONObject)>("uri", $r1);

        $r0.<twitter4j.internal.json.UserListJSONImpl: java.lang.String uri> = $r3;

        $r3 = "public";

        $r4 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: java.lang.String getRawString(java.lang.String,twitter4j.internal.org.json.JSONObject)>("mode", $r1);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        $r0.<twitter4j.internal.json.UserListJSONImpl: boolean mode> = $z0;

        $z0 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: boolean getBoolean(java.lang.String,twitter4j.internal.org.json.JSONObject)>("following", $r1);

        $r0.<twitter4j.internal.json.UserListJSONImpl: boolean following> = $z0;

     label1:
        $z0 = virtualinvoke $r1.<twitter4j.internal.org.json.JSONObject: boolean isNull(java.lang.String)>("user");

     label2:
        if $z0 != 0 goto label6;

     label3:
        $r5 = new twitter4j.internal.json.UserJSONImpl;

        $r6 = virtualinvoke $r1.<twitter4j.internal.org.json.JSONObject: twitter4j.internal.org.json.JSONObject getJSONObject(java.lang.String)>("user");

        specialinvoke $r5.<twitter4j.internal.json.UserJSONImpl: void <init>(twitter4j.internal.org.json.JSONObject)>($r6);

     label4:
        $r0.<twitter4j.internal.json.UserListJSONImpl: twitter4j.User user> = $r5;

        return;

     label5:
        $r2 := @caughtexception;

        $r7 = new twitter4j.TwitterException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<twitter4j.internal.org.json.JSONException: java.lang.String getMessage()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r4 = virtualinvoke $r1.<twitter4j.internal.org.json.JSONObject: java.lang.String toString()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<twitter4j.TwitterException: void <init>(java.lang.String,java.lang.Throwable)>($r4, $r2);

        throw $r7;

     label6:
        return;

        catch twitter4j.internal.org.json.JSONException from label1 to label2 with label5;
        catch twitter4j.internal.org.json.JSONException from label3 to label4 with label5;
    }

    public volatile int compareTo(java.lang.Object)
    {
        twitter4j.internal.json.UserListJSONImpl $r0;
        java.lang.Object $r1;
        int $i0;
        twitter4j.UserList $r2;

        $r0 := @this: twitter4j.internal.json.UserListJSONImpl;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (twitter4j.UserList) $r1;

        $i0 = virtualinvoke $r0.<twitter4j.internal.json.UserListJSONImpl: int compareTo(twitter4j.UserList)>($r2);

        return $i0;
    }

    public int compareTo(twitter4j.UserList)
    {
        twitter4j.internal.json.UserListJSONImpl $r0;
        twitter4j.UserList $r1;
        int $i0, $i1;

        $r0 := @this: twitter4j.internal.json.UserListJSONImpl;

        $r1 := @parameter0: twitter4j.UserList;

        $i0 = $r0.<twitter4j.internal.json.UserListJSONImpl: int id>;

        $i1 = interfaceinvoke $r1.<twitter4j.UserList: int getId()>();

        $i1 = $i0 - $i1;

        return $i1;
    }

    public boolean equals(java.lang.Object)
    {
        twitter4j.internal.json.UserListJSONImpl $r0;
        java.lang.Object $r1;
        boolean $z0;
        int $i0, $i1;
        twitter4j.UserList $r2;

        $r0 := @this: twitter4j.internal.json.UserListJSONImpl;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != null goto label1;

        return 0;

     label1:
        if $r0 == $r1 goto label3;

        $z0 = $r1 instanceof twitter4j.UserList;

        if $z0 == 0 goto label2;

        $r2 = (twitter4j.UserList) $r1;

        $i1 = interfaceinvoke $r2.<twitter4j.UserList: int getId()>();

        $i0 = $r0.<twitter4j.internal.json.UserListJSONImpl: int id>;

        if $i1 == $i0 goto label4;

     label2:
        return 0;

     label3:
        return 1;

     label4:
        return 1;
    }

    public java.lang.String getDescription()
    {
        twitter4j.internal.json.UserListJSONImpl $r0;
        java.lang.String r1;

        $r0 := @this: twitter4j.internal.json.UserListJSONImpl;

        r1 = $r0.<twitter4j.internal.json.UserListJSONImpl: java.lang.String description>;

        return r1;
    }

    public java.lang.String getFullName()
    {
        twitter4j.internal.json.UserListJSONImpl $r0;
        java.lang.String r1;

        $r0 := @this: twitter4j.internal.json.UserListJSONImpl;

        r1 = $r0.<twitter4j.internal.json.UserListJSONImpl: java.lang.String fullName>;

        return r1;
    }

    public int getId()
    {
        twitter4j.internal.json.UserListJSONImpl $r0;
        int i0;

        $r0 := @this: twitter4j.internal.json.UserListJSONImpl;

        i0 = $r0.<twitter4j.internal.json.UserListJSONImpl: int id>;

        return i0;
    }

    public int getMemberCount()
    {
        twitter4j.internal.json.UserListJSONImpl $r0;
        int i0;

        $r0 := @this: twitter4j.internal.json.UserListJSONImpl;

        i0 = $r0.<twitter4j.internal.json.UserListJSONImpl: int memberCount>;

        return i0;
    }

    public java.lang.String getName()
    {
        twitter4j.internal.json.UserListJSONImpl $r0;
        java.lang.String r1;

        $r0 := @this: twitter4j.internal.json.UserListJSONImpl;

        r1 = $r0.<twitter4j.internal.json.UserListJSONImpl: java.lang.String name>;

        return r1;
    }

    public java.lang.String getSlug()
    {
        twitter4j.internal.json.UserListJSONImpl $r0;
        java.lang.String r1;

        $r0 := @this: twitter4j.internal.json.UserListJSONImpl;

        r1 = $r0.<twitter4j.internal.json.UserListJSONImpl: java.lang.String slug>;

        return r1;
    }

    public int getSubscriberCount()
    {
        twitter4j.internal.json.UserListJSONImpl $r0;
        int i0;

        $r0 := @this: twitter4j.internal.json.UserListJSONImpl;

        i0 = $r0.<twitter4j.internal.json.UserListJSONImpl: int subscriberCount>;

        return i0;
    }

    public java.net.URI getURI()
    {
        twitter4j.internal.json.UserListJSONImpl $r0;
        java.net.URISyntaxException $r1;
        java.net.URI $r2;
        java.lang.String $r3;

        $r0 := @this: twitter4j.internal.json.UserListJSONImpl;

        $r2 = new java.net.URI;

        $r3 = $r0.<twitter4j.internal.json.UserListJSONImpl: java.lang.String uri>;

     label1:
        specialinvoke $r2.<java.net.URI: void <init>(java.lang.String)>($r3);

     label2:
        return $r2;

     label3:
        $r1 := @caughtexception;

        return null;

        catch java.net.URISyntaxException from label1 to label2 with label3;
    }

    public twitter4j.User getUser()
    {
        twitter4j.internal.json.UserListJSONImpl $r0;
        twitter4j.User r1;

        $r0 := @this: twitter4j.internal.json.UserListJSONImpl;

        r1 = $r0.<twitter4j.internal.json.UserListJSONImpl: twitter4j.User user>;

        return r1;
    }

    public int hashCode()
    {
        twitter4j.internal.json.UserListJSONImpl $r0;
        int i0;

        $r0 := @this: twitter4j.internal.json.UserListJSONImpl;

        i0 = $r0.<twitter4j.internal.json.UserListJSONImpl: int id>;

        return i0;
    }

    public boolean isFollowing()
    {
        twitter4j.internal.json.UserListJSONImpl $r0;
        boolean z0;

        $r0 := @this: twitter4j.internal.json.UserListJSONImpl;

        z0 = $r0.<twitter4j.internal.json.UserListJSONImpl: boolean following>;

        return z0;
    }

    public boolean isPublic()
    {
        twitter4j.internal.json.UserListJSONImpl $r0;
        boolean z0;

        $r0 := @this: twitter4j.internal.json.UserListJSONImpl;

        z0 = $r0.<twitter4j.internal.json.UserListJSONImpl: boolean mode>;

        return z0;
    }

    public java.lang.String toString()
    {
        twitter4j.internal.json.UserListJSONImpl $r0;
        java.lang.StringBuilder $r1;
        int $i0;
        java.lang.String $r2;
        boolean $z0;
        twitter4j.User $r3;

        $r0 := @this: twitter4j.internal.json.UserListJSONImpl;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UserListJSONImpl{id=");

        $i0 = $r0.<twitter4j.internal.json.UserListJSONImpl: int id>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", name=\'");

        $r2 = $r0.<twitter4j.internal.json.UserListJSONImpl: java.lang.String name>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", fullName=\'");

        $r2 = $r0.<twitter4j.internal.json.UserListJSONImpl: java.lang.String fullName>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", slug=\'");

        $r2 = $r0.<twitter4j.internal.json.UserListJSONImpl: java.lang.String slug>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", description=\'");

        $r2 = $r0.<twitter4j.internal.json.UserListJSONImpl: java.lang.String description>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", subscriberCount=");

        $i0 = $r0.<twitter4j.internal.json.UserListJSONImpl: int subscriberCount>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", memberCount=");

        $i0 = $r0.<twitter4j.internal.json.UserListJSONImpl: int memberCount>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uri=\'");

        $r2 = $r0.<twitter4j.internal.json.UserListJSONImpl: java.lang.String uri>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mode=");

        $z0 = $r0.<twitter4j.internal.json.UserListJSONImpl: boolean mode>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", user=");

        $r3 = $r0.<twitter4j.internal.json.UserListJSONImpl: twitter4j.User user>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", following=");

        $z0 = $r0.<twitter4j.internal.json.UserListJSONImpl: boolean following>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static void <clinit>()
    {
        <twitter4j.internal.json.UserListJSONImpl: long serialVersionUID> = -6345893237975349030L;

        return;
    }
}
