final class twitter4j.internal.logging.StdOutLogger extends twitter4j.internal.logging.Logger
{
    private static final boolean DEBUG;

    static void <clinit>()
    {
        twitter4j.conf.Configuration $r0;
        boolean $z0;

        $r0 = staticinvoke <twitter4j.conf.ConfigurationContext: twitter4j.conf.Configuration getInstance()>();

        $z0 = interfaceinvoke $r0.<twitter4j.conf.Configuration: boolean isDebugEnabled()>();

        <twitter4j.internal.logging.StdOutLogger: boolean DEBUG> = $z0;

        return;
    }

    void <init>()
    {
        twitter4j.internal.logging.StdOutLogger $r0;

        $r0 := @this: twitter4j.internal.logging.StdOutLogger;

        specialinvoke $r0.<twitter4j.internal.logging.Logger: void <init>()>();

        return;
    }

    public void debug(java.lang.String)
    {
        twitter4j.internal.logging.StdOutLogger $r0;
        java.lang.String $r1;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.io.PrintStream $r3;
        java.util.Date $r4;

        $r0 := @this: twitter4j.internal.logging.StdOutLogger;

        $r1 := @parameter0: java.lang.String;

        $z0 = <twitter4j.internal.logging.StdOutLogger: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r4 = new java.util.Date;

        specialinvoke $r4.<java.util.Date: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r1);

        return;

     label1:
        return;
    }

    public void debug(java.lang.String, java.lang.String)
    {
        twitter4j.internal.logging.StdOutLogger $r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        java.lang.StringBuilder $r3;

        $r0 := @this: twitter4j.internal.logging.StdOutLogger;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $z0 = <twitter4j.internal.logging.StdOutLogger: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<twitter4j.internal.logging.StdOutLogger: void debug(java.lang.String)>($r2);

        return;

     label1:
        return;
    }

    public void error(java.lang.String)
    {
        twitter4j.internal.logging.StdOutLogger $r0;
        java.lang.String $r1;
        java.io.PrintStream $r2;
        java.lang.StringBuilder $r3;
        java.util.Date $r4;

        $r0 := @this: twitter4j.internal.logging.StdOutLogger;

        $r1 := @parameter0: java.lang.String;

        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r4 = new java.util.Date;

        specialinvoke $r4.<java.util.Date: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r1);

        return;
    }

    public void error(java.lang.String, java.lang.Throwable)
    {
        twitter4j.internal.logging.StdOutLogger $r0;
        java.lang.String $r1;
        java.lang.Throwable $r2;
        java.io.PrintStream $r3;

        $r0 := @this: twitter4j.internal.logging.StdOutLogger;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Throwable;

        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r1);

        $r3 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r2.<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>($r3);

        return;
    }

    public void info(java.lang.String)
    {
        twitter4j.internal.logging.StdOutLogger $r0;
        java.lang.String $r1;
        java.io.PrintStream $r2;
        java.lang.StringBuilder $r3;
        java.util.Date $r4;

        $r0 := @this: twitter4j.internal.logging.StdOutLogger;

        $r1 := @parameter0: java.lang.String;

        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r4 = new java.util.Date;

        specialinvoke $r4.<java.util.Date: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r1);

        return;
    }

    public void info(java.lang.String, java.lang.String)
    {
        twitter4j.internal.logging.StdOutLogger $r0;
        java.lang.String $r1, $r2;
        java.lang.StringBuilder $r3;

        $r0 := @this: twitter4j.internal.logging.StdOutLogger;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<twitter4j.internal.logging.StdOutLogger: void info(java.lang.String)>($r2);

        return;
    }

    public boolean isDebugEnabled()
    {
        twitter4j.internal.logging.StdOutLogger $r0;
        boolean z0;

        $r0 := @this: twitter4j.internal.logging.StdOutLogger;

        z0 = <twitter4j.internal.logging.StdOutLogger: boolean DEBUG>;

        return z0;
    }

    public boolean isErrorEnabled()
    {
        twitter4j.internal.logging.StdOutLogger $r0;

        $r0 := @this: twitter4j.internal.logging.StdOutLogger;

        return 1;
    }

    public boolean isInfoEnabled()
    {
        twitter4j.internal.logging.StdOutLogger $r0;

        $r0 := @this: twitter4j.internal.logging.StdOutLogger;

        return 1;
    }

    public boolean isWarnEnabled()
    {
        twitter4j.internal.logging.StdOutLogger $r0;

        $r0 := @this: twitter4j.internal.logging.StdOutLogger;

        return 1;
    }

    public void warn(java.lang.String)
    {
        twitter4j.internal.logging.StdOutLogger $r0;
        java.lang.String $r1;
        java.io.PrintStream $r2;
        java.lang.StringBuilder $r3;
        java.util.Date $r4;

        $r0 := @this: twitter4j.internal.logging.StdOutLogger;

        $r1 := @parameter0: java.lang.String;

        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r4 = new java.util.Date;

        specialinvoke $r4.<java.util.Date: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r1);

        return;
    }

    public void warn(java.lang.String, java.lang.String)
    {
        twitter4j.internal.logging.StdOutLogger $r0;
        java.lang.String $r1, $r2;
        java.lang.StringBuilder $r3;

        $r0 := @this: twitter4j.internal.logging.StdOutLogger;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<twitter4j.internal.logging.StdOutLogger: void warn(java.lang.String)>($r2);

        return;
    }
}
