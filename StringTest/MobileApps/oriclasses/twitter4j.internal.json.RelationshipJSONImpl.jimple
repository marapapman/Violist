class twitter4j.internal.json.RelationshipJSONImpl extends twitter4j.internal.json.TwitterResponseImpl implements twitter4j.Relationship, java.io.Serializable
{
    private static final long serialVersionUID;
    private final boolean sourceBlockingTarget;
    private final boolean sourceFollowedByTarget;
    private final boolean sourceFollowingTarget;
    private final boolean sourceNotificationsEnabled;
    private final long sourceUserId;
    private final java.lang.String sourceUserScreenName;
    private final long targetUserId;
    private final java.lang.String targetUserScreenName;
    private boolean wantRetweets;

    void <init>(twitter4j.internal.http.HttpResponse, twitter4j.conf.Configuration) throws twitter4j.TwitterException
    {
        twitter4j.internal.json.RelationshipJSONImpl $r0;
        twitter4j.internal.http.HttpResponse $r1;
        twitter4j.conf.Configuration $r2;
        twitter4j.internal.org.json.JSONObject $r3;
        boolean $z0;

        $r0 := @this: twitter4j.internal.json.RelationshipJSONImpl;

        $r1 := @parameter0: twitter4j.internal.http.HttpResponse;

        $r2 := @parameter1: twitter4j.conf.Configuration;

        $r3 = virtualinvoke $r1.<twitter4j.internal.http.HttpResponse: twitter4j.internal.org.json.JSONObject asJSONObject()>();

        specialinvoke $r0.<twitter4j.internal.json.RelationshipJSONImpl: void <init>(twitter4j.internal.http.HttpResponse,twitter4j.internal.org.json.JSONObject)>($r1, $r3);

        $z0 = interfaceinvoke $r2.<twitter4j.conf.Configuration: boolean isJSONStoreEnabled()>();

        if $z0 == 0 goto label1;

        staticinvoke <twitter4j.internal.json.DataObjectFactoryUtil: void clearThreadLocalMap()>();

        $r3 = virtualinvoke $r1.<twitter4j.internal.http.HttpResponse: twitter4j.internal.org.json.JSONObject asJSONObject()>();

        staticinvoke <twitter4j.internal.json.DataObjectFactoryUtil: java.lang.Object registerJSONObject(java.lang.Object,java.lang.Object)>($r0, $r3);

        return;

     label1:
        return;
    }

    void <init>(twitter4j.internal.http.HttpResponse, twitter4j.internal.org.json.JSONObject) throws twitter4j.TwitterException
    {
        twitter4j.internal.json.RelationshipJSONImpl $r0;
        twitter4j.internal.http.HttpResponse $r1;
        twitter4j.internal.org.json.JSONObject $r2, $r5, $r6;
        twitter4j.internal.org.json.JSONException $r3;
        java.lang.StringBuilder $r4;
        long $l0;
        java.lang.String $r7;
        boolean $z0;
        twitter4j.TwitterException $r8;

        $r0 := @this: twitter4j.internal.json.RelationshipJSONImpl;

        $r1 := @parameter0: twitter4j.internal.http.HttpResponse;

        $r2 := @parameter1: twitter4j.internal.org.json.JSONObject;

        specialinvoke $r0.<twitter4j.internal.json.TwitterResponseImpl: void <init>(twitter4j.internal.http.HttpResponse)>($r1);

     label1:
        $r5 = virtualinvoke $r2.<twitter4j.internal.org.json.JSONObject: twitter4j.internal.org.json.JSONObject getJSONObject(java.lang.String)>("relationship");

        $r6 = virtualinvoke $r5.<twitter4j.internal.org.json.JSONObject: twitter4j.internal.org.json.JSONObject getJSONObject(java.lang.String)>("source");

        $r5 = virtualinvoke $r5.<twitter4j.internal.org.json.JSONObject: twitter4j.internal.org.json.JSONObject getJSONObject(java.lang.String)>("target");

        $l0 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: long getLong(java.lang.String,twitter4j.internal.org.json.JSONObject)>("id", $r6);

        $r0.<twitter4j.internal.json.RelationshipJSONImpl: long sourceUserId> = $l0;

        $l0 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: long getLong(java.lang.String,twitter4j.internal.org.json.JSONObject)>("id", $r5);

        $r0.<twitter4j.internal.json.RelationshipJSONImpl: long targetUserId> = $l0;

        $r7 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: java.lang.String getUnescapedString(java.lang.String,twitter4j.internal.org.json.JSONObject)>("screen_name", $r6);

        $r0.<twitter4j.internal.json.RelationshipJSONImpl: java.lang.String sourceUserScreenName> = $r7;

        $r7 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: java.lang.String getUnescapedString(java.lang.String,twitter4j.internal.org.json.JSONObject)>("screen_name", $r5);

        $r0.<twitter4j.internal.json.RelationshipJSONImpl: java.lang.String targetUserScreenName> = $r7;

        $z0 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: boolean getBoolean(java.lang.String,twitter4j.internal.org.json.JSONObject)>("blocking", $r6);

        $r0.<twitter4j.internal.json.RelationshipJSONImpl: boolean sourceBlockingTarget> = $z0;

        $z0 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: boolean getBoolean(java.lang.String,twitter4j.internal.org.json.JSONObject)>("following", $r6);

        $r0.<twitter4j.internal.json.RelationshipJSONImpl: boolean sourceFollowingTarget> = $z0;

        $z0 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: boolean getBoolean(java.lang.String,twitter4j.internal.org.json.JSONObject)>("followed_by", $r6);

        $r0.<twitter4j.internal.json.RelationshipJSONImpl: boolean sourceFollowedByTarget> = $z0;

        $z0 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: boolean getBoolean(java.lang.String,twitter4j.internal.org.json.JSONObject)>("notifications_enabled", $r6);

        $r0.<twitter4j.internal.json.RelationshipJSONImpl: boolean sourceNotificationsEnabled> = $z0;

        $z0 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: boolean getBoolean(java.lang.String,twitter4j.internal.org.json.JSONObject)>("want_retweets", $r6);

     label2:
        $r0.<twitter4j.internal.json.RelationshipJSONImpl: boolean wantRetweets> = $z0;

        return;

     label3:
        $r3 := @caughtexception;

        $r8 = new twitter4j.TwitterException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r3.<twitter4j.internal.org.json.JSONException: java.lang.String getMessage()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r7 = virtualinvoke $r2.<twitter4j.internal.org.json.JSONObject: java.lang.String toString()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<twitter4j.TwitterException: void <init>(java.lang.String,java.lang.Throwable)>($r7, $r3);

        throw $r8;

        catch twitter4j.internal.org.json.JSONException from label1 to label2 with label3;
    }

    void <init>(twitter4j.internal.org.json.JSONObject) throws twitter4j.TwitterException
    {
        twitter4j.internal.json.RelationshipJSONImpl $r0;
        twitter4j.internal.org.json.JSONObject $r1;

        $r0 := @this: twitter4j.internal.json.RelationshipJSONImpl;

        $r1 := @parameter0: twitter4j.internal.org.json.JSONObject;

        specialinvoke $r0.<twitter4j.internal.json.RelationshipJSONImpl: void <init>(twitter4j.internal.http.HttpResponse,twitter4j.internal.org.json.JSONObject)>(null, $r1);

        return;
    }

    static twitter4j.ResponseList createRelationshipList(twitter4j.internal.http.HttpResponse, twitter4j.conf.Configuration) throws twitter4j.TwitterException
    {
        twitter4j.internal.http.HttpResponse $r0;
        twitter4j.conf.Configuration $r1;
        int $i0, $i1;
        twitter4j.internal.org.json.JSONException $r2;
        twitter4j.internal.json.RelationshipJSONImpl $r3;
        twitter4j.internal.json.ResponseListImpl $r4;
        twitter4j.TwitterException $r5;
        boolean $z0;
        twitter4j.internal.org.json.JSONArray $r6;
        twitter4j.internal.org.json.JSONObject $r7;

        $r0 := @parameter0: twitter4j.internal.http.HttpResponse;

        $r1 := @parameter1: twitter4j.conf.Configuration;

     label01:
        $z0 = interfaceinvoke $r1.<twitter4j.conf.Configuration: boolean isJSONStoreEnabled()>();

        if $z0 == 0 goto label02;

        staticinvoke <twitter4j.internal.json.DataObjectFactoryUtil: void clearThreadLocalMap()>();

     label02:
        $r6 = virtualinvoke $r0.<twitter4j.internal.http.HttpResponse: twitter4j.internal.org.json.JSONArray asJSONArray()>();

        $i1 = virtualinvoke $r6.<twitter4j.internal.org.json.JSONArray: int length()>();

        $r4 = new twitter4j.internal.json.ResponseListImpl;

        specialinvoke $r4.<twitter4j.internal.json.ResponseListImpl: void <init>(int,twitter4j.internal.http.HttpResponse)>($i1, $r0);

     label03:
        $i0 = 0;

     label04:
        if $i0 >= $i1 goto label07;

        $r7 = virtualinvoke $r6.<twitter4j.internal.org.json.JSONArray: twitter4j.internal.org.json.JSONObject getJSONObject(int)>($i0);

        $r3 = new twitter4j.internal.json.RelationshipJSONImpl;

        specialinvoke $r3.<twitter4j.internal.json.RelationshipJSONImpl: void <init>(twitter4j.internal.org.json.JSONObject)>($r7);

        $z0 = interfaceinvoke $r1.<twitter4j.conf.Configuration: boolean isJSONStoreEnabled()>();

        if $z0 == 0 goto label05;

        staticinvoke <twitter4j.internal.json.DataObjectFactoryUtil: java.lang.Object registerJSONObject(java.lang.Object,java.lang.Object)>($r3, $r7);

     label05:
        interfaceinvoke $r4.<twitter4j.ResponseList: boolean add(java.lang.Object)>($r3);

     label06:
        $i0 = $i0 + 1;

        goto label04;

     label07:
        $z0 = interfaceinvoke $r1.<twitter4j.conf.Configuration: boolean isJSONStoreEnabled()>();

        if $z0 == 0 goto label11;

        staticinvoke <twitter4j.internal.json.DataObjectFactoryUtil: java.lang.Object registerJSONObject(java.lang.Object,java.lang.Object)>($r4, $r6);

     label08:
        return $r4;

     label09:
        $r2 := @caughtexception;

        $r5 = new twitter4j.TwitterException;

        specialinvoke $r5.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r2);

        throw $r5;

     label10:
        $r5 := @caughtexception;

        throw $r5;

     label11:
        return $r4;

        catch twitter4j.internal.org.json.JSONException from label01 to label03 with label09;
        catch twitter4j.internal.org.json.JSONException from label04 to label06 with label09;
        catch twitter4j.internal.org.json.JSONException from label07 to label08 with label09;
        catch twitter4j.TwitterException from label01 to label03 with label10;
        catch twitter4j.TwitterException from label04 to label06 with label10;
        catch twitter4j.TwitterException from label07 to label08 with label10;
    }

    public boolean equals(java.lang.Object)
    {
        twitter4j.internal.json.RelationshipJSONImpl $r0;
        java.lang.Object $r1;
        boolean $z0;
        long $l0, $l1;
        twitter4j.Relationship $r2;
        byte $b2;
        java.lang.String $r3, $r4;

        $r0 := @this: twitter4j.internal.json.RelationshipJSONImpl;

        $r1 := @parameter0: java.lang.Object;

        if $r0 != $r1 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof twitter4j.Relationship;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r2 = (twitter4j.Relationship) $r1;

        $l1 = $r0.<twitter4j.internal.json.RelationshipJSONImpl: long sourceUserId>;

        $l0 = interfaceinvoke $r2.<twitter4j.Relationship: long getSourceUserId()>();

        $b2 = $l1 cmp $l0;

        if $b2 == 0 goto label3;

        return 0;

     label3:
        $l1 = $r0.<twitter4j.internal.json.RelationshipJSONImpl: long targetUserId>;

        $l0 = interfaceinvoke $r2.<twitter4j.Relationship: long getTargetUserId()>();

        $b2 = $l1 cmp $l0;

        if $b2 == 0 goto label4;

        return 0;

     label4:
        $r3 = $r0.<twitter4j.internal.json.RelationshipJSONImpl: java.lang.String sourceUserScreenName>;

        $r4 = interfaceinvoke $r2.<twitter4j.Relationship: java.lang.String getSourceUserScreenName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label5;

        return 0;

     label5:
        $r4 = $r0.<twitter4j.internal.json.RelationshipJSONImpl: java.lang.String targetUserScreenName>;

        $r3 = interfaceinvoke $r2.<twitter4j.Relationship: java.lang.String getTargetUserScreenName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label6;

        return 0;

     label6:
        return 1;
    }

    public long getSourceUserId()
    {
        twitter4j.internal.json.RelationshipJSONImpl $r0;
        long l0;

        $r0 := @this: twitter4j.internal.json.RelationshipJSONImpl;

        l0 = $r0.<twitter4j.internal.json.RelationshipJSONImpl: long sourceUserId>;

        return l0;
    }

    public java.lang.String getSourceUserScreenName()
    {
        twitter4j.internal.json.RelationshipJSONImpl $r0;
        java.lang.String r1;

        $r0 := @this: twitter4j.internal.json.RelationshipJSONImpl;

        r1 = $r0.<twitter4j.internal.json.RelationshipJSONImpl: java.lang.String sourceUserScreenName>;

        return r1;
    }

    public long getTargetUserId()
    {
        twitter4j.internal.json.RelationshipJSONImpl $r0;
        long l0;

        $r0 := @this: twitter4j.internal.json.RelationshipJSONImpl;

        l0 = $r0.<twitter4j.internal.json.RelationshipJSONImpl: long targetUserId>;

        return l0;
    }

    public java.lang.String getTargetUserScreenName()
    {
        twitter4j.internal.json.RelationshipJSONImpl $r0;
        java.lang.String r1;

        $r0 := @this: twitter4j.internal.json.RelationshipJSONImpl;

        r1 = $r0.<twitter4j.internal.json.RelationshipJSONImpl: java.lang.String targetUserScreenName>;

        return r1;
    }

    public int hashCode()
    {
        twitter4j.internal.json.RelationshipJSONImpl $r0;
        int $i0, $i1, $i5;
        java.lang.String $r1;
        byte $b2, $b6;
        long $l3, $l4;
        boolean $z0;

        $r0 := @this: twitter4j.internal.json.RelationshipJSONImpl;

        $b2 = 1;

        $i1 = 0;

        $l3 = $r0.<twitter4j.internal.json.RelationshipJSONImpl: long targetUserId>;

        $l4 = $r0.<twitter4j.internal.json.RelationshipJSONImpl: long targetUserId>;

        $l4 = $l4 >>> 32;

        $l4 = $l3 ^ $l4;

        $i0 = (int) $l4;

        $i5 = $i0 * 31;

        $r1 = $r0.<twitter4j.internal.json.RelationshipJSONImpl: java.lang.String targetUserScreenName>;

        if $r1 == null goto label07;

        $r1 = $r0.<twitter4j.internal.json.RelationshipJSONImpl: java.lang.String targetUserScreenName>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

     label01:
        $i5 = $i5 + $i0;

        $i5 = $i5 * 31;

        $z0 = $r0.<twitter4j.internal.json.RelationshipJSONImpl: boolean sourceBlockingTarget>;

        if $z0 == 0 goto label08;

        $b6 = 1;

     label02:
        $i5 = $i5 + $b6;

        $i5 = $i5 * 31;

        $z0 = $r0.<twitter4j.internal.json.RelationshipJSONImpl: boolean sourceNotificationsEnabled>;

        if $z0 == 0 goto label09;

        $b6 = 1;

     label03:
        $i5 = $i5 + $b6;

        $i5 = $i5 * 31;

        $z0 = $r0.<twitter4j.internal.json.RelationshipJSONImpl: boolean sourceFollowingTarget>;

        if $z0 == 0 goto label10;

        $b6 = 1;

     label04:
        $i5 = $i5 + $b6;

        $i5 = $i5 * 31;

        $z0 = $r0.<twitter4j.internal.json.RelationshipJSONImpl: boolean sourceFollowedByTarget>;

        if $z0 == 0 goto label11;

     label05:
        $i5 = $i5 + $b2;

        $i5 = $i5 * 31;

        $l4 = $r0.<twitter4j.internal.json.RelationshipJSONImpl: long sourceUserId>;

        $l3 = $r0.<twitter4j.internal.json.RelationshipJSONImpl: long sourceUserId>;

        $l3 = $l3 >>> 32;

        $l4 = $l4 ^ $l3;

        $i0 = (int) $l4;

        $i5 = $i5 + $i0;

        $i5 = $i5 * 31;

        $r1 = $r0.<twitter4j.internal.json.RelationshipJSONImpl: java.lang.String sourceUserScreenName>;

        if $r1 == null goto label06;

        $r1 = $r0.<twitter4j.internal.json.RelationshipJSONImpl: java.lang.String sourceUserScreenName>;

        $i1 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

     label06:
        $i5 = $i5 + $i1;

        return $i5;

     label07:
        $i0 = 0;

        goto label01;

     label08:
        $b6 = 0;

        goto label02;

     label09:
        $b6 = 0;

        goto label03;

     label10:
        $b6 = 0;

        goto label04;

     label11:
        $b2 = 0;

        goto label05;
    }

    public boolean isSourceBlockingTarget()
    {
        twitter4j.internal.json.RelationshipJSONImpl $r0;
        boolean z0;

        $r0 := @this: twitter4j.internal.json.RelationshipJSONImpl;

        z0 = $r0.<twitter4j.internal.json.RelationshipJSONImpl: boolean sourceBlockingTarget>;

        return z0;
    }

    public boolean isSourceFollowedByTarget()
    {
        twitter4j.internal.json.RelationshipJSONImpl $r0;
        boolean z0;

        $r0 := @this: twitter4j.internal.json.RelationshipJSONImpl;

        z0 = $r0.<twitter4j.internal.json.RelationshipJSONImpl: boolean sourceFollowedByTarget>;

        return z0;
    }

    public boolean isSourceFollowingTarget()
    {
        twitter4j.internal.json.RelationshipJSONImpl $r0;
        boolean z0;

        $r0 := @this: twitter4j.internal.json.RelationshipJSONImpl;

        z0 = $r0.<twitter4j.internal.json.RelationshipJSONImpl: boolean sourceFollowingTarget>;

        return z0;
    }

    public boolean isSourceNotificationsEnabled()
    {
        twitter4j.internal.json.RelationshipJSONImpl $r0;
        boolean z0;

        $r0 := @this: twitter4j.internal.json.RelationshipJSONImpl;

        z0 = $r0.<twitter4j.internal.json.RelationshipJSONImpl: boolean sourceNotificationsEnabled>;

        return z0;
    }

    public boolean isSourceWantRetweets()
    {
        twitter4j.internal.json.RelationshipJSONImpl $r0;
        boolean z0;

        $r0 := @this: twitter4j.internal.json.RelationshipJSONImpl;

        z0 = $r0.<twitter4j.internal.json.RelationshipJSONImpl: boolean wantRetweets>;

        return z0;
    }

    public boolean isTargetFollowedBySource()
    {
        twitter4j.internal.json.RelationshipJSONImpl $r0;
        boolean z0;

        $r0 := @this: twitter4j.internal.json.RelationshipJSONImpl;

        z0 = $r0.<twitter4j.internal.json.RelationshipJSONImpl: boolean sourceFollowingTarget>;

        return z0;
    }

    public boolean isTargetFollowingSource()
    {
        twitter4j.internal.json.RelationshipJSONImpl $r0;
        boolean z0;

        $r0 := @this: twitter4j.internal.json.RelationshipJSONImpl;

        z0 = $r0.<twitter4j.internal.json.RelationshipJSONImpl: boolean sourceFollowedByTarget>;

        return z0;
    }

    public java.lang.String toString()
    {
        twitter4j.internal.json.RelationshipJSONImpl $r0;
        java.lang.StringBuilder $r1;
        long $l0;
        java.lang.String $r2;
        boolean $z0;

        $r0 := @this: twitter4j.internal.json.RelationshipJSONImpl;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RelationshipJSONImpl{sourceUserId=");

        $l0 = $r0.<twitter4j.internal.json.RelationshipJSONImpl: long sourceUserId>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", targetUserId=");

        $l0 = $r0.<twitter4j.internal.json.RelationshipJSONImpl: long targetUserId>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", sourceUserScreenName=\'");

        $r2 = $r0.<twitter4j.internal.json.RelationshipJSONImpl: java.lang.String sourceUserScreenName>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", targetUserScreenName=\'");

        $r2 = $r0.<twitter4j.internal.json.RelationshipJSONImpl: java.lang.String targetUserScreenName>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", sourceFollowingTarget=");

        $z0 = $r0.<twitter4j.internal.json.RelationshipJSONImpl: boolean sourceFollowingTarget>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", sourceFollowedByTarget=");

        $z0 = $r0.<twitter4j.internal.json.RelationshipJSONImpl: boolean sourceFollowedByTarget>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", sourceNotificationsEnabled=");

        $z0 = $r0.<twitter4j.internal.json.RelationshipJSONImpl: boolean sourceNotificationsEnabled>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static void <clinit>()
    {
        <twitter4j.internal.json.RelationshipJSONImpl: long serialVersionUID> = 7725021608907856360L;

        return;
    }
}
