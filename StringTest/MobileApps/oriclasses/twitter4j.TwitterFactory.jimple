public final class twitter4j.TwitterFactory extends java.lang.Object implements java.io.Serializable
{
    static final twitter4j.auth.Authorization DEFAULT_AUTHORIZATION;
    private static final twitter4j.Twitter SINGLETON;
    private static final java.lang.reflect.Constructor TWITTER_CONSTRUCTOR;
    private static final long serialVersionUID;
    private final twitter4j.conf.Configuration conf;

    static void <clinit>()
    {
        java.lang.String $r0;
        java.lang.NoSuchMethodException $r1;
        twitter4j.conf.Configuration $r2;
        twitter4j.auth.Authorization $r3;
        boolean $z0;
        java.lang.Class $r4;
        java.lang.Class[] $r5;
        java.lang.reflect.Constructor $r6;
        java.lang.Object[] $r7;
        java.lang.Object $r8;
        twitter4j.Twitter $r9;
        java.lang.AssertionError $r10;
        java.lang.ClassNotFoundException $r11, $r15;
        java.lang.InstantiationException $r12;
        java.lang.IllegalAccessException $r13;
        java.lang.reflect.InvocationTargetException $r14;

        <twitter4j.TwitterFactory: long serialVersionUID> = 5193900138477709155L;

        $r2 = staticinvoke <twitter4j.conf.ConfigurationContext: twitter4j.conf.Configuration getInstance()>();

        $r3 = staticinvoke <twitter4j.auth.AuthorizationFactory: twitter4j.auth.Authorization getInstance(twitter4j.conf.Configuration)>($r2);

        <twitter4j.TwitterFactory: twitter4j.auth.Authorization DEFAULT_AUTHORIZATION> = $r3;

        $r0 = null;

        $r2 = staticinvoke <twitter4j.conf.ConfigurationContext: twitter4j.conf.Configuration getInstance()>();

        $z0 = interfaceinvoke $r2.<twitter4j.conf.Configuration: boolean isGAE()>();

        if $z0 == 0 goto label03;

     label01:
        staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("twitter4j.AppEngineTwitterImpl");

     label02:
        $r0 = "twitter4j.AppEngineTwitterImpl";

     label03:
        if $r0 != null goto label04;

        $r0 = "twitter4j.TwitterImpl";

     label04:
        $r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r0);

     label05:
        $r5 = newarray (java.lang.Class)[2];

        $r5[0] = class "twitter4j/conf/Configuration";

     label06:
        $r5[1] = class "twitter4j/auth/Authorization";

        $r6 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r5);

     label07:
        <twitter4j.TwitterFactory: java.lang.reflect.Constructor TWITTER_CONSTRUCTOR> = $r6;

        $r6 = <twitter4j.TwitterFactory: java.lang.reflect.Constructor TWITTER_CONSTRUCTOR>;

        $r7 = newarray (java.lang.Object)[2];

     label08:
        $r2 = staticinvoke <twitter4j.conf.ConfigurationContext: twitter4j.conf.Configuration getInstance()>();

     label09:
        $r7[0] = $r2;

        $r3 = <twitter4j.TwitterFactory: twitter4j.auth.Authorization DEFAULT_AUTHORIZATION>;

     label10:
        $r7[1] = $r3;

        $r8 = virtualinvoke $r6.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r7);

     label11:
        $r9 = (twitter4j.Twitter) $r8;

        <twitter4j.TwitterFactory: twitter4j.Twitter SINGLETON> = $r9;

        return;

     label12:
        $r1 := @caughtexception;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>(java.lang.Object)>($r1);

        throw $r10;

     label13:
        $r11 := @caughtexception;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>(java.lang.Object)>($r11);

        throw $r10;

     label14:
        $r12 := @caughtexception;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>(java.lang.Object)>($r12);

        throw $r10;

     label15:
        $r13 := @caughtexception;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>(java.lang.Object)>($r13);

        throw $r10;

     label16:
        $r14 := @caughtexception;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>(java.lang.Object)>($r14);

        throw $r10;

     label17:
        $r15 := @caughtexception;

        goto label03;

        return;

        catch java.lang.ClassNotFoundException from label01 to label02 with label17;
        catch java.lang.NoSuchMethodException from label04 to label05 with label12;
        catch java.lang.NoSuchMethodException from label06 to label07 with label12;
        catch java.lang.ClassNotFoundException from label04 to label05 with label13;
        catch java.lang.ClassNotFoundException from label06 to label07 with label13;
        catch java.lang.InstantiationException from label08 to label09 with label14;
        catch java.lang.InstantiationException from label10 to label11 with label14;
        catch java.lang.IllegalAccessException from label08 to label09 with label15;
        catch java.lang.IllegalAccessException from label10 to label11 with label15;
        catch java.lang.reflect.InvocationTargetException from label08 to label09 with label16;
        catch java.lang.reflect.InvocationTargetException from label10 to label11 with label16;
    }

    public void <init>()
    {
        twitter4j.TwitterFactory $r0;
        twitter4j.conf.Configuration $r1;

        $r0 := @this: twitter4j.TwitterFactory;

        $r1 = staticinvoke <twitter4j.conf.ConfigurationContext: twitter4j.conf.Configuration getInstance()>();

        specialinvoke $r0.<twitter4j.TwitterFactory: void <init>(twitter4j.conf.Configuration)>($r1);

        return;
    }

    public void <init>(java.lang.String)
    {
        twitter4j.TwitterFactory $r0;
        java.lang.String $r1;
        twitter4j.conf.Configuration $r2;

        $r0 := @this: twitter4j.TwitterFactory;

        $r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <twitter4j.conf.ConfigurationContext: twitter4j.conf.Configuration getInstance(java.lang.String)>($r1);

        specialinvoke $r0.<twitter4j.TwitterFactory: void <init>(twitter4j.conf.Configuration)>($r2);

        return;
    }

    public void <init>(twitter4j.conf.Configuration)
    {
        twitter4j.TwitterFactory $r0;
        twitter4j.conf.Configuration $r1;
        java.lang.NullPointerException $r2;

        $r0 := @this: twitter4j.TwitterFactory;

        $r1 := @parameter0: twitter4j.conf.Configuration;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        if $r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("configuration cannot be null");

        throw $r2;

     label1:
        $r0.<twitter4j.TwitterFactory: twitter4j.conf.Configuration conf> = $r1;

        return;
    }

    public static twitter4j.Twitter getSingleton()
    {
        twitter4j.Twitter r0;

        r0 = <twitter4j.TwitterFactory: twitter4j.Twitter SINGLETON>;

        return r0;
    }

    public twitter4j.Twitter getInstance()
    {
        twitter4j.TwitterFactory $r0;
        twitter4j.conf.Configuration $r1;
        twitter4j.auth.Authorization $r2;
        twitter4j.Twitter $r3;

        $r0 := @this: twitter4j.TwitterFactory;

        $r1 = $r0.<twitter4j.TwitterFactory: twitter4j.conf.Configuration conf>;

        $r2 = staticinvoke <twitter4j.auth.AuthorizationFactory: twitter4j.auth.Authorization getInstance(twitter4j.conf.Configuration)>($r1);

        $r3 = virtualinvoke $r0.<twitter4j.TwitterFactory: twitter4j.Twitter getInstance(twitter4j.auth.Authorization)>($r2);

        return $r3;
    }

    public twitter4j.Twitter getInstance(twitter4j.auth.AccessToken)
    {
        twitter4j.TwitterFactory $r0;
        twitter4j.auth.AccessToken $r1;
        twitter4j.auth.OAuthAuthorization $r2;
        twitter4j.conf.Configuration $r3;
        java.lang.String $r4, $r5;
        java.lang.IllegalStateException $r6;
        twitter4j.Twitter $r7;

        $r0 := @this: twitter4j.TwitterFactory;

        $r1 := @parameter0: twitter4j.auth.AccessToken;

        $r3 = $r0.<twitter4j.TwitterFactory: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getOAuthConsumerKey()>();

        $r3 = $r0.<twitter4j.TwitterFactory: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getOAuthConsumerSecret()>();

        if $r4 != null goto label1;

        if $r5 != null goto label1;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Consumer key and Consumer secret not supplied.");

        throw $r6;

     label1:
        $r2 = new twitter4j.auth.OAuthAuthorization;

        $r3 = $r0.<twitter4j.TwitterFactory: twitter4j.conf.Configuration conf>;

        specialinvoke $r2.<twitter4j.auth.OAuthAuthorization: void <init>(twitter4j.conf.Configuration)>($r3);

        virtualinvoke $r2.<twitter4j.auth.OAuthAuthorization: void setOAuthAccessToken(twitter4j.auth.AccessToken)>($r1);

        $r7 = virtualinvoke $r0.<twitter4j.TwitterFactory: twitter4j.Twitter getInstance(twitter4j.auth.Authorization)>($r2);

        return $r7;
    }

    public twitter4j.Twitter getInstance(twitter4j.auth.Authorization)
    {
        twitter4j.TwitterFactory $r0;
        twitter4j.auth.Authorization $r1;
        java.lang.InstantiationException $r2;
        java.lang.reflect.Constructor $r3;
        twitter4j.conf.Configuration $r4;
        java.lang.Object $r5;
        java.lang.Object[] $r6;
        twitter4j.Twitter $r7;
        java.lang.AssertionError $r8;
        java.lang.IllegalAccessException $r9;
        java.lang.reflect.InvocationTargetException $r10;

        $r0 := @this: twitter4j.TwitterFactory;

        $r1 := @parameter0: twitter4j.auth.Authorization;

        $r3 = <twitter4j.TwitterFactory: java.lang.reflect.Constructor TWITTER_CONSTRUCTOR>;

        $r6 = newarray (java.lang.Object)[2];

        $r4 = $r0.<twitter4j.TwitterFactory: twitter4j.conf.Configuration conf>;

        $r6[0] = $r4;

        $r6[1] = $r1;

     label1:
        $r5 = virtualinvoke $r3.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r6);

     label2:
        $r7 = (twitter4j.Twitter) $r5;

        return $r7;

     label3:
        $r2 := @caughtexception;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>(java.lang.Object)>($r2);

        throw $r8;

     label4:
        $r9 := @caughtexception;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>(java.lang.Object)>($r9);

        throw $r8;

     label5:
        $r10 := @caughtexception;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>(java.lang.Object)>($r10);

        throw $r8;

        catch java.lang.InstantiationException from label1 to label2 with label3;
        catch java.lang.IllegalAccessException from label1 to label2 with label4;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label5;
    }
}
