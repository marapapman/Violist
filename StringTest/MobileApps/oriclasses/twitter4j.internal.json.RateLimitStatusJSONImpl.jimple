final class twitter4j.internal.json.RateLimitStatusJSONImpl extends java.lang.Object implements twitter4j.RateLimitStatus, java.io.Serializable
{
    private static final long serialVersionUID;
    private int limit;
    private int remaining;
    private int resetTimeInSeconds;
    private int secondsUntilReset;

    private void <init>(int, int, int)
    {
        twitter4j.internal.json.RateLimitStatusJSONImpl $r0;
        int $i0, $i1, $i2;
        long $l3, $l4;

        $r0 := @this: twitter4j.internal.json.RateLimitStatusJSONImpl;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<twitter4j.internal.json.RateLimitStatusJSONImpl: int limit> = $i0;

        $r0.<twitter4j.internal.json.RateLimitStatusJSONImpl: int remaining> = $i1;

        $r0.<twitter4j.internal.json.RateLimitStatusJSONImpl: int resetTimeInSeconds> = $i2;

        $l3 = (long) $i2;

        $l4 = $l3 * 1000L;

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l4 = $l4 - $l3;

        $l4 = $l4 / 1000L;

        $i2 = (int) $l4;

        $r0.<twitter4j.internal.json.RateLimitStatusJSONImpl: int secondsUntilReset> = $i2;

        return;
    }

    void <init>(twitter4j.internal.org.json.JSONObject) throws twitter4j.TwitterException
    {
        twitter4j.internal.json.RateLimitStatusJSONImpl $r0;
        twitter4j.internal.org.json.JSONObject $r1;

        $r0 := @this: twitter4j.internal.json.RateLimitStatusJSONImpl;

        $r1 := @parameter0: twitter4j.internal.org.json.JSONObject;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        virtualinvoke $r0.<twitter4j.internal.json.RateLimitStatusJSONImpl: void init(twitter4j.internal.org.json.JSONObject)>($r1);

        return;
    }

    static twitter4j.RateLimitStatus createFromResponseHeader(twitter4j.internal.http.HttpResponse)
    {
        twitter4j.internal.http.HttpResponse $r0;
        int $i0, $i1, $i2;
        twitter4j.internal.json.RateLimitStatusJSONImpl $r1;
        java.lang.String $r2;
        long $l3;

        $r0 := @parameter0: twitter4j.internal.http.HttpResponse;

        if $r0 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke $r0.<twitter4j.internal.http.HttpResponse: java.lang.String getResponseHeader(java.lang.String)>("X-Rate-Limit-Limit");

        if $r2 == null goto label2;

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        $r2 = virtualinvoke $r0.<twitter4j.internal.http.HttpResponse: java.lang.String getResponseHeader(java.lang.String)>("X-Rate-Limit-Remaining");

        if $r2 == null goto label3;

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        $r2 = virtualinvoke $r0.<twitter4j.internal.http.HttpResponse: java.lang.String getResponseHeader(java.lang.String)>("X-Rate-Limit-Reset");

        if $r2 == null goto label4;

        $l3 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r2);

        $i0 = (int) $l3;

        $r1 = new twitter4j.internal.json.RateLimitStatusJSONImpl;

        specialinvoke $r1.<twitter4j.internal.json.RateLimitStatusJSONImpl: void <init>(int,int,int)>($i1, $i2, $i0);

        return $r1;

     label2:
        return null;

     label3:
        return null;

     label4:
        return null;
    }

    static java.util.Map createRateLimitStatuses(twitter4j.internal.http.HttpResponse, twitter4j.conf.Configuration) throws twitter4j.TwitterException
    {
        twitter4j.internal.http.HttpResponse $r0;
        twitter4j.conf.Configuration $r1;
        twitter4j.internal.org.json.JSONObject $r2;
        java.util.Map $r3;
        boolean $z0;

        $r0 := @parameter0: twitter4j.internal.http.HttpResponse;

        $r1 := @parameter1: twitter4j.conf.Configuration;

        $r2 = virtualinvoke $r0.<twitter4j.internal.http.HttpResponse: twitter4j.internal.org.json.JSONObject asJSONObject()>();

        $r3 = staticinvoke <twitter4j.internal.json.RateLimitStatusJSONImpl: java.util.Map createRateLimitStatuses(twitter4j.internal.org.json.JSONObject)>($r2);

        $z0 = interfaceinvoke $r1.<twitter4j.conf.Configuration: boolean isJSONStoreEnabled()>();

        if $z0 == 0 goto label1;

        staticinvoke <twitter4j.internal.json.DataObjectFactoryUtil: void clearThreadLocalMap()>();

        staticinvoke <twitter4j.internal.json.DataObjectFactoryUtil: java.lang.Object registerJSONObject(java.lang.Object,java.lang.Object)>($r3, $r2);

        return $r3;

     label1:
        return $r3;
    }

    static java.util.Map createRateLimitStatuses(twitter4j.internal.org.json.JSONObject) throws twitter4j.TwitterException
    {
        twitter4j.internal.org.json.JSONObject $r0, $r7, $r9;
        twitter4j.internal.org.json.JSONException $r1;
        java.util.HashMap $r2;
        twitter4j.internal.json.RateLimitStatusJSONImpl $r3;
        java.util.Iterator $r4, $r8;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.String $r6;
        twitter4j.TwitterException $r10;
        java.util.Map $r11;

        $r0 := @parameter0: twitter4j.internal.org.json.JSONObject;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

     label1:
        $r0 = virtualinvoke $r0.<twitter4j.internal.org.json.JSONObject: twitter4j.internal.org.json.JSONObject getJSONObject(java.lang.String)>("resources");

        $r4 = virtualinvoke $r0.<twitter4j.internal.org.json.JSONObject: java.util.Iterator keys()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.lang.String) $r5;

        $r7 = virtualinvoke $r0.<twitter4j.internal.org.json.JSONObject: twitter4j.internal.org.json.JSONObject getJSONObject(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<twitter4j.internal.org.json.JSONObject: java.util.Iterator keys()>();

     label3:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.lang.String) $r5;

        $r9 = virtualinvoke $r7.<twitter4j.internal.org.json.JSONObject: twitter4j.internal.org.json.JSONObject getJSONObject(java.lang.String)>($r6);

        $r3 = new twitter4j.internal.json.RateLimitStatusJSONImpl;

        specialinvoke $r3.<twitter4j.internal.json.RateLimitStatusJSONImpl: void <init>(twitter4j.internal.org.json.JSONObject)>($r9);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r3);

     label4:
        goto label3;

     label5:
        $r1 := @caughtexception;

        $r10 = new twitter4j.TwitterException;

        specialinvoke $r10.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r1);

        throw $r10;

     label6:
        $r11 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r2);

     label7:
        return $r11;

        catch twitter4j.internal.org.json.JSONException from label1 to label4 with label5;
        catch twitter4j.internal.org.json.JSONException from label6 to label7 with label5;
    }

    public boolean equals(java.lang.Object)
    {
        twitter4j.internal.json.RateLimitStatusJSONImpl $r0, $r4;
        java.lang.Object $r1;
        java.lang.Class $r2, $r3;
        int $i0, $i1;

        $r0 := @this: twitter4j.internal.json.RateLimitStatusJSONImpl;

        $r1 := @parameter0: java.lang.Object;

        if $r0 != $r1 goto label1;

        return 1;

     label1:
        if $r1 == null goto label2;

        $r2 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label3;

     label2:
        return 0;

     label3:
        $r4 = (twitter4j.internal.json.RateLimitStatusJSONImpl) $r1;

        $i0 = $r0.<twitter4j.internal.json.RateLimitStatusJSONImpl: int limit>;

        $i1 = $r4.<twitter4j.internal.json.RateLimitStatusJSONImpl: int limit>;

        if $i0 == $i1 goto label4;

        return 0;

     label4:
        $i1 = $r0.<twitter4j.internal.json.RateLimitStatusJSONImpl: int remaining>;

        $i0 = $r4.<twitter4j.internal.json.RateLimitStatusJSONImpl: int remaining>;

        if $i1 == $i0 goto label5;

        return 0;

     label5:
        $i1 = $r0.<twitter4j.internal.json.RateLimitStatusJSONImpl: int resetTimeInSeconds>;

        $i0 = $r4.<twitter4j.internal.json.RateLimitStatusJSONImpl: int resetTimeInSeconds>;

        if $i1 == $i0 goto label6;

        return 0;

     label6:
        $i1 = $r0.<twitter4j.internal.json.RateLimitStatusJSONImpl: int secondsUntilReset>;

        $i0 = $r4.<twitter4j.internal.json.RateLimitStatusJSONImpl: int secondsUntilReset>;

        if $i1 == $i0 goto label7;

        return 0;

     label7:
        return 1;
    }

    public int getLimit()
    {
        twitter4j.internal.json.RateLimitStatusJSONImpl $r0;
        int i0;

        $r0 := @this: twitter4j.internal.json.RateLimitStatusJSONImpl;

        i0 = $r0.<twitter4j.internal.json.RateLimitStatusJSONImpl: int limit>;

        return i0;
    }

    public int getRemaining()
    {
        twitter4j.internal.json.RateLimitStatusJSONImpl $r0;
        int i0;

        $r0 := @this: twitter4j.internal.json.RateLimitStatusJSONImpl;

        i0 = $r0.<twitter4j.internal.json.RateLimitStatusJSONImpl: int remaining>;

        return i0;
    }

    public int getRemainingHits()
    {
        twitter4j.internal.json.RateLimitStatusJSONImpl $r0;
        int $i0;

        $r0 := @this: twitter4j.internal.json.RateLimitStatusJSONImpl;

        $i0 = virtualinvoke $r0.<twitter4j.internal.json.RateLimitStatusJSONImpl: int getRemaining()>();

        return $i0;
    }

    public int getResetTimeInSeconds()
    {
        twitter4j.internal.json.RateLimitStatusJSONImpl $r0;
        int i0;

        $r0 := @this: twitter4j.internal.json.RateLimitStatusJSONImpl;

        i0 = $r0.<twitter4j.internal.json.RateLimitStatusJSONImpl: int resetTimeInSeconds>;

        return i0;
    }

    public int getSecondsUntilReset()
    {
        twitter4j.internal.json.RateLimitStatusJSONImpl $r0;
        int i0;

        $r0 := @this: twitter4j.internal.json.RateLimitStatusJSONImpl;

        i0 = $r0.<twitter4j.internal.json.RateLimitStatusJSONImpl: int secondsUntilReset>;

        return i0;
    }

    public int hashCode()
    {
        twitter4j.internal.json.RateLimitStatusJSONImpl $r0;
        int $i0, $i1;

        $r0 := @this: twitter4j.internal.json.RateLimitStatusJSONImpl;

        $i0 = $r0.<twitter4j.internal.json.RateLimitStatusJSONImpl: int remaining>;

        $i0 = $i0 * 31;

        $i1 = $r0.<twitter4j.internal.json.RateLimitStatusJSONImpl: int limit>;

        $i1 = $i0 + $i1;

        $i1 = $i1 * 31;

        $i0 = $r0.<twitter4j.internal.json.RateLimitStatusJSONImpl: int resetTimeInSeconds>;

        $i1 = $i1 + $i0;

        $i1 = $i1 * 31;

        $i0 = $r0.<twitter4j.internal.json.RateLimitStatusJSONImpl: int secondsUntilReset>;

        $i1 = $i1 + $i0;

        return $i1;
    }

    void init(twitter4j.internal.org.json.JSONObject) throws twitter4j.TwitterException
    {
        twitter4j.internal.json.RateLimitStatusJSONImpl $r0;
        twitter4j.internal.org.json.JSONObject $r1;
        int $i0;
        long $l1, $l2;

        $r0 := @this: twitter4j.internal.json.RateLimitStatusJSONImpl;

        $r1 := @parameter0: twitter4j.internal.org.json.JSONObject;

        $i0 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: int getInt(java.lang.String,twitter4j.internal.org.json.JSONObject)>("limit", $r1);

        $r0.<twitter4j.internal.json.RateLimitStatusJSONImpl: int limit> = $i0;

        $i0 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: int getInt(java.lang.String,twitter4j.internal.org.json.JSONObject)>("remaining", $r1);

        $r0.<twitter4j.internal.json.RateLimitStatusJSONImpl: int remaining> = $i0;

        $i0 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: int getInt(java.lang.String,twitter4j.internal.org.json.JSONObject)>("reset", $r1);

        $r0.<twitter4j.internal.json.RateLimitStatusJSONImpl: int resetTimeInSeconds> = $i0;

        $i0 = $r0.<twitter4j.internal.json.RateLimitStatusJSONImpl: int resetTimeInSeconds>;

        $l1 = (long) $i0;

        $l1 = $l1 * 1000L;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l2 = $l1 - $l2;

        $l2 = $l2 / 1000L;

        $i0 = (int) $l2;

        $r0.<twitter4j.internal.json.RateLimitStatusJSONImpl: int secondsUntilReset> = $i0;

        return;
    }

    public java.lang.String toString()
    {
        twitter4j.internal.json.RateLimitStatusJSONImpl $r0;
        java.lang.StringBuilder $r1;
        int $i0;
        java.lang.String $r2;

        $r0 := @this: twitter4j.internal.json.RateLimitStatusJSONImpl;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RateLimitStatusJSONImpl{remaining=");

        $i0 = $r0.<twitter4j.internal.json.RateLimitStatusJSONImpl: int remaining>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", limit=");

        $i0 = $r0.<twitter4j.internal.json.RateLimitStatusJSONImpl: int limit>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", resetTimeInSeconds=");

        $i0 = $r0.<twitter4j.internal.json.RateLimitStatusJSONImpl: int resetTimeInSeconds>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", secondsUntilReset=");

        $i0 = $r0.<twitter4j.internal.json.RateLimitStatusJSONImpl: int secondsUntilReset>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static void <clinit>()
    {
        <twitter4j.internal.json.RateLimitStatusJSONImpl: long serialVersionUID> = 1625565652687304084L;

        return;
    }
}
