public class twitter4j.internal.org.json.JSONTokener extends java.lang.Object
{
    private int character;
    private boolean eof;
    private int index;
    private int line;
    private char previous;
    private java.io.Reader reader;
    private boolean usePrevious;

    public void <init>(java.io.InputStream) throws twitter4j.internal.org.json.JSONException
    {
        twitter4j.internal.org.json.JSONTokener $r0;
        java.io.InputStream $r1;
        java.io.InputStreamReader $r2;

        $r0 := @this: twitter4j.internal.org.json.JSONTokener;

        $r1 := @parameter0: java.io.InputStream;

        $r2 = new java.io.InputStreamReader;

        specialinvoke $r2.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r1);

        specialinvoke $r0.<twitter4j.internal.org.json.JSONTokener: void <init>(java.io.Reader)>($r2);

        return;
    }

    public void <init>(java.io.Reader)
    {
        twitter4j.internal.org.json.JSONTokener $r0;
        java.io.Reader $r1;
        boolean $z0;
        java.io.BufferedReader $r2;

        $r0 := @this: twitter4j.internal.org.json.JSONTokener;

        $r1 := @parameter0: java.io.Reader;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $z0 = virtualinvoke $r1.<java.io.Reader: boolean markSupported()>();

        if $z0 == 0 goto label2;

     label1:
        $r0.<twitter4j.internal.org.json.JSONTokener: java.io.Reader reader> = $r1;

        $r0.<twitter4j.internal.org.json.JSONTokener: boolean eof> = 0;

        $r0.<twitter4j.internal.org.json.JSONTokener: boolean usePrevious> = 0;

        $r0.<twitter4j.internal.org.json.JSONTokener: char previous> = 0;

        $r0.<twitter4j.internal.org.json.JSONTokener: int index> = 0;

        $r0.<twitter4j.internal.org.json.JSONTokener: int character> = 1;

        $r0.<twitter4j.internal.org.json.JSONTokener: int line> = 1;

        return;

     label2:
        $r2 = new java.io.BufferedReader;

        specialinvoke $r2.<java.io.BufferedReader: void <init>(java.io.Reader)>($r1);

        $r1 = $r2;

        goto label1;
    }

    public void <init>(java.lang.String)
    {
        twitter4j.internal.org.json.JSONTokener $r0;
        java.lang.String $r1;
        java.io.StringReader $r2;

        $r0 := @this: twitter4j.internal.org.json.JSONTokener;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.io.StringReader;

        specialinvoke $r2.<java.io.StringReader: void <init>(java.lang.String)>($r1);

        specialinvoke $r0.<twitter4j.internal.org.json.JSONTokener: void <init>(java.io.Reader)>($r2);

        return;
    }

    public void back() throws twitter4j.internal.org.json.JSONException
    {
        twitter4j.internal.org.json.JSONTokener $r0;
        boolean $z0;
        int $i0;
        twitter4j.internal.org.json.JSONException $r1;

        $r0 := @this: twitter4j.internal.org.json.JSONTokener;

        $z0 = $r0.<twitter4j.internal.org.json.JSONTokener: boolean usePrevious>;

        if $z0 != 0 goto label1;

        $i0 = $r0.<twitter4j.internal.org.json.JSONTokener: int index>;

        if $i0 > 0 goto label2;

     label1:
        $r1 = new twitter4j.internal.org.json.JSONException;

        specialinvoke $r1.<twitter4j.internal.org.json.JSONException: void <init>(java.lang.String)>("Stepping back two steps is not supported");

        throw $r1;

     label2:
        $i0 = $r0.<twitter4j.internal.org.json.JSONTokener: int index>;

        $i0 = $i0 + -1;

        $r0.<twitter4j.internal.org.json.JSONTokener: int index> = $i0;

        $i0 = $r0.<twitter4j.internal.org.json.JSONTokener: int character>;

        $i0 = $i0 + -1;

        $r0.<twitter4j.internal.org.json.JSONTokener: int character> = $i0;

        $r0.<twitter4j.internal.org.json.JSONTokener: boolean usePrevious> = 1;

        $r0.<twitter4j.internal.org.json.JSONTokener: boolean eof> = 0;

        return;
    }

    public boolean end()
    {
        twitter4j.internal.org.json.JSONTokener $r0;
        boolean $z0;

        $r0 := @this: twitter4j.internal.org.json.JSONTokener;

        $z0 = $r0.<twitter4j.internal.org.json.JSONTokener: boolean eof>;

        if $z0 == 0 goto label1;

        $z0 = $r0.<twitter4j.internal.org.json.JSONTokener: boolean usePrevious>;

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean more() throws twitter4j.internal.org.json.JSONException
    {
        twitter4j.internal.org.json.JSONTokener $r0;
        boolean $z0;

        $r0 := @this: twitter4j.internal.org.json.JSONTokener;

        virtualinvoke $r0.<twitter4j.internal.org.json.JSONTokener: char next()>();

        $z0 = virtualinvoke $r0.<twitter4j.internal.org.json.JSONTokener: boolean end()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        virtualinvoke $r0.<twitter4j.internal.org.json.JSONTokener: void back()>();

        return 1;
    }

    public char next() throws twitter4j.internal.org.json.JSONException
    {
        twitter4j.internal.org.json.JSONTokener $r0;
        int $i0, $i2;
        java.io.IOException $r1;
        byte $b1;
        boolean $z0;
        char $c3;
        java.io.Reader $r2;
        twitter4j.internal.org.json.JSONException $r3;

        $r0 := @this: twitter4j.internal.org.json.JSONTokener;

        $b1 = 0;

        $z0 = $r0.<twitter4j.internal.org.json.JSONTokener: boolean usePrevious>;

        if $z0 == 0 goto label04;

        $r0.<twitter4j.internal.org.json.JSONTokener: boolean usePrevious> = 0;

        $i0 = $r0.<twitter4j.internal.org.json.JSONTokener: char previous>;

     label01:
        $i2 = $r0.<twitter4j.internal.org.json.JSONTokener: int index>;

        $i2 = $i2 + 1;

        $r0.<twitter4j.internal.org.json.JSONTokener: int index> = $i2;

        $c3 = $r0.<twitter4j.internal.org.json.JSONTokener: char previous>;

        if $c3 != 13 goto label09;

        $i2 = $r0.<twitter4j.internal.org.json.JSONTokener: int line>;

        $i2 = $i2 + 1;

        $r0.<twitter4j.internal.org.json.JSONTokener: int line> = $i2;

        if $i0 != 10 goto label08;

     label02:
        $r0.<twitter4j.internal.org.json.JSONTokener: int character> = $b1;

     label03:
        $c3 = (char) $i0;

        $r0.<twitter4j.internal.org.json.JSONTokener: char previous> = $c3;

        $c3 = $r0.<twitter4j.internal.org.json.JSONTokener: char previous>;

        return $c3;

     label04:
        $r2 = $r0.<twitter4j.internal.org.json.JSONTokener: java.io.Reader reader>;

     label05:
        $i2 = virtualinvoke $r2.<java.io.Reader: int read()>();

     label06:
        $i0 = $i2;

        if $i2 > 0 goto label01;

        $r0.<twitter4j.internal.org.json.JSONTokener: boolean eof> = 1;

        $i0 = 0;

        goto label01;

     label07:
        $r1 := @caughtexception;

        $r3 = new twitter4j.internal.org.json.JSONException;

        specialinvoke $r3.<twitter4j.internal.org.json.JSONException: void <init>(java.lang.Throwable)>($r1);

        throw $r3;

     label08:
        $b1 = 1;

        goto label02;

     label09:
        if $i0 != 10 goto label10;

        $i2 = $r0.<twitter4j.internal.org.json.JSONTokener: int line>;

        $i2 = $i2 + 1;

        $r0.<twitter4j.internal.org.json.JSONTokener: int line> = $i2;

        $r0.<twitter4j.internal.org.json.JSONTokener: int character> = 0;

        goto label03;

     label10:
        $i2 = $r0.<twitter4j.internal.org.json.JSONTokener: int character>;

        $i2 = $i2 + 1;

        $r0.<twitter4j.internal.org.json.JSONTokener: int character> = $i2;

        goto label03;

        catch java.io.IOException from label05 to label06 with label07;
    }

    public char next(char) throws twitter4j.internal.org.json.JSONException
    {
        twitter4j.internal.org.json.JSONTokener $r0;
        char $c0, $c1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        twitter4j.internal.org.json.JSONException $r4;

        $r0 := @this: twitter4j.internal.org.json.JSONTokener;

        $c0 := @parameter0: char;

        $c1 = virtualinvoke $r0.<twitter4j.internal.org.json.JSONTokener: char next()>();

        if $c1 == $c0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected \'");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' and instead saw \'");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = virtualinvoke $r0.<twitter4j.internal.org.json.JSONTokener: twitter4j.internal.org.json.JSONException syntaxError(java.lang.String)>($r3);

        throw $r4;

     label1:
        return $c1;
    }

    public java.lang.String next(int) throws twitter4j.internal.org.json.JSONException
    {
        twitter4j.internal.org.json.JSONTokener $r0;
        int $i0, $i1;
        char[] $r1;
        java.lang.String $r2;
        char $c2;
        boolean $z0;
        twitter4j.internal.org.json.JSONException $r3;

        $r0 := @this: twitter4j.internal.org.json.JSONTokener;

        $i0 := @parameter0: int;

        if $i0 != 0 goto label1;

        return "";

     label1:
        $r1 = newarray (char)[$i0];

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label4;

        $c2 = virtualinvoke $r0.<twitter4j.internal.org.json.JSONTokener: char next()>();

        $r1[$i1] = $c2;

        $z0 = virtualinvoke $r0.<twitter4j.internal.org.json.JSONTokener: boolean end()>();

        if $z0 == 0 goto label3;

        $r3 = virtualinvoke $r0.<twitter4j.internal.org.json.JSONTokener: twitter4j.internal.org.json.JSONException syntaxError(java.lang.String)>("Substring bounds error");

        throw $r3;

     label3:
        $i1 = $i1 + 1;

        goto label2;

     label4:
        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r1);

        return $r2;
    }

    public char nextClean() throws twitter4j.internal.org.json.JSONException
    {
        twitter4j.internal.org.json.JSONTokener $r0;
        char $c0;

        $r0 := @this: twitter4j.internal.org.json.JSONTokener;

     label1:
        $c0 = virtualinvoke $r0.<twitter4j.internal.org.json.JSONTokener: char next()>();

        if $c0 == 0 goto label2;

        if $c0 <= 32 goto label1;

        return $c0;

     label2:
        return $c0;
    }

    public java.lang.String nextString(char) throws twitter4j.internal.org.json.JSONException
    {
        twitter4j.internal.org.json.JSONTokener $r0;
        char $c0, $c1;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        twitter4j.internal.org.json.JSONException $r3;
        int $i2;

        $r0 := @this: twitter4j.internal.org.json.JSONTokener;

        $c0 := @parameter0: char;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

     label01:
        $c1 = virtualinvoke $r0.<twitter4j.internal.org.json.JSONTokener: char next()>();

        lookupswitch($c1)
        {
            case 0: goto label03;
            case 10: goto label03;
            case 13: goto label03;
            case 92: goto label04;
            default: goto label02;
        };

     label02:
        if $c1 != $c0 goto label13;

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label03:
        $r3 = virtualinvoke $r0.<twitter4j.internal.org.json.JSONTokener: twitter4j.internal.org.json.JSONException syntaxError(java.lang.String)>("Unterminated string");

        throw $r3;

     label04:
        $c1 = virtualinvoke $r0.<twitter4j.internal.org.json.JSONTokener: char next()>();

        lookupswitch($c1)
        {
            case 34: goto label12;
            case 39: goto label12;
            case 47: goto label12;
            case 92: goto label12;
            case 98: goto label06;
            case 102: goto label09;
            case 110: goto label08;
            case 114: goto label10;
            case 116: goto label07;
            case 117: goto label11;
            default: goto label05;
        };

     label05:
        $r3 = virtualinvoke $r0.<twitter4j.internal.org.json.JSONTokener: twitter4j.internal.org.json.JSONException syntaxError(java.lang.String)>("Illegal escape.");

        throw $r3;

     label06:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(8);

        goto label01;

     label07:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(9);

        goto label01;

     label08:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        goto label01;

     label09:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(12);

        goto label01;

     label10:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(13);

        goto label01;

     label11:
        $r2 = virtualinvoke $r0.<twitter4j.internal.org.json.JSONTokener: java.lang.String next(int)>(4);

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r2, 16);

        $c1 = (char) $i2;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        goto label01;

     label12:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        goto label01;

     label13:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        goto label01;
    }

    public java.lang.Object nextValue() throws twitter4j.internal.org.json.JSONException
    {
        twitter4j.internal.org.json.JSONTokener $r0;
        char $c0, $c1;
        java.lang.StringBuilder $r1, r5;
        java.lang.String $r2;
        int $i2;
        java.lang.Object $r3;
        boolean $z0;
        twitter4j.internal.org.json.JSONException $r4;
        twitter4j.internal.org.json.JSONObject r6;
        twitter4j.internal.org.json.JSONArray r7;

        $r0 := @this: twitter4j.internal.org.json.JSONTokener;

        $c1 = virtualinvoke $r0.<twitter4j.internal.org.json.JSONTokener: char nextClean()>();

        $c0 = $c1;

        lookupswitch($c1)
        {
            case 34: goto label3;
            case 39: goto label3;
            case 91: goto label5;
            case 123: goto label4;
            default: goto label1;
        };

     label1:
        r5 = new java.lang.StringBuilder;

        $r1 = r5;

        specialinvoke r5.<java.lang.StringBuilder: void <init>()>();

     label2:
        if $c0 < 32 goto label6;

        $r2 = ",:]}/\\\"[{;=#";

        $i2 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>($c0);

        if $i2 >= 0 goto label6;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        $c0 = virtualinvoke $r0.<twitter4j.internal.org.json.JSONTokener: char next()>();

        goto label2;

     label3:
        $r2 = virtualinvoke $r0.<twitter4j.internal.org.json.JSONTokener: java.lang.String nextString(char)>($c1);

        return $r2;

     label4:
        virtualinvoke $r0.<twitter4j.internal.org.json.JSONTokener: void back()>();

        r6 = new twitter4j.internal.org.json.JSONObject;

        specialinvoke r6.<twitter4j.internal.org.json.JSONObject: void <init>(twitter4j.internal.org.json.JSONTokener)>($r0);

        return r6;

     label5:
        virtualinvoke $r0.<twitter4j.internal.org.json.JSONTokener: void back()>();

        r7 = new twitter4j.internal.org.json.JSONArray;

        specialinvoke r7.<twitter4j.internal.org.json.JSONArray: void <init>(twitter4j.internal.org.json.JSONTokener)>($r0);

        return r7;

     label6:
        virtualinvoke $r0.<twitter4j.internal.org.json.JSONTokener: void back()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label7;

        $r4 = virtualinvoke $r0.<twitter4j.internal.org.json.JSONTokener: twitter4j.internal.org.json.JSONException syntaxError(java.lang.String)>("Missing value");

        throw $r4;

     label7:
        $r3 = staticinvoke <twitter4j.internal.org.json.JSONObject: java.lang.Object stringToValue(java.lang.String)>($r2);

        return $r3;
    }

    public twitter4j.internal.org.json.JSONException syntaxError(java.lang.String)
    {
        twitter4j.internal.org.json.JSONTokener $r0;
        java.lang.String $r1;
        twitter4j.internal.org.json.JSONException $r2;
        java.lang.StringBuilder $r3;

        $r0 := @this: twitter4j.internal.org.json.JSONTokener;

        $r1 := @parameter0: java.lang.String;

        $r2 = new twitter4j.internal.org.json.JSONException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r0.<twitter4j.internal.org.json.JSONTokener: java.lang.String toString()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<twitter4j.internal.org.json.JSONException: void <init>(java.lang.String)>($r1);

        return $r2;
    }

    public java.lang.String toString()
    {
        twitter4j.internal.org.json.JSONTokener $r0;
        java.lang.StringBuilder $r1;
        int $i0;
        java.lang.String $r2;

        $r0 := @this: twitter4j.internal.org.json.JSONTokener;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $i0 = $r0.<twitter4j.internal.org.json.JSONTokener: int index>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [character ");

        $i0 = $r0.<twitter4j.internal.org.json.JSONTokener: int character>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" line ");

        $i0 = $r0.<twitter4j.internal.org.json.JSONTokener: int line>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
}
