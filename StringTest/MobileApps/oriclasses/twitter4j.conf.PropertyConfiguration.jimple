public final class twitter4j.conf.PropertyConfiguration extends twitter4j.conf.ConfigurationBase implements java.io.Serializable
{
    public static final java.lang.String ASYNC_DISPATCHER_IMPL;
    public static final java.lang.String ASYNC_NUM_THREADS;
    public static final java.lang.String CLIENT_URL;
    public static final java.lang.String CLIENT_VERSION;
    public static final java.lang.String CONTRIBUTING_TO;
    public static final java.lang.String DEBUG;
    public static final java.lang.String HTTP_CONNECTION_TIMEOUT;
    public static final java.lang.String HTTP_DEFAULT_MAX_PER_ROUTE;
    public static final java.lang.String HTTP_GZIP;
    public static final java.lang.String HTTP_MAX_TOTAL_CONNECTIONS;
    public static final java.lang.String HTTP_PRETTY_DEBUG;
    public static final java.lang.String HTTP_PROXY_HOST;
    public static final java.lang.String HTTP_PROXY_HOST_FALLBACK;
    public static final java.lang.String HTTP_PROXY_PASSWORD;
    public static final java.lang.String HTTP_PROXY_PORT;
    public static final java.lang.String HTTP_PROXY_PORT_FALLBACK;
    public static final java.lang.String HTTP_PROXY_USER;
    public static final java.lang.String HTTP_READ_TIMEOUT;
    public static final java.lang.String HTTP_RETRY_COUNT;
    public static final java.lang.String HTTP_RETRY_INTERVAL_SECS;
    public static final java.lang.String HTTP_STREAMING_READ_TIMEOUT;
    public static final java.lang.String HTTP_USER_AGENT;
    public static final java.lang.String HTTP_USE_SSL;
    public static final java.lang.String INCLUDE_ENTITIES;
    public static final java.lang.String INCLUDE_MY_RETWEET;
    public static final java.lang.String INCLUDE_RTS;
    public static final java.lang.String JSON_STORE_ENABLED;
    public static final java.lang.String LOGGER_FACTORY;
    public static final java.lang.String MBEAN_ENABLED;
    public static final java.lang.String MEDIA_PROVIDER;
    public static final java.lang.String MEDIA_PROVIDER_API_KEY;
    public static final java.lang.String MEDIA_PROVIDER_PARAMETERS;
    public static final java.lang.String OAUTH_ACCESS_TOKEN;
    public static final java.lang.String OAUTH_ACCESS_TOKEN_SECRET;
    public static final java.lang.String OAUTH_ACCESS_TOKEN_URL;
    public static final java.lang.String OAUTH_AUTHENTICATION_URL;
    public static final java.lang.String OAUTH_AUTHORIZATION_URL;
    public static final java.lang.String OAUTH_CONSUMER_KEY;
    public static final java.lang.String OAUTH_CONSUMER_SECRET;
    public static final java.lang.String OAUTH_REQUEST_TOKEN_URL;
    public static final java.lang.String PASSWORD;
    public static final java.lang.String REST_BASE_URL;
    public static final java.lang.String SITE_STREAM_BASE_URL;
    public static final java.lang.String STREAM_BASE_URL;
    public static final java.lang.String STREAM_STALL_WARNINGS_ENABLED;
    public static final java.lang.String STREAM_USER_REPLIES_ALL;
    public static final java.lang.String USER;
    public static final java.lang.String USER_STREAM_BASE_URL;
    private static final long serialVersionUID;

    void <init>()
    {
        twitter4j.conf.PropertyConfiguration $r0;

        $r0 := @this: twitter4j.conf.PropertyConfiguration;

        specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: void <init>(java.lang.String)>("/");

        return;
    }

    public void <init>(java.io.InputStream)
    {
        twitter4j.conf.PropertyConfiguration $r0;
        java.io.InputStream $r1;
        java.util.Properties $r2;

        $r0 := @this: twitter4j.conf.PropertyConfiguration;

        $r1 := @parameter0: java.io.InputStream;

        specialinvoke $r0.<twitter4j.conf.ConfigurationBase: void <init>()>();

        $r2 = new java.util.Properties;

        specialinvoke $r2.<java.util.Properties: void <init>()>();

        specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean loadProperties(java.util.Properties,java.io.InputStream)>($r2, $r1);

        specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: void setFieldsWithTreePath(java.util.Properties,java.lang.String)>($r2, "/");

        return;
    }

    void <init>(java.lang.String)
    {
        twitter4j.conf.PropertyConfiguration $r0;
        java.lang.String $r1, $r8, $r9;
        java.lang.SecurityException $r2, $r10, $r16;
        java.util.Properties $r3;
        java.lang.Object $r4;
        java.util.Map $r5;
        java.util.Set $r6;
        java.util.Iterator $r7;
        boolean $z0;
        java.lang.StringBuilder $r11;
        char $c0;
        java.lang.Class $r12;
        java.io.InputStream $r13;
        java.io.FileInputStream $r14;
        java.io.FileNotFoundException $r15;

        $r0 := @this: twitter4j.conf.PropertyConfiguration;

        $r1 := @parameter0: java.lang.String;

        specialinvoke $r0.<twitter4j.conf.ConfigurationBase: void <init>()>();

     label01:
        $r3 = staticinvoke <java.lang.System: java.util.Properties getProperties()>();

        $r4 = virtualinvoke $r3.<java.util.Properties: java.lang.Object clone()>();

     label02:
        $r3 = (java.util.Properties) $r4;

     label03:
        $r5 = staticinvoke <java.lang.System: java.util.Map getenv()>();

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set keySet()>();

        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label07;

        $r4 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (java.lang.String) $r4;

        $r4 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8);

        $r9 = (java.lang.String) $r4;

        virtualinvoke $r3.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r8, $r9);

     label05:
        goto label04;

     label06:
        $r10 := @caughtexception;

     label07:
        specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: void normalize(java.util.Properties)>($r3);

     label08:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $c0 = <java.io.File: char separatorChar>;

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("twitter4j.properties");

        $r9 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean loadProperties(java.util.Properties,java.lang.String)>($r3, $r9);

        $r12 = class "twitter4j/conf/Configuration";

        $r13 = virtualinvoke $r12.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>("/twitter4j.properties");

        specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean loadProperties(java.util.Properties,java.io.InputStream)>($r3, $r13);

        $r12 = class "twitter4j/conf/Configuration";

        $r13 = virtualinvoke $r12.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>("/WEB-INF/twitter4j.properties");

        specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean loadProperties(java.util.Properties,java.io.InputStream)>($r3, $r13);

        $r14 = new java.io.FileInputStream;

     label09:
        specialinvoke $r14.<java.io.FileInputStream: void <init>(java.lang.String)>("WEB-INF/twitter4j.properties");

        specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean loadProperties(java.util.Properties,java.io.InputStream)>($r3, $r14);

     label10:
        specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: void setFieldsWithTreePath(java.util.Properties,java.lang.String)>($r3, $r1);

        return;

     label11:
        $r2 := @caughtexception;

        $r3 = new java.util.Properties;

        specialinvoke $r3.<java.util.Properties: void <init>()>();

        goto label08;

     label12:
        $r15 := @caughtexception;

        goto label10;

     label13:
        $r16 := @caughtexception;

        goto label10;

        catch java.lang.SecurityException from label01 to label02 with label11;
        catch java.lang.SecurityException from label03 to label05 with label06;
        catch java.lang.SecurityException from label07 to label08 with label11;
        catch java.lang.SecurityException from label09 to label10 with label13;
        catch java.io.FileNotFoundException from label09 to label10 with label12;
    }

    public void <init>(java.util.Properties)
    {
        twitter4j.conf.PropertyConfiguration $r0;
        java.util.Properties $r1;

        $r0 := @this: twitter4j.conf.PropertyConfiguration;

        $r1 := @parameter0: java.util.Properties;

        specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: void <init>(java.util.Properties,java.lang.String)>($r1, "/");

        return;
    }

    public void <init>(java.util.Properties, java.lang.String)
    {
        twitter4j.conf.PropertyConfiguration $r0;
        java.util.Properties $r1;
        java.lang.String $r2;

        $r0 := @this: twitter4j.conf.PropertyConfiguration;

        $r1 := @parameter0: java.util.Properties;

        $r2 := @parameter1: java.lang.String;

        specialinvoke $r0.<twitter4j.conf.ConfigurationBase: void <init>()>();

        specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: void setFieldsWithTreePath(java.util.Properties,java.lang.String)>($r1, $r2);

        return;
    }

    private boolean loadProperties(java.util.Properties, java.io.InputStream)
    {
        twitter4j.conf.PropertyConfiguration $r0;
        java.util.Properties $r1;
        java.io.InputStream $r2;
        java.lang.Exception $r3;

        $r0 := @this: twitter4j.conf.PropertyConfiguration;

        $r1 := @parameter0: java.util.Properties;

        $r2 := @parameter1: java.io.InputStream;

     label1:
        virtualinvoke $r1.<java.util.Properties: void load(java.io.InputStream)>($r2);

        specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: void normalize(java.util.Properties)>($r1);

     label2:
        return 1;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private boolean loadProperties(java.util.Properties, java.lang.String)
    {
        twitter4j.conf.PropertyConfiguration $r0;
        java.util.Properties $r1;
        java.lang.String $r2;
        java.io.File $r3;
        java.io.FileInputStream $r4, $r5;
        java.io.IOException $r6, $r8, $r11;
        boolean $z0;
        java.lang.Exception $r7, $r12;
        java.lang.Throwable $r9;

        $r0 := @this: twitter4j.conf.PropertyConfiguration;

        $r1 := @parameter0: java.util.Properties;

        $r2 := @parameter1: java.lang.String;

        $r4 = null;

     label01:
        $r3 = new java.io.File;

     label02:
        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>($r2);

        $z0 = virtualinvoke $r3.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label09;

        $z0 = virtualinvoke $r3.<java.io.File: boolean isFile()>();

     label03:
        if $z0 == 0 goto label09;

     label04:
        $r5 = new java.io.FileInputStream;

        specialinvoke $r5.<java.io.FileInputStream: void <init>(java.io.File)>($r3);

     label05:
        virtualinvoke $r1.<java.util.Properties: void load(java.io.InputStream)>($r5);

        specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: void normalize(java.util.Properties)>($r1);

     label06:
        if $r5 == null goto label24;

     label07:
        virtualinvoke $r5.<java.io.FileInputStream: void close()>();

     label08:
        return 1;

     label09:
        goto label10;

     label10:
        return 0;

     label11:
        $r7 := @caughtexception;

     label12:
        if $r4 == null goto label10;

     label13:
        virtualinvoke $r4.<java.io.FileInputStream: void close()>();

     label14:
        goto label10;

     label15:
        $r8 := @caughtexception;

        goto label10;

     label16:
        $r9 := @caughtexception;

     label17:
        if $r4 == null goto label19;

     label18:
        virtualinvoke $r4.<java.io.FileInputStream: void close()>();

     label19:
        throw $r9;

     label20:
        $r6 := @caughtexception;

        return 1;

     label21:
        $r11 := @caughtexception;

        goto label19;

     label22:
        $r9 := @caughtexception;

        $r4 = $r5;

        goto label17;

     label23:
        $r12 := @caughtexception;

        $r4 = $r5;

        goto label12;

     label24:
        return 1;

        catch java.lang.Exception from label02 to label03 with label11;
        catch java.lang.Exception from label04 to label05 with label11;
        catch java.lang.Throwable from label01 to label05 with label16;
        catch java.lang.Exception from label05 to label06 with label23;
        catch java.lang.Throwable from label05 to label06 with label22;
        catch java.io.IOException from label07 to label08 with label20;
        catch java.io.IOException from label13 to label14 with label15;
        catch java.io.IOException from label18 to label19 with label21;
    }

    private void normalize(java.util.Properties)
    {
        twitter4j.conf.PropertyConfiguration $r0;
        java.util.Properties $r1;
        java.util.ArrayList $r2;
        java.util.Set $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.String $r6, $r7, $r9;
        int $i0;
        java.lang.StringBuilder $r8;

        $r0 := @this: twitter4j.conf.PropertyConfiguration;

        $r1 := @parameter0: java.util.Properties;

        $r3 = virtualinvoke $r1.<java.util.Properties: java.util.Set keySet()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(10);

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.lang.String) $r5;

        $i0 = virtualinvoke $r6.<java.lang.String: int indexOf(java.lang.String)>("twitter4j.");

        if -1 == $i0 goto label1;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        goto label1;

     label2:
        $r4 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.lang.String) $r5;

        $r7 = virtualinvoke $r1.<java.util.Properties: java.lang.String getProperty(java.lang.String)>($r6);

        $i0 = virtualinvoke $r6.<java.lang.String: int indexOf(java.lang.String)>("twitter4j.");

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $i0 = $i0 + 10;

        $r9 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int)>($i0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r9, $r7);

        goto label3;

     label4:
        return;
    }

    private boolean notNull(java.util.Properties, java.lang.String, java.lang.String)
    {
        twitter4j.conf.PropertyConfiguration $r0;
        java.util.Properties $r1;
        java.lang.String $r2, $r3;
        java.lang.StringBuilder $r4;

        $r0 := @this: twitter4j.conf.PropertyConfiguration;

        $r1 := @parameter0: java.util.Properties;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = virtualinvoke $r1.<java.util.Properties: java.lang.String getProperty(java.lang.String)>($r3);

        if $r3 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    private void setFieldsWithPrefix(java.util.Properties, java.lang.String)
    {
        twitter4j.conf.PropertyConfiguration $r0;
        java.util.Properties $r1;
        java.lang.String $r2, $r3;
        int $i0, $i1;
        boolean $z0;
        long $l2;
        java.lang.String[] $r4, $r5;

        $r0 := @this: twitter4j.conf.PropertyConfiguration;

        $r1 := @parameter0: java.util.Properties;

        $r2 := @parameter1: java.lang.String;

        $z0 = specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "debug");

        if $z0 == 0 goto label01;

        $z0 = virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean getBoolean(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "debug");

        virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: void setDebug(boolean)>($z0);

     label01:
        $z0 = specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "user");

        if $z0 == 0 goto label02;

        $r3 = virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: java.lang.String getString(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "user");

        virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: void setUser(java.lang.String)>($r3);

     label02:
        $z0 = specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "password");

        if $z0 == 0 goto label03;

        $r3 = virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: java.lang.String getString(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "password");

        virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: void setPassword(java.lang.String)>($r3);

     label03:
        $z0 = specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.useSSL");

        if $z0 == 0 goto label04;

        $z0 = virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean getBoolean(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.useSSL");

        virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: void setUseSSL(boolean)>($z0);

     label04:
        $z0 = specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.prettyDebug");

        if $z0 == 0 goto label05;

        $z0 = virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean getBoolean(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.prettyDebug");

        virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: void setPrettyDebugEnabled(boolean)>($z0);

     label05:
        $z0 = specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.gzip");

        if $z0 == 0 goto label06;

        $z0 = virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean getBoolean(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.gzip");

        virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: void setGZIPEnabled(boolean)>($z0);

     label06:
        $z0 = specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.proxyHost");

        if $z0 == 0 goto label47;

        $r3 = virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: java.lang.String getString(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.proxyHost");

        virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: void setHttpProxyHost(java.lang.String)>($r3);

     label07:
        $z0 = specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.proxyUser");

        if $z0 == 0 goto label08;

        $r3 = virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: java.lang.String getString(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.proxyUser");

        virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: void setHttpProxyUser(java.lang.String)>($r3);

     label08:
        $z0 = specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.proxyPassword");

        if $z0 == 0 goto label09;

        $r3 = virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: java.lang.String getString(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.proxyPassword");

        virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: void setHttpProxyPassword(java.lang.String)>($r3);

     label09:
        $z0 = specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.proxyPort");

        if $z0 == 0 goto label48;

        $i1 = virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: int getIntProperty(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.proxyPort");

        virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: void setHttpProxyPort(int)>($i1);

     label10:
        $z0 = specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.connectionTimeout");

        if $z0 == 0 goto label11;

        $i1 = virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: int getIntProperty(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.connectionTimeout");

        virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: void setHttpConnectionTimeout(int)>($i1);

     label11:
        $z0 = specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.readTimeout");

        if $z0 == 0 goto label12;

        $i1 = virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: int getIntProperty(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.readTimeout");

        virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: void setHttpReadTimeout(int)>($i1);

     label12:
        $z0 = specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.streamingReadTimeout");

        if $z0 == 0 goto label13;

        $i1 = virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: int getIntProperty(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.streamingReadTimeout");

        virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: void setHttpStreamingReadTimeout(int)>($i1);

     label13:
        $z0 = specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.retryCount");

        if $z0 == 0 goto label14;

        $i1 = virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: int getIntProperty(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.retryCount");

        virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: void setHttpRetryCount(int)>($i1);

     label14:
        $z0 = specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.retryIntervalSecs");

        if $z0 == 0 goto label15;

        $i1 = virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: int getIntProperty(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.retryIntervalSecs");

        virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: void setHttpRetryIntervalSeconds(int)>($i1);

     label15:
        $z0 = specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.maxTotalConnections");

        if $z0 == 0 goto label16;

        $i1 = virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: int getIntProperty(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.maxTotalConnections");

        virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: void setHttpMaxTotalConnections(int)>($i1);

     label16:
        $z0 = specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.defaultMaxPerRoute");

        if $z0 == 0 goto label17;

        $i1 = virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: int getIntProperty(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.defaultMaxPerRoute");

        virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: void setHttpDefaultMaxPerRoute(int)>($i1);

     label17:
        $z0 = specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "oauth.consumerKey");

        if $z0 == 0 goto label18;

        $r3 = virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: java.lang.String getString(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "oauth.consumerKey");

        virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: void setOAuthConsumerKey(java.lang.String)>($r3);

     label18:
        $z0 = specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "oauth.consumerSecret");

        if $z0 == 0 goto label19;

        $r3 = virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: java.lang.String getString(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "oauth.consumerSecret");

        virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: void setOAuthConsumerSecret(java.lang.String)>($r3);

     label19:
        $z0 = specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "oauth.accessToken");

        if $z0 == 0 goto label20;

        $r3 = virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: java.lang.String getString(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "oauth.accessToken");

        virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: void setOAuthAccessToken(java.lang.String)>($r3);

     label20:
        $z0 = specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "oauth.accessTokenSecret");

        if $z0 == 0 goto label21;

        $r3 = virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: java.lang.String getString(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "oauth.accessTokenSecret");

        virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: void setOAuthAccessTokenSecret(java.lang.String)>($r3);

     label21:
        $z0 = specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "async.numThreads");

        if $z0 == 0 goto label22;

        $i1 = virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: int getIntProperty(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "async.numThreads");

        virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: void setAsyncNumThreads(int)>($i1);

     label22:
        $z0 = specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "contributingTo");

        if $z0 == 0 goto label23;

        $l2 = virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: long getLongProperty(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "contributingTo");

        virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: void setContributingTo(long)>($l2);

     label23:
        $z0 = specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "async.dispatcherImpl");

        if $z0 == 0 goto label24;

        $r3 = virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: java.lang.String getString(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "async.dispatcherImpl");

        virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: void setDispatcherImpl(java.lang.String)>($r3);

     label24:
        $z0 = specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "clientVersion");

        if $z0 == 0 goto label25;

        $r3 = virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: java.lang.String getString(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "clientVersion");

        virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: void setClientVersion(java.lang.String)>($r3);

     label25:
        $z0 = specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "clientURL");

        if $z0 == 0 goto label26;

        $r3 = virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: java.lang.String getString(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "clientURL");

        virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: void setClientURL(java.lang.String)>($r3);

     label26:
        $z0 = specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.userAgent");

        if $z0 == 0 goto label27;

        $r3 = virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: java.lang.String getString(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.userAgent");

        virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: void setUserAgent(java.lang.String)>($r3);

     label27:
        $z0 = specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "oauth.requestTokenURL");

        if $z0 == 0 goto label28;

        $r3 = virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: java.lang.String getString(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "oauth.requestTokenURL");

        virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: void setOAuthRequestTokenURL(java.lang.String)>($r3);

     label28:
        $z0 = specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "oauth.authorizationURL");

        if $z0 == 0 goto label29;

        $r3 = virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: java.lang.String getString(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "oauth.authorizationURL");

        virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: void setOAuthAuthorizationURL(java.lang.String)>($r3);

     label29:
        $z0 = specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "oauth.accessTokenURL");

        if $z0 == 0 goto label30;

        $r3 = virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: java.lang.String getString(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "oauth.accessTokenURL");

        virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: void setOAuthAccessTokenURL(java.lang.String)>($r3);

     label30:
        $z0 = specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "oauth.authenticationURL");

        if $z0 == 0 goto label31;

        $r3 = virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: java.lang.String getString(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "oauth.authenticationURL");

        virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: void setOAuthAuthenticationURL(java.lang.String)>($r3);

     label31:
        $z0 = specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "restBaseURL");

        if $z0 == 0 goto label32;

        $r3 = virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: java.lang.String getString(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "restBaseURL");

        virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: void setRestBaseURL(java.lang.String)>($r3);

     label32:
        $z0 = specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "streamBaseURL");

        if $z0 == 0 goto label33;

        $r3 = virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: java.lang.String getString(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "streamBaseURL");

        virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: void setStreamBaseURL(java.lang.String)>($r3);

     label33:
        $z0 = specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "userStreamBaseURL");

        if $z0 == 0 goto label34;

        $r3 = virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: java.lang.String getString(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "userStreamBaseURL");

        virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: void setUserStreamBaseURL(java.lang.String)>($r3);

     label34:
        $z0 = specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "siteStreamBaseURL");

        if $z0 == 0 goto label35;

        $r3 = virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: java.lang.String getString(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "siteStreamBaseURL");

        virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: void setSiteStreamBaseURL(java.lang.String)>($r3);

     label35:
        $z0 = specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "includeRTs");

        if $z0 == 0 goto label36;

        $z0 = virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean getBoolean(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "includeRTs");

        virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: void setIncludeRTsEnbled(boolean)>($z0);

     label36:
        $z0 = specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "includeEntities");

        if $z0 == 0 goto label37;

        $z0 = virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean getBoolean(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "includeEntities");

        virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: void setIncludeEntitiesEnbled(boolean)>($z0);

     label37:
        $z0 = specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "includeMyRetweet");

        if $z0 == 0 goto label38;

        $z0 = virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean getBoolean(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "includeMyRetweet");

        virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: void setIncludeMyRetweetEnabled(boolean)>($z0);

     label38:
        $z0 = specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "loggerFactory");

        if $z0 == 0 goto label39;

        $r3 = virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: java.lang.String getString(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "loggerFactory");

        virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: void setLoggerFactory(java.lang.String)>($r3);

     label39:
        $z0 = specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "jsonStoreEnabled");

        if $z0 == 0 goto label40;

        $z0 = virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean getBoolean(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "jsonStoreEnabled");

        virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: void setJSONStoreEnabled(boolean)>($z0);

     label40:
        $z0 = specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "mbeanEnabled");

        if $z0 == 0 goto label41;

        $z0 = virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean getBoolean(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "mbeanEnabled");

        virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: void setMBeanEnabled(boolean)>($z0);

     label41:
        $z0 = specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "stream.user.repliesAll");

        if $z0 == 0 goto label42;

        $z0 = virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean getBoolean(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "stream.user.repliesAll");

        virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: void setUserStreamRepliesAllEnabled(boolean)>($z0);

     label42:
        $z0 = specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "stream.enableStallWarnings");

        if $z0 == 0 goto label43;

        $z0 = virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean getBoolean(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "stream.enableStallWarnings");

        virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: void setStallWarningsEnabled(boolean)>($z0);

     label43:
        $z0 = specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "media.provider");

        if $z0 == 0 goto label44;

        $r3 = virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: java.lang.String getString(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "media.provider");

        virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: void setMediaProvider(java.lang.String)>($r3);

     label44:
        $z0 = specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "media.providerAPIKey");

        if $z0 == 0 goto label45;

        $r3 = virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: java.lang.String getString(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "media.providerAPIKey");

        virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: void setMediaProviderAPIKey(java.lang.String)>($r3);

     label45:
        $z0 = specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "media.providerParameters");

        if $z0 == 0 goto label50;

        $r3 = virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: java.lang.String getString(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "media.providerParameters");

        $r4 = staticinvoke <twitter4j.internal.util.z_T4JInternalStringUtil: java.lang.String[] split(java.lang.String,java.lang.String)>($r3, "&");

        $r1 = new java.util.Properties;

        specialinvoke $r1.<java.util.Properties: void <init>()>();

        $i1 = lengthof $r4;

        $i0 = 0;

     label46:
        if $i0 >= $i1 goto label49;

        $r2 = $r4[$i0];

        $r5 = staticinvoke <twitter4j.internal.util.z_T4JInternalStringUtil: java.lang.String[] split(java.lang.String,java.lang.String)>($r2, "=");

        $r3 = $r5[0];

        $r2 = $r5[1];

        virtualinvoke $r1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r3, $r2);

        $i0 = $i0 + 1;

        goto label46;

     label47:
        $z0 = specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.proxyHost");

        if $z0 == 0 goto label07;

        $r3 = virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: java.lang.String getString(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.proxyHost");

        virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: void setHttpProxyHost(java.lang.String)>($r3);

        goto label07;

     label48:
        $z0 = specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.proxyPort");

        if $z0 == 0 goto label10;

        $i1 = virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: int getIntProperty(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.proxyPort");

        virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: void setHttpProxyPort(int)>($i1);

        goto label10;

     label49:
        virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: void setMediaProviderParameters(java.util.Properties)>($r1);

     label50:
        virtualinvoke $r0.<twitter4j.conf.PropertyConfiguration: void cacheInstance()>();

        return;
    }

    private void setFieldsWithTreePath(java.util.Properties, java.lang.String)
    {
        twitter4j.conf.PropertyConfiguration $r0;
        java.util.Properties $r1;
        java.lang.String $r2, $r3, $r5;
        int $i0, $i1;
        java.lang.String[] $r4;
        boolean $z0;
        java.lang.StringBuilder $r6;

        $r0 := @this: twitter4j.conf.PropertyConfiguration;

        $r1 := @parameter0: java.util.Properties;

        $r2 := @parameter1: java.lang.String;

        specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: void setFieldsWithPrefix(java.util.Properties,java.lang.String)>($r1, "");

        $r4 = staticinvoke <twitter4j.internal.util.z_T4JInternalStringUtil: java.lang.String[] split(java.lang.String,java.lang.String)>($r2, "/");

        $r2 = null;

        $i1 = lengthof $r4;

        $i0 = 0;

     label1:
        if $i0 >= $i1 goto label5;

        $r3 = $r4[$i0];

        $r5 = "";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label3;

        if $r2 != null goto label4;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        specialinvoke $r0.<twitter4j.conf.PropertyConfiguration: void setFieldsWithPrefix(java.util.Properties,java.lang.String)>($r1, $r2);

     label3:
        $i0 = $i0 + 1;

        goto label1;

     label4:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label5:
        return;
    }

    public volatile void dumpConfiguration()
    {
        twitter4j.conf.PropertyConfiguration $r0;

        $r0 := @this: twitter4j.conf.PropertyConfiguration;

        specialinvoke $r0.<twitter4j.conf.ConfigurationBase: void dumpConfiguration()>();

        return;
    }

    public volatile boolean equals(java.lang.Object)
    {
        twitter4j.conf.PropertyConfiguration $r0;
        java.lang.Object $r1;
        boolean $z0;

        $r0 := @this: twitter4j.conf.PropertyConfiguration;

        $r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke $r0.<twitter4j.conf.ConfigurationBase: boolean equals(java.lang.Object)>($r1);

        return $z0;
    }

    protected boolean getBoolean(java.util.Properties, java.lang.String, java.lang.String)
    {
        twitter4j.conf.PropertyConfiguration $r0;
        java.util.Properties $r1;
        java.lang.String $r2, $r3;
        java.lang.StringBuilder $r4;
        java.lang.Boolean $r5;
        boolean $z0;

        $r0 := @this: twitter4j.conf.PropertyConfiguration;

        $r1 := @parameter0: java.util.Properties;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = virtualinvoke $r1.<java.util.Properties: java.lang.String getProperty(java.lang.String)>($r3);

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r3);

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public volatile java.lang.String getDispatcherImpl()
    {
        twitter4j.conf.PropertyConfiguration $r0;
        java.lang.String $r1;

        $r0 := @this: twitter4j.conf.PropertyConfiguration;

        $r1 = specialinvoke $r0.<twitter4j.conf.ConfigurationBase: java.lang.String getDispatcherImpl()>();

        return $r1;
    }

    public volatile int getHttpStreamingReadTimeout()
    {
        twitter4j.conf.PropertyConfiguration $r0;
        int $i0;

        $r0 := @this: twitter4j.conf.PropertyConfiguration;

        $i0 = specialinvoke $r0.<twitter4j.conf.ConfigurationBase: int getHttpStreamingReadTimeout()>();

        return $i0;
    }

    protected int getIntProperty(java.util.Properties, java.lang.String, java.lang.String)
    {
        twitter4j.conf.PropertyConfiguration $r0;
        java.util.Properties $r1;
        java.lang.String $r2, $r3;
        java.lang.NumberFormatException $r4;
        java.lang.StringBuilder $r5;
        int $i0;

        $r0 := @this: twitter4j.conf.PropertyConfiguration;

        $r1 := @parameter0: java.util.Properties;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = virtualinvoke $r1.<java.util.Properties: java.lang.String getProperty(java.lang.String)>($r3);

     label1:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        return -1;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public volatile java.lang.String getLoggerFactory()
    {
        twitter4j.conf.PropertyConfiguration $r0;
        java.lang.String $r1;

        $r0 := @this: twitter4j.conf.PropertyConfiguration;

        $r1 = specialinvoke $r0.<twitter4j.conf.ConfigurationBase: java.lang.String getLoggerFactory()>();

        return $r1;
    }

    protected long getLongProperty(java.util.Properties, java.lang.String, java.lang.String)
    {
        twitter4j.conf.PropertyConfiguration $r0;
        java.util.Properties $r1;
        java.lang.String $r2, $r3;
        java.lang.NumberFormatException $r4;
        java.lang.StringBuilder $r5;
        long $l0;

        $r0 := @this: twitter4j.conf.PropertyConfiguration;

        $r1 := @parameter0: java.util.Properties;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = virtualinvoke $r1.<java.util.Properties: java.lang.String getProperty(java.lang.String)>($r3);

     label1:
        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r3);

     label2:
        return $l0;

     label3:
        $r4 := @caughtexception;

        return -1L;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public volatile java.lang.String getMediaProvider()
    {
        twitter4j.conf.PropertyConfiguration $r0;
        java.lang.String $r1;

        $r0 := @this: twitter4j.conf.PropertyConfiguration;

        $r1 = specialinvoke $r0.<twitter4j.conf.ConfigurationBase: java.lang.String getMediaProvider()>();

        return $r1;
    }

    public volatile java.lang.String getMediaProviderAPIKey()
    {
        twitter4j.conf.PropertyConfiguration $r0;
        java.lang.String $r1;

        $r0 := @this: twitter4j.conf.PropertyConfiguration;

        $r1 = specialinvoke $r0.<twitter4j.conf.ConfigurationBase: java.lang.String getMediaProviderAPIKey()>();

        return $r1;
    }

    public volatile java.util.Properties getMediaProviderParameters()
    {
        twitter4j.conf.PropertyConfiguration $r0;
        java.util.Properties $r1;

        $r0 := @this: twitter4j.conf.PropertyConfiguration;

        $r1 = specialinvoke $r0.<twitter4j.conf.ConfigurationBase: java.util.Properties getMediaProviderParameters()>();

        return $r1;
    }

    public volatile java.lang.String getOAuthAccessToken()
    {
        twitter4j.conf.PropertyConfiguration $r0;
        java.lang.String $r1;

        $r0 := @this: twitter4j.conf.PropertyConfiguration;

        $r1 = specialinvoke $r0.<twitter4j.conf.ConfigurationBase: java.lang.String getOAuthAccessToken()>();

        return $r1;
    }

    public volatile java.lang.String getOAuthAccessTokenSecret()
    {
        twitter4j.conf.PropertyConfiguration $r0;
        java.lang.String $r1;

        $r0 := @this: twitter4j.conf.PropertyConfiguration;

        $r1 = specialinvoke $r0.<twitter4j.conf.ConfigurationBase: java.lang.String getOAuthAccessTokenSecret()>();

        return $r1;
    }

    public volatile java.lang.String getOAuthAccessTokenURL()
    {
        twitter4j.conf.PropertyConfiguration $r0;
        java.lang.String $r1;

        $r0 := @this: twitter4j.conf.PropertyConfiguration;

        $r1 = specialinvoke $r0.<twitter4j.conf.ConfigurationBase: java.lang.String getOAuthAccessTokenURL()>();

        return $r1;
    }

    public volatile java.lang.String getOAuthAuthenticationURL()
    {
        twitter4j.conf.PropertyConfiguration $r0;
        java.lang.String $r1;

        $r0 := @this: twitter4j.conf.PropertyConfiguration;

        $r1 = specialinvoke $r0.<twitter4j.conf.ConfigurationBase: java.lang.String getOAuthAuthenticationURL()>();

        return $r1;
    }

    public volatile java.lang.String getOAuthAuthorizationURL()
    {
        twitter4j.conf.PropertyConfiguration $r0;
        java.lang.String $r1;

        $r0 := @this: twitter4j.conf.PropertyConfiguration;

        $r1 = specialinvoke $r0.<twitter4j.conf.ConfigurationBase: java.lang.String getOAuthAuthorizationURL()>();

        return $r1;
    }

    public volatile java.lang.String getOAuthRequestTokenURL()
    {
        twitter4j.conf.PropertyConfiguration $r0;
        java.lang.String $r1;

        $r0 := @this: twitter4j.conf.PropertyConfiguration;

        $r1 = specialinvoke $r0.<twitter4j.conf.ConfigurationBase: java.lang.String getOAuthRequestTokenURL()>();

        return $r1;
    }

    public volatile java.util.Map getRequestHeaders()
    {
        twitter4j.conf.PropertyConfiguration $r0;
        java.util.Map $r1;

        $r0 := @this: twitter4j.conf.PropertyConfiguration;

        $r1 = specialinvoke $r0.<twitter4j.conf.ConfigurationBase: java.util.Map getRequestHeaders()>();

        return $r1;
    }

    public volatile java.lang.String getRestBaseURL()
    {
        twitter4j.conf.PropertyConfiguration $r0;
        java.lang.String $r1;

        $r0 := @this: twitter4j.conf.PropertyConfiguration;

        $r1 = specialinvoke $r0.<twitter4j.conf.ConfigurationBase: java.lang.String getRestBaseURL()>();

        return $r1;
    }

    public volatile java.lang.String getSiteStreamBaseURL()
    {
        twitter4j.conf.PropertyConfiguration $r0;
        java.lang.String $r1;

        $r0 := @this: twitter4j.conf.PropertyConfiguration;

        $r1 = specialinvoke $r0.<twitter4j.conf.ConfigurationBase: java.lang.String getSiteStreamBaseURL()>();

        return $r1;
    }

    public volatile java.lang.String getStreamBaseURL()
    {
        twitter4j.conf.PropertyConfiguration $r0;
        java.lang.String $r1;

        $r0 := @this: twitter4j.conf.PropertyConfiguration;

        $r1 = specialinvoke $r0.<twitter4j.conf.ConfigurationBase: java.lang.String getStreamBaseURL()>();

        return $r1;
    }

    protected java.lang.String getString(java.util.Properties, java.lang.String, java.lang.String)
    {
        twitter4j.conf.PropertyConfiguration $r0;
        java.util.Properties $r1;
        java.lang.String $r2, $r3;
        java.lang.StringBuilder $r4;

        $r0 := @this: twitter4j.conf.PropertyConfiguration;

        $r1 := @parameter0: java.util.Properties;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = virtualinvoke $r1.<java.util.Properties: java.lang.String getProperty(java.lang.String)>($r3);

        return $r3;
    }

    public volatile java.lang.String getUserStreamBaseURL()
    {
        twitter4j.conf.PropertyConfiguration $r0;
        java.lang.String $r1;

        $r0 := @this: twitter4j.conf.PropertyConfiguration;

        $r1 = specialinvoke $r0.<twitter4j.conf.ConfigurationBase: java.lang.String getUserStreamBaseURL()>();

        return $r1;
    }

    public volatile int hashCode()
    {
        twitter4j.conf.PropertyConfiguration $r0;
        int $i0;

        $r0 := @this: twitter4j.conf.PropertyConfiguration;

        $i0 = specialinvoke $r0.<twitter4j.conf.ConfigurationBase: int hashCode()>();

        return $i0;
    }

    public volatile boolean isGAE()
    {
        twitter4j.conf.PropertyConfiguration $r0;
        boolean $z0;

        $r0 := @this: twitter4j.conf.PropertyConfiguration;

        $z0 = specialinvoke $r0.<twitter4j.conf.ConfigurationBase: boolean isGAE()>();

        return $z0;
    }

    public volatile boolean isGZIPEnabled()
    {
        twitter4j.conf.PropertyConfiguration $r0;
        boolean $z0;

        $r0 := @this: twitter4j.conf.PropertyConfiguration;

        $z0 = specialinvoke $r0.<twitter4j.conf.ConfigurationBase: boolean isGZIPEnabled()>();

        return $z0;
    }

    public volatile boolean isIncludeEntitiesEnabled()
    {
        twitter4j.conf.PropertyConfiguration $r0;
        boolean $z0;

        $r0 := @this: twitter4j.conf.PropertyConfiguration;

        $z0 = specialinvoke $r0.<twitter4j.conf.ConfigurationBase: boolean isIncludeEntitiesEnabled()>();

        return $z0;
    }

    public volatile boolean isIncludeMyRetweetEnabled()
    {
        twitter4j.conf.PropertyConfiguration $r0;
        boolean $z0;

        $r0 := @this: twitter4j.conf.PropertyConfiguration;

        $z0 = specialinvoke $r0.<twitter4j.conf.ConfigurationBase: boolean isIncludeMyRetweetEnabled()>();

        return $z0;
    }

    public volatile boolean isIncludeRTsEnabled()
    {
        twitter4j.conf.PropertyConfiguration $r0;
        boolean $z0;

        $r0 := @this: twitter4j.conf.PropertyConfiguration;

        $z0 = specialinvoke $r0.<twitter4j.conf.ConfigurationBase: boolean isIncludeRTsEnabled()>();

        return $z0;
    }

    public volatile boolean isJSONStoreEnabled()
    {
        twitter4j.conf.PropertyConfiguration $r0;
        boolean $z0;

        $r0 := @this: twitter4j.conf.PropertyConfiguration;

        $z0 = specialinvoke $r0.<twitter4j.conf.ConfigurationBase: boolean isJSONStoreEnabled()>();

        return $z0;
    }

    public volatile boolean isMBeanEnabled()
    {
        twitter4j.conf.PropertyConfiguration $r0;
        boolean $z0;

        $r0 := @this: twitter4j.conf.PropertyConfiguration;

        $z0 = specialinvoke $r0.<twitter4j.conf.ConfigurationBase: boolean isMBeanEnabled()>();

        return $z0;
    }

    public volatile boolean isPrettyDebugEnabled()
    {
        twitter4j.conf.PropertyConfiguration $r0;
        boolean $z0;

        $r0 := @this: twitter4j.conf.PropertyConfiguration;

        $z0 = specialinvoke $r0.<twitter4j.conf.ConfigurationBase: boolean isPrettyDebugEnabled()>();

        return $z0;
    }

    public volatile boolean isStallWarningsEnabled()
    {
        twitter4j.conf.PropertyConfiguration $r0;
        boolean $z0;

        $r0 := @this: twitter4j.conf.PropertyConfiguration;

        $z0 = specialinvoke $r0.<twitter4j.conf.ConfigurationBase: boolean isStallWarningsEnabled()>();

        return $z0;
    }

    public volatile boolean isUserStreamRepliesAllEnabled()
    {
        twitter4j.conf.PropertyConfiguration $r0;
        boolean $z0;

        $r0 := @this: twitter4j.conf.PropertyConfiguration;

        $z0 = specialinvoke $r0.<twitter4j.conf.ConfigurationBase: boolean isUserStreamRepliesAllEnabled()>();

        return $z0;
    }

    protected java.lang.Object readResolve() throws java.io.ObjectStreamException
    {
        twitter4j.conf.PropertyConfiguration $r0;
        java.lang.Object $r1;

        $r0 := @this: twitter4j.conf.PropertyConfiguration;

        $r1 = specialinvoke $r0.<twitter4j.conf.ConfigurationBase: java.lang.Object readResolve()>();

        return $r1;
    }

    public volatile void setIncludeMyRetweetEnabled(boolean)
    {
        twitter4j.conf.PropertyConfiguration $r0;
        boolean $z0;

        $r0 := @this: twitter4j.conf.PropertyConfiguration;

        $z0 := @parameter0: boolean;

        specialinvoke $r0.<twitter4j.conf.ConfigurationBase: void setIncludeMyRetweetEnabled(boolean)>($z0);

        return;
    }

    public volatile java.lang.String toString()
    {
        twitter4j.conf.PropertyConfiguration $r0;
        java.lang.String $r1;

        $r0 := @this: twitter4j.conf.PropertyConfiguration;

        $r1 = specialinvoke $r0.<twitter4j.conf.ConfigurationBase: java.lang.String toString()>();

        return $r1;
    }

    public static void <clinit>()
    {
        <twitter4j.conf.PropertyConfiguration: long serialVersionUID> = 6458764415636588373L;

        <twitter4j.conf.PropertyConfiguration: java.lang.String USER_STREAM_BASE_URL> = "userStreamBaseURL";

        <twitter4j.conf.PropertyConfiguration: java.lang.String USER> = "user";

        <twitter4j.conf.PropertyConfiguration: java.lang.String STREAM_USER_REPLIES_ALL> = "stream.user.repliesAll";

        <twitter4j.conf.PropertyConfiguration: java.lang.String STREAM_STALL_WARNINGS_ENABLED> = "stream.enableStallWarnings";

        <twitter4j.conf.PropertyConfiguration: java.lang.String STREAM_BASE_URL> = "streamBaseURL";

        <twitter4j.conf.PropertyConfiguration: java.lang.String SITE_STREAM_BASE_URL> = "siteStreamBaseURL";

        <twitter4j.conf.PropertyConfiguration: java.lang.String REST_BASE_URL> = "restBaseURL";

        <twitter4j.conf.PropertyConfiguration: java.lang.String PASSWORD> = "password";

        <twitter4j.conf.PropertyConfiguration: java.lang.String OAUTH_REQUEST_TOKEN_URL> = "oauth.requestTokenURL";

        <twitter4j.conf.PropertyConfiguration: java.lang.String OAUTH_CONSUMER_SECRET> = "oauth.consumerSecret";

        <twitter4j.conf.PropertyConfiguration: java.lang.String OAUTH_CONSUMER_KEY> = "oauth.consumerKey";

        <twitter4j.conf.PropertyConfiguration: java.lang.String OAUTH_AUTHORIZATION_URL> = "oauth.authorizationURL";

        <twitter4j.conf.PropertyConfiguration: java.lang.String OAUTH_AUTHENTICATION_URL> = "oauth.authenticationURL";

        <twitter4j.conf.PropertyConfiguration: java.lang.String OAUTH_ACCESS_TOKEN_URL> = "oauth.accessTokenURL";

        <twitter4j.conf.PropertyConfiguration: java.lang.String OAUTH_ACCESS_TOKEN_SECRET> = "oauth.accessTokenSecret";

        <twitter4j.conf.PropertyConfiguration: java.lang.String OAUTH_ACCESS_TOKEN> = "oauth.accessToken";

        <twitter4j.conf.PropertyConfiguration: java.lang.String MEDIA_PROVIDER_PARAMETERS> = "media.providerParameters";

        <twitter4j.conf.PropertyConfiguration: java.lang.String MEDIA_PROVIDER_API_KEY> = "media.providerAPIKey";

        <twitter4j.conf.PropertyConfiguration: java.lang.String MEDIA_PROVIDER> = "media.provider";

        <twitter4j.conf.PropertyConfiguration: java.lang.String MBEAN_ENABLED> = "mbeanEnabled";

        <twitter4j.conf.PropertyConfiguration: java.lang.String LOGGER_FACTORY> = "loggerFactory";

        <twitter4j.conf.PropertyConfiguration: java.lang.String JSON_STORE_ENABLED> = "jsonStoreEnabled";

        <twitter4j.conf.PropertyConfiguration: java.lang.String INCLUDE_RTS> = "includeRTs";

        <twitter4j.conf.PropertyConfiguration: java.lang.String INCLUDE_MY_RETWEET> = "includeMyRetweet";

        <twitter4j.conf.PropertyConfiguration: java.lang.String INCLUDE_ENTITIES> = "includeEntities";

        <twitter4j.conf.PropertyConfiguration: java.lang.String HTTP_USE_SSL> = "http.useSSL";

        <twitter4j.conf.PropertyConfiguration: java.lang.String HTTP_USER_AGENT> = "http.userAgent";

        <twitter4j.conf.PropertyConfiguration: java.lang.String HTTP_STREAMING_READ_TIMEOUT> = "http.streamingReadTimeout";

        <twitter4j.conf.PropertyConfiguration: java.lang.String HTTP_RETRY_INTERVAL_SECS> = "http.retryIntervalSecs";

        <twitter4j.conf.PropertyConfiguration: java.lang.String HTTP_RETRY_COUNT> = "http.retryCount";

        <twitter4j.conf.PropertyConfiguration: java.lang.String HTTP_READ_TIMEOUT> = "http.readTimeout";

        <twitter4j.conf.PropertyConfiguration: java.lang.String HTTP_PROXY_USER> = "http.proxyUser";

        <twitter4j.conf.PropertyConfiguration: java.lang.String HTTP_PROXY_PORT_FALLBACK> = "http.proxyPort";

        <twitter4j.conf.PropertyConfiguration: java.lang.String HTTP_PROXY_PORT> = "http.proxyPort";

        <twitter4j.conf.PropertyConfiguration: java.lang.String HTTP_PROXY_PASSWORD> = "http.proxyPassword";

        <twitter4j.conf.PropertyConfiguration: java.lang.String HTTP_PROXY_HOST_FALLBACK> = "http.proxyHost";

        <twitter4j.conf.PropertyConfiguration: java.lang.String HTTP_PROXY_HOST> = "http.proxyHost";

        <twitter4j.conf.PropertyConfiguration: java.lang.String HTTP_PRETTY_DEBUG> = "http.prettyDebug";

        <twitter4j.conf.PropertyConfiguration: java.lang.String HTTP_MAX_TOTAL_CONNECTIONS> = "http.maxTotalConnections";

        <twitter4j.conf.PropertyConfiguration: java.lang.String HTTP_GZIP> = "http.gzip";

        <twitter4j.conf.PropertyConfiguration: java.lang.String HTTP_DEFAULT_MAX_PER_ROUTE> = "http.defaultMaxPerRoute";

        <twitter4j.conf.PropertyConfiguration: java.lang.String HTTP_CONNECTION_TIMEOUT> = "http.connectionTimeout";

        <twitter4j.conf.PropertyConfiguration: java.lang.String DEBUG> = "debug";

        <twitter4j.conf.PropertyConfiguration: java.lang.String CONTRIBUTING_TO> = "contributingTo";

        <twitter4j.conf.PropertyConfiguration: java.lang.String CLIENT_VERSION> = "clientVersion";

        <twitter4j.conf.PropertyConfiguration: java.lang.String CLIENT_URL> = "clientURL";

        <twitter4j.conf.PropertyConfiguration: java.lang.String ASYNC_NUM_THREADS> = "async.numThreads";

        <twitter4j.conf.PropertyConfiguration: java.lang.String ASYNC_DISPATCHER_IMPL> = "async.dispatcherImpl";

        return;
    }
}
