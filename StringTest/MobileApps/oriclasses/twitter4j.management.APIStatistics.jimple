public class twitter4j.management.APIStatistics extends java.lang.Object implements twitter4j.management.APIStatisticsMBean
{
    private final twitter4j.management.InvocationStatisticsCalculator API_STATS_CALCULATOR;
    private final int HISTORY_SIZE;
    private final java.util.Map METHOD_STATS_MAP;

    public void <init>(int)
    {
        twitter4j.management.APIStatistics $r0;
        int $i0;
        twitter4j.management.InvocationStatisticsCalculator $r1;
        java.util.HashMap $r2;

        $r0 := @this: twitter4j.management.APIStatistics;

        $i0 := @parameter0: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new twitter4j.management.InvocationStatisticsCalculator;

        specialinvoke $r1.<twitter4j.management.InvocationStatisticsCalculator: void <init>(java.lang.String,int)>("API", $i0);

        $r0.<twitter4j.management.APIStatistics: twitter4j.management.InvocationStatisticsCalculator API_STATS_CALCULATOR> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>(int)>(100);

        $r0.<twitter4j.management.APIStatistics: java.util.Map METHOD_STATS_MAP> = $r2;

        $r0.<twitter4j.management.APIStatistics: int HISTORY_SIZE> = $i0;

        return;
    }

    private twitter4j.management.InvocationStatisticsCalculator getMethodStatistics(java.lang.String)
    {
        twitter4j.management.APIStatistics $r0;
        java.lang.String $r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        twitter4j.management.InvocationStatisticsCalculator $r4;
        int $i0;
        java.lang.Throwable $r5;

        $r0 := @this: twitter4j.management.APIStatistics;

        $r1 := @parameter0: java.lang.String;

        entermonitor $r0;

     label1:
        $r2 = $r0.<twitter4j.management.APIStatistics: java.util.Map METHOD_STATS_MAP>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (twitter4j.management.InvocationStatisticsCalculator) $r3;

        if $r4 != null goto label2;

        $r4 = new twitter4j.management.InvocationStatisticsCalculator;

        $i0 = $r0.<twitter4j.management.APIStatistics: int HISTORY_SIZE>;

        specialinvoke $r4.<twitter4j.management.InvocationStatisticsCalculator: void <init>(java.lang.String,int)>($r1, $i0);

        $r2 = $r0.<twitter4j.management.APIStatistics: java.util.Map METHOD_STATS_MAP>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r4);

     label2:
        exitmonitor $r0;

        return $r4;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public long getAverageTime()
    {
        twitter4j.management.APIStatistics $r0;
        twitter4j.management.InvocationStatisticsCalculator $r1;
        long $l0;

        $r0 := @this: twitter4j.management.APIStatistics;

        $r1 = $r0.<twitter4j.management.APIStatistics: twitter4j.management.InvocationStatisticsCalculator API_STATS_CALCULATOR>;

        $l0 = virtualinvoke $r1.<twitter4j.management.InvocationStatisticsCalculator: long getAverageTime()>();

        return $l0;
    }

    public long getCallCount()
    {
        twitter4j.management.APIStatistics $r0;
        twitter4j.management.InvocationStatisticsCalculator $r1;
        long $l0;

        $r0 := @this: twitter4j.management.APIStatistics;

        $r1 = $r0.<twitter4j.management.APIStatistics: twitter4j.management.InvocationStatisticsCalculator API_STATS_CALCULATOR>;

        $l0 = virtualinvoke $r1.<twitter4j.management.InvocationStatisticsCalculator: long getCallCount()>();

        return $l0;
    }

    public long getErrorCount()
    {
        twitter4j.management.APIStatistics $r0;
        twitter4j.management.InvocationStatisticsCalculator $r1;
        long $l0;

        $r0 := @this: twitter4j.management.APIStatistics;

        $r1 = $r0.<twitter4j.management.APIStatistics: twitter4j.management.InvocationStatisticsCalculator API_STATS_CALCULATOR>;

        $l0 = virtualinvoke $r1.<twitter4j.management.InvocationStatisticsCalculator: long getErrorCount()>();

        return $l0;
    }

    public java.lang.Iterable getInvocationStatistics()
    {
        twitter4j.management.APIStatistics $r0;
        java.util.Map $r1;
        java.util.Collection $r2;
        java.lang.Throwable $r3;

        $r0 := @this: twitter4j.management.APIStatistics;

        entermonitor $r0;

     label1:
        $r1 = $r0.<twitter4j.management.APIStatistics: java.util.Map METHOD_STATS_MAP>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

     label2:
        exitmonitor $r0;

        return $r2;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.util.Map getMethodLevelSummariesAsString()
    {
        twitter4j.management.APIStatistics $r0;
        java.util.HashMap $r1;
        java.util.Map $r2;
        java.util.Collection $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        twitter4j.management.InvocationStatisticsCalculator $r6;
        java.lang.String $r7, $r8;
        java.lang.Throwable $r9;

        $r0 := @this: twitter4j.management.APIStatistics;

        entermonitor $r0;

     label1:
        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        $r2 = $r0.<twitter4j.management.APIStatistics: java.util.Map METHOD_STATS_MAP>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (twitter4j.management.InvocationStatisticsCalculator) $r5;

        $r7 = virtualinvoke $r6.<twitter4j.management.InvocationStatisticsCalculator: java.lang.String getName()>();

        $r8 = virtualinvoke $r6.<twitter4j.management.InvocationStatisticsCalculator: java.lang.String toString()>();

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r8);

     label3:
        goto label2;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r0;

        throw $r9;

     label5:
        exitmonitor $r0;

        return $r1;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public java.lang.String getMethodLevelSummary(java.lang.String)
    {
        twitter4j.management.APIStatistics $r0;
        java.lang.String $r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        twitter4j.management.InvocationStatisticsCalculator $r4;
        java.lang.Throwable $r5;

        $r0 := @this: twitter4j.management.APIStatistics;

        $r1 := @parameter0: java.lang.String;

        entermonitor $r0;

     label1:
        $r2 = $r0.<twitter4j.management.APIStatistics: java.util.Map METHOD_STATS_MAP>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (twitter4j.management.InvocationStatisticsCalculator) $r3;

        $r1 = virtualinvoke $r4.<twitter4j.management.InvocationStatisticsCalculator: java.lang.String toString()>();

     label2:
        exitmonitor $r0;

        return $r1;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.String getName()
    {
        twitter4j.management.APIStatistics $r0;
        twitter4j.management.InvocationStatisticsCalculator $r1;
        java.lang.String $r2;

        $r0 := @this: twitter4j.management.APIStatistics;

        $r1 = $r0.<twitter4j.management.APIStatistics: twitter4j.management.InvocationStatisticsCalculator API_STATS_CALCULATOR>;

        $r2 = virtualinvoke $r1.<twitter4j.management.InvocationStatisticsCalculator: java.lang.String getName()>();

        return $r2;
    }

    public long getTotalTime()
    {
        twitter4j.management.APIStatistics $r0;
        twitter4j.management.InvocationStatisticsCalculator $r1;
        long $l0;

        $r0 := @this: twitter4j.management.APIStatistics;

        $r1 = $r0.<twitter4j.management.APIStatistics: twitter4j.management.InvocationStatisticsCalculator API_STATS_CALCULATOR>;

        $l0 = virtualinvoke $r1.<twitter4j.management.InvocationStatisticsCalculator: long getTotalTime()>();

        return $l0;
    }

    public void methodCalled(java.lang.String, long, boolean)
    {
        twitter4j.management.APIStatistics $r0;
        java.lang.String $r1;
        long $l0;
        boolean $z0;
        twitter4j.management.InvocationStatisticsCalculator $r2;
        java.lang.Throwable $r3;

        $r0 := @this: twitter4j.management.APIStatistics;

        $r1 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        $z0 := @parameter2: boolean;

        entermonitor $r0;

     label1:
        $r2 = specialinvoke $r0.<twitter4j.management.APIStatistics: twitter4j.management.InvocationStatisticsCalculator getMethodStatistics(java.lang.String)>($r1);

        virtualinvoke $r2.<twitter4j.management.InvocationStatisticsCalculator: void increment(long,boolean)>($l0, $z0);

        $r2 = $r0.<twitter4j.management.APIStatistics: twitter4j.management.InvocationStatisticsCalculator API_STATS_CALCULATOR>;

        virtualinvoke $r2.<twitter4j.management.InvocationStatisticsCalculator: void increment(long,boolean)>($l0, $z0);

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void reset()
    {
        twitter4j.management.APIStatistics $r0;
        twitter4j.management.InvocationStatisticsCalculator $r1;
        java.util.Map $r2;
        java.lang.Throwable $r3;

        $r0 := @this: twitter4j.management.APIStatistics;

        entermonitor $r0;

     label1:
        $r1 = $r0.<twitter4j.management.APIStatistics: twitter4j.management.InvocationStatisticsCalculator API_STATS_CALCULATOR>;

        virtualinvoke $r1.<twitter4j.management.InvocationStatisticsCalculator: void reset()>();

        $r2 = $r0.<twitter4j.management.APIStatistics: java.util.Map METHOD_STATS_MAP>;

        interfaceinvoke $r2.<java.util.Map: void clear()>();

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
