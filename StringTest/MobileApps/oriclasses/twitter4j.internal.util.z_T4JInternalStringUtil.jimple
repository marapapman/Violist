public class twitter4j.internal.util.z_T4JInternalStringUtil extends java.lang.Object
{

    private void <init>()
    {
        twitter4j.internal.util.z_T4JInternalStringUtil $r0;
        java.lang.AssertionError $r1;

        $r0 := @this: twitter4j.internal.util.z_T4JInternalStringUtil;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;
    }

    public static java.lang.String join(java.util.List)
    {
        java.util.List $r0;
        java.lang.StringBuilder $r1;
        int $i0;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.String $r4;

        $r0 := @parameter0: java.util.List;

        $r1 = new java.lang.StringBuilder;

        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        $i0 = $i0 * 11;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i0);

        $r2 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.String) $r3;

        $i0 = virtualinvoke $r1.<java.lang.StringBuilder: int length()>();

        if $i0 == 0 goto label2;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

     label2:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        goto label1;

     label3:
        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public static java.lang.String join(int[])
    {
        int[] $r0;
        java.lang.StringBuilder $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r2;

        $r0 := @parameter0: int[];

        $r1 = new java.lang.StringBuilder;

        $i2 = lengthof $r0;

        $i3 = $i2 * 11;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i3);

        $i2 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i2 goto label3;

        $i0 = $r0[$i1];

        $i3 = virtualinvoke $r1.<java.lang.StringBuilder: int length()>();

        if $i3 == 0 goto label2;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

     label2:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String join(long[])
    {
        long[] $r0;
        java.lang.StringBuilder $r1;
        long $l0;
        int $i1, $i2, $i3;
        java.lang.String $r2;

        $r0 := @parameter0: long[];

        $r1 = new java.lang.StringBuilder;

        $i2 = lengthof $r0;

        $i3 = $i2 * 11;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i3);

        $i2 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i2 goto label3;

        $l0 = $r0[$i1];

        $i3 = virtualinvoke $r1.<java.lang.StringBuilder: int length()>();

        if $i3 == 0 goto label2;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

     label2:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String join(java.lang.String[])
    {
        java.lang.String[] $r0;
        java.lang.StringBuilder $r1;
        int $i0, $i1, $i2;
        java.lang.String $r2;

        $r0 := @parameter0: java.lang.String[];

        $r1 = new java.lang.StringBuilder;

        $i1 = lengthof $r0;

        $i2 = $i1 * 11;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i2);

        $i1 = lengthof $r0;

        $i0 = 0;

     label1:
        if $i0 >= $i1 goto label3;

        $r2 = $r0[$i0];

        $i2 = virtualinvoke $r1.<java.lang.StringBuilder: int length()>();

        if $i2 == 0 goto label2;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

     label2:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $i0 = $i0 + 1;

        goto label1;

     label3:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String maskString(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.StringBuilder $r1;
        int $i0, $i1;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i0);

        $i0 = 0;

     label1:
        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label2;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*");

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    public static java.lang.String[] split(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, $r4;
        int $i0, $i1;
        java.lang.String[] $r2;
        java.util.ArrayList $r3;
        java.lang.Object[] $r5;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $i1 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String)>($r1);

        $i0 = $i1;

        if $i1 != -1 goto label1;

        $r2 = newarray (java.lang.String)[1];

        $r2[0] = $r0;

        return $r2;

     label1:
        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $i1 = 0;

     label2:
        if $i0 == -1 goto label3;

        $r4 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i1, $i0);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i1 = $i0 + $i1;

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String,int)>($r1, $i1);

        goto label2;

     label3:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i1 == $i0 goto label4;

        $r4 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i1);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

     label4:
        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        $r2 = newarray (java.lang.String)[$i1];

        $r5 = interfaceinvoke $r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r2);

        $r2 = (java.lang.String[]) $r5;

        return $r2;
    }
}
