final class twitter4j.internal.logging.Log4JLogger extends twitter4j.internal.logging.Logger
{
    private final org.apache.log4j.Logger LOGGER;

    void <init>(org.apache.log4j.Logger)
    {
        twitter4j.internal.logging.Log4JLogger $r0;
        org.apache.log4j.Logger $r1;

        $r0 := @this: twitter4j.internal.logging.Log4JLogger;

        $r1 := @parameter0: org.apache.log4j.Logger;

        specialinvoke $r0.<twitter4j.internal.logging.Logger: void <init>()>();

        $r0.<twitter4j.internal.logging.Log4JLogger: org.apache.log4j.Logger LOGGER> = $r1;

        return;
    }

    public void debug(java.lang.String)
    {
        twitter4j.internal.logging.Log4JLogger $r0;
        java.lang.String $r1;
        org.apache.log4j.Logger $r2;

        $r0 := @this: twitter4j.internal.logging.Log4JLogger;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<twitter4j.internal.logging.Log4JLogger: org.apache.log4j.Logger LOGGER>;

        virtualinvoke $r2.<org.apache.log4j.Logger: void debug(java.lang.Object)>($r1);

        return;
    }

    public void debug(java.lang.String, java.lang.String)
    {
        twitter4j.internal.logging.Log4JLogger $r0;
        java.lang.String $r1, $r2;
        java.lang.StringBuilder $r3;

        $r0 := @this: twitter4j.internal.logging.Log4JLogger;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<twitter4j.internal.logging.Log4JLogger: void debug(java.lang.String)>($r2);

        return;
    }

    public void error(java.lang.String)
    {
        twitter4j.internal.logging.Log4JLogger $r0;
        java.lang.String $r1;
        org.apache.log4j.Logger $r2;

        $r0 := @this: twitter4j.internal.logging.Log4JLogger;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<twitter4j.internal.logging.Log4JLogger: org.apache.log4j.Logger LOGGER>;

        virtualinvoke $r2.<org.apache.log4j.Logger: void error(java.lang.Object)>($r1);

        return;
    }

    public void error(java.lang.String, java.lang.Throwable)
    {
        twitter4j.internal.logging.Log4JLogger $r0;
        java.lang.String $r1;
        java.lang.Throwable $r2;
        org.apache.log4j.Logger $r3;

        $r0 := @this: twitter4j.internal.logging.Log4JLogger;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Throwable;

        $r3 = $r0.<twitter4j.internal.logging.Log4JLogger: org.apache.log4j.Logger LOGGER>;

        virtualinvoke $r3.<org.apache.log4j.Logger: void error(java.lang.Object,java.lang.Throwable)>($r1, $r2);

        return;
    }

    public void info(java.lang.String)
    {
        twitter4j.internal.logging.Log4JLogger $r0;
        java.lang.String $r1;
        org.apache.log4j.Logger $r2;

        $r0 := @this: twitter4j.internal.logging.Log4JLogger;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<twitter4j.internal.logging.Log4JLogger: org.apache.log4j.Logger LOGGER>;

        virtualinvoke $r2.<org.apache.log4j.Logger: void info(java.lang.Object)>($r1);

        return;
    }

    public void info(java.lang.String, java.lang.String)
    {
        twitter4j.internal.logging.Log4JLogger $r0;
        java.lang.String $r1, $r2;
        java.lang.StringBuilder $r3;

        $r0 := @this: twitter4j.internal.logging.Log4JLogger;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<twitter4j.internal.logging.Log4JLogger: void info(java.lang.String)>($r2);

        return;
    }

    public boolean isDebugEnabled()
    {
        twitter4j.internal.logging.Log4JLogger $r0;
        org.apache.log4j.Logger $r1;
        boolean $z0;

        $r0 := @this: twitter4j.internal.logging.Log4JLogger;

        $r1 = $r0.<twitter4j.internal.logging.Log4JLogger: org.apache.log4j.Logger LOGGER>;

        $z0 = virtualinvoke $r1.<org.apache.log4j.Logger: boolean isDebugEnabled()>();

        return $z0;
    }

    public boolean isErrorEnabled()
    {
        twitter4j.internal.logging.Log4JLogger $r0;
        org.apache.log4j.Logger $r1;
        org.apache.log4j.Level $r2;
        boolean $z0;

        $r0 := @this: twitter4j.internal.logging.Log4JLogger;

        $r1 = $r0.<twitter4j.internal.logging.Log4JLogger: org.apache.log4j.Logger LOGGER>;

        $r2 = <org.apache.log4j.Level: org.apache.log4j.Level WARN>;

        $z0 = virtualinvoke $r1.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>($r2);

        return $z0;
    }

    public boolean isInfoEnabled()
    {
        twitter4j.internal.logging.Log4JLogger $r0;
        org.apache.log4j.Logger $r1;
        boolean $z0;

        $r0 := @this: twitter4j.internal.logging.Log4JLogger;

        $r1 = $r0.<twitter4j.internal.logging.Log4JLogger: org.apache.log4j.Logger LOGGER>;

        $z0 = virtualinvoke $r1.<org.apache.log4j.Logger: boolean isInfoEnabled()>();

        return $z0;
    }

    public boolean isWarnEnabled()
    {
        twitter4j.internal.logging.Log4JLogger $r0;
        org.apache.log4j.Logger $r1;
        org.apache.log4j.Level $r2;
        boolean $z0;

        $r0 := @this: twitter4j.internal.logging.Log4JLogger;

        $r1 = $r0.<twitter4j.internal.logging.Log4JLogger: org.apache.log4j.Logger LOGGER>;

        $r2 = <org.apache.log4j.Level: org.apache.log4j.Level WARN>;

        $z0 = virtualinvoke $r1.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>($r2);

        return $z0;
    }

    public void warn(java.lang.String)
    {
        twitter4j.internal.logging.Log4JLogger $r0;
        java.lang.String $r1;
        org.apache.log4j.Logger $r2;

        $r0 := @this: twitter4j.internal.logging.Log4JLogger;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<twitter4j.internal.logging.Log4JLogger: org.apache.log4j.Logger LOGGER>;

        virtualinvoke $r2.<org.apache.log4j.Logger: void warn(java.lang.Object)>($r1);

        return;
    }

    public void warn(java.lang.String, java.lang.String)
    {
        twitter4j.internal.logging.Log4JLogger $r0;
        java.lang.String $r1, $r2;
        java.lang.StringBuilder $r3;

        $r0 := @this: twitter4j.internal.logging.Log4JLogger;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<twitter4j.internal.logging.Log4JLogger: void warn(java.lang.String)>($r2);

        return;
    }
}
