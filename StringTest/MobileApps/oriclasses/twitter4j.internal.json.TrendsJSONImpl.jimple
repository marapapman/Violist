final class twitter4j.internal.json.TrendsJSONImpl extends twitter4j.internal.json.TwitterResponseImpl implements twitter4j.Trends, java.io.Serializable
{
    private static final long serialVersionUID;
    private java.util.Date asOf;
    private twitter4j.Location location;
    private java.util.Date trendAt;
    private twitter4j.Trend[] trends;

    void <init>(java.lang.String) throws twitter4j.TwitterException
    {
        twitter4j.internal.json.TrendsJSONImpl $r0;
        java.lang.String $r1;

        $r0 := @this: twitter4j.internal.json.TrendsJSONImpl;

        $r1 := @parameter0: java.lang.String;

        specialinvoke $r0.<twitter4j.internal.json.TrendsJSONImpl: void <init>(java.lang.String,boolean)>($r1, 0);

        return;
    }

    void <init>(java.lang.String, boolean) throws twitter4j.TwitterException
    {
        twitter4j.internal.json.TrendsJSONImpl $r0;
        java.lang.String $r1;
        boolean $z0;

        $r0 := @this: twitter4j.internal.json.TrendsJSONImpl;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        specialinvoke $r0.<twitter4j.internal.json.TwitterResponseImpl: void <init>()>();

        virtualinvoke $r0.<twitter4j.internal.json.TrendsJSONImpl: void init(java.lang.String,boolean)>($r1, $z0);

        return;
    }

    void <init>(java.util.Date, twitter4j.Location, java.util.Date, twitter4j.Trend[])
    {
        twitter4j.internal.json.TrendsJSONImpl $r0;
        java.util.Date $r1, $r3;
        twitter4j.Location $r2;
        twitter4j.Trend[] $r4;

        $r0 := @this: twitter4j.internal.json.TrendsJSONImpl;

        $r1 := @parameter0: java.util.Date;

        $r2 := @parameter1: twitter4j.Location;

        $r3 := @parameter2: java.util.Date;

        $r4 := @parameter3: twitter4j.Trend[];

        specialinvoke $r0.<twitter4j.internal.json.TwitterResponseImpl: void <init>()>();

        $r0.<twitter4j.internal.json.TrendsJSONImpl: java.util.Date asOf> = $r1;

        $r0.<twitter4j.internal.json.TrendsJSONImpl: twitter4j.Location location> = $r2;

        $r0.<twitter4j.internal.json.TrendsJSONImpl: java.util.Date trendAt> = $r3;

        $r0.<twitter4j.internal.json.TrendsJSONImpl: twitter4j.Trend[] trends> = $r4;

        return;
    }

    void <init>(twitter4j.internal.http.HttpResponse, twitter4j.conf.Configuration) throws twitter4j.TwitterException
    {
        twitter4j.internal.json.TrendsJSONImpl $r0;
        twitter4j.internal.http.HttpResponse $r1;
        twitter4j.conf.Configuration $r2;
        java.lang.String $r3;
        boolean $z0;

        $r0 := @this: twitter4j.internal.json.TrendsJSONImpl;

        $r1 := @parameter0: twitter4j.internal.http.HttpResponse;

        $r2 := @parameter1: twitter4j.conf.Configuration;

        specialinvoke $r0.<twitter4j.internal.json.TwitterResponseImpl: void <init>(twitter4j.internal.http.HttpResponse)>($r1);

        $r3 = virtualinvoke $r1.<twitter4j.internal.http.HttpResponse: java.lang.String asString()>();

        $z0 = interfaceinvoke $r2.<twitter4j.conf.Configuration: boolean isJSONStoreEnabled()>();

        virtualinvoke $r0.<twitter4j.internal.json.TrendsJSONImpl: void init(java.lang.String,boolean)>($r3, $z0);

        $z0 = interfaceinvoke $r2.<twitter4j.conf.Configuration: boolean isJSONStoreEnabled()>();

        if $z0 == 0 goto label1;

        staticinvoke <twitter4j.internal.json.DataObjectFactoryUtil: void clearThreadLocalMap()>();

        $r3 = virtualinvoke $r1.<twitter4j.internal.http.HttpResponse: java.lang.String asString()>();

        staticinvoke <twitter4j.internal.json.DataObjectFactoryUtil: java.lang.Object registerJSONObject(java.lang.Object,java.lang.Object)>($r0, $r3);

        return;

     label1:
        return;
    }

    static twitter4j.ResponseList createTrendsList(twitter4j.internal.http.HttpResponse, boolean) throws twitter4j.TwitterException
    {
        twitter4j.internal.http.HttpResponse $r0;
        boolean $z0, $z1;
        twitter4j.internal.org.json.JSONException $r1;
        twitter4j.internal.json.ResponseListImpl $r2;
        twitter4j.internal.org.json.JSONObject $r3, $r6;
        java.lang.String $r4;
        java.util.Date $r5, $r13;
        twitter4j.Location $r7;
        int $i0;
        java.util.Iterator $r8;
        java.lang.Object $r9;
        twitter4j.internal.org.json.JSONArray $r10;
        twitter4j.Trend[] $r11;
        twitter4j.internal.json.TrendsJSONImpl $r12;
        twitter4j.TwitterException $r14;
        java.lang.StringBuilder $r15;

        $r0 := @parameter0: twitter4j.internal.http.HttpResponse;

        $z0 := @parameter1: boolean;

        $r3 = virtualinvoke $r0.<twitter4j.internal.http.HttpResponse: twitter4j.internal.org.json.JSONObject asJSONObject()>();

     label1:
        $r4 = virtualinvoke $r3.<twitter4j.internal.org.json.JSONObject: java.lang.String getString(java.lang.String)>("as_of");

        $r5 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: java.util.Date parseTrendsDate(java.lang.String)>($r4);

        $r6 = virtualinvoke $r3.<twitter4j.internal.org.json.JSONObject: twitter4j.internal.org.json.JSONObject getJSONObject(java.lang.String)>("trends");

        $r7 = staticinvoke <twitter4j.internal.json.TrendsJSONImpl: twitter4j.Location extractLocation(twitter4j.internal.org.json.JSONObject,boolean)>($r3, $z0);

        $r2 = new twitter4j.internal.json.ResponseListImpl;

        $i0 = virtualinvoke $r6.<twitter4j.internal.org.json.JSONObject: int length()>();

        specialinvoke $r2.<twitter4j.internal.json.ResponseListImpl: void <init>(int,twitter4j.internal.http.HttpResponse)>($i0, $r0);

        $r8 = virtualinvoke $r6.<twitter4j.internal.org.json.JSONObject: java.util.Iterator keys()>();

     label2:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.String) $r9;

        $r10 = virtualinvoke $r6.<twitter4j.internal.org.json.JSONObject: twitter4j.internal.org.json.JSONArray getJSONArray(java.lang.String)>($r4);

        $r11 = staticinvoke <twitter4j.internal.json.TrendsJSONImpl: twitter4j.Trend[] jsonArrayToTrendArray(twitter4j.internal.org.json.JSONArray,boolean)>($r10, $z0);

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i0 != 19 goto label5;

        $r12 = new twitter4j.internal.json.TrendsJSONImpl;

        $r13 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: java.util.Date getDate(java.lang.String,java.lang.String)>($r4, "yyyy-MM-dd HH:mm:ss");

        specialinvoke $r12.<twitter4j.internal.json.TrendsJSONImpl: void <init>(java.util.Date,twitter4j.Location,java.util.Date,twitter4j.Trend[])>($r5, $r7, $r13, $r11);

        interfaceinvoke $r2.<twitter4j.ResponseList: boolean add(java.lang.Object)>($r12);

     label3:
        goto label2;

     label4:
        $r1 := @caughtexception;

        $r14 = new twitter4j.TwitterException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r1.<twitter4j.internal.org.json.JSONException: java.lang.String getMessage()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r4 = virtualinvoke $r0.<twitter4j.internal.http.HttpResponse: java.lang.String asString()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<twitter4j.TwitterException: void <init>(java.lang.String,java.lang.Throwable)>($r4, $r1);

        throw $r14;

     label5:
        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i0 != 16 goto label6;

        $r12 = new twitter4j.internal.json.TrendsJSONImpl;

        $r13 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: java.util.Date getDate(java.lang.String,java.lang.String)>($r4, "yyyy-MM-dd HH:mm");

        specialinvoke $r12.<twitter4j.internal.json.TrendsJSONImpl: void <init>(java.util.Date,twitter4j.Location,java.util.Date,twitter4j.Trend[])>($r5, $r7, $r13, $r11);

        interfaceinvoke $r2.<twitter4j.ResponseList: boolean add(java.lang.Object)>($r12);

        goto label2;

     label6:
        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i0 != 10 goto label2;

        $r12 = new twitter4j.internal.json.TrendsJSONImpl;

        $r13 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: java.util.Date getDate(java.lang.String,java.lang.String)>($r4, "yyyy-MM-dd");

        specialinvoke $r12.<twitter4j.internal.json.TrendsJSONImpl: void <init>(java.util.Date,twitter4j.Location,java.util.Date,twitter4j.Trend[])>($r5, $r7, $r13, $r11);

        interfaceinvoke $r2.<twitter4j.ResponseList: boolean add(java.lang.Object)>($r12);

        goto label2;

     label7:
        staticinvoke <java.util.Collections: void sort(java.util.List)>($r2);

     label8:
        return $r2;

        catch twitter4j.internal.org.json.JSONException from label1 to label3 with label4;
        catch twitter4j.internal.org.json.JSONException from label5 to label8 with label4;
    }

    private static twitter4j.Location extractLocation(twitter4j.internal.org.json.JSONObject, boolean) throws twitter4j.TwitterException
    {
        twitter4j.internal.org.json.JSONObject $r0;
        boolean $z0, $z1;
        twitter4j.internal.org.json.JSONException $r1;
        twitter4j.Location $r2;
        twitter4j.internal.org.json.JSONArray $r3;
        twitter4j.ResponseList $r4;
        int $i0;
        java.lang.Object $r5;
        java.lang.AssertionError $r6;

        $r0 := @parameter0: twitter4j.internal.org.json.JSONObject;

        $z0 := @parameter1: boolean;

        $z1 = virtualinvoke $r0.<twitter4j.internal.org.json.JSONObject: boolean isNull(java.lang.String)>("locations");

        if $z1 == 0 goto label1;

        return null;

     label1:
        $r3 = virtualinvoke $r0.<twitter4j.internal.org.json.JSONObject: twitter4j.internal.org.json.JSONArray getJSONArray(java.lang.String)>("locations");

        $r4 = staticinvoke <twitter4j.internal.json.LocationJSONImpl: twitter4j.ResponseList createLocationList(twitter4j.internal.org.json.JSONArray,boolean)>($r3, $z0);

     label2:
        $i0 = interfaceinvoke $r4.<twitter4j.ResponseList: int size()>();

        if $i0 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<twitter4j.ResponseList: java.lang.Object get(int)>(0);

        $r2 = (twitter4j.Location) $r5;

        return $r2;

     label3:
        $r1 := @caughtexception;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>("locations can\'t be null");

        throw $r6;

     label4:
        return null;

        catch twitter4j.internal.org.json.JSONException from label1 to label2 with label3;
    }

    private static twitter4j.Trend[] jsonArrayToTrendArray(twitter4j.internal.org.json.JSONArray, boolean) throws twitter4j.internal.org.json.JSONException
    {
        twitter4j.internal.org.json.JSONArray $r0;
        boolean $z0;
        int $i0, $i1;
        twitter4j.Trend[] $r1;
        twitter4j.internal.org.json.JSONObject $r2;
        twitter4j.internal.json.TrendJSONImpl $r3;

        $r0 := @parameter0: twitter4j.internal.org.json.JSONArray;

        $z0 := @parameter1: boolean;

        $i0 = virtualinvoke $r0.<twitter4j.internal.org.json.JSONArray: int length()>();

        $r1 = newarray (twitter4j.Trend)[$i0];

        $i0 = 0;

     label1:
        $i1 = virtualinvoke $r0.<twitter4j.internal.org.json.JSONArray: int length()>();

        if $i0 >= $i1 goto label2;

        $r2 = virtualinvoke $r0.<twitter4j.internal.org.json.JSONArray: twitter4j.internal.org.json.JSONObject getJSONObject(int)>($i0);

        $r3 = new twitter4j.internal.json.TrendJSONImpl;

        specialinvoke $r3.<twitter4j.internal.json.TrendJSONImpl: void <init>(twitter4j.internal.org.json.JSONObject,boolean)>($r2, $z0);

        $r1[$i0] = $r3;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public volatile int compareTo(java.lang.Object)
    {
        twitter4j.internal.json.TrendsJSONImpl $r0;
        java.lang.Object $r1;
        int $i0;
        twitter4j.Trends $r2;

        $r0 := @this: twitter4j.internal.json.TrendsJSONImpl;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (twitter4j.Trends) $r1;

        $i0 = virtualinvoke $r0.<twitter4j.internal.json.TrendsJSONImpl: int compareTo(twitter4j.Trends)>($r2);

        return $i0;
    }

    public int compareTo(twitter4j.Trends)
    {
        twitter4j.internal.json.TrendsJSONImpl $r0;
        twitter4j.Trends $r1;
        java.util.Date $r2, $r3;
        int $i0;

        $r0 := @this: twitter4j.internal.json.TrendsJSONImpl;

        $r1 := @parameter0: twitter4j.Trends;

        $r2 = $r0.<twitter4j.internal.json.TrendsJSONImpl: java.util.Date trendAt>;

        $r3 = interfaceinvoke $r1.<twitter4j.Trends: java.util.Date getTrendAt()>();

        $i0 = virtualinvoke $r2.<java.util.Date: int compareTo(java.util.Date)>($r3);

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        twitter4j.internal.json.TrendsJSONImpl $r0;
        java.lang.Object $r1;
        boolean $z0;
        java.util.Date $r2, $r4;
        twitter4j.Trends $r3;
        twitter4j.Trend[] $r5, $r6;

        $r0 := @this: twitter4j.internal.json.TrendsJSONImpl;

        $r1 := @parameter0: java.lang.Object;

        if $r0 != $r1 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof twitter4j.Trends;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r3 = (twitter4j.Trends) $r1;

        $r2 = $r0.<twitter4j.internal.json.TrendsJSONImpl: java.util.Date asOf>;

        if $r2 == null goto label4;

        $r4 = $r0.<twitter4j.internal.json.TrendsJSONImpl: java.util.Date asOf>;

        $r2 = interfaceinvoke $r3.<twitter4j.Trends: java.util.Date getAsOf()>();

        $z0 = virtualinvoke $r4.<java.util.Date: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label5;

     label3:
        return 0;

     label4:
        $r4 = interfaceinvoke $r3.<twitter4j.Trends: java.util.Date getAsOf()>();

        if $r4 != null goto label3;

     label5:
        $r4 = $r0.<twitter4j.internal.json.TrendsJSONImpl: java.util.Date trendAt>;

        if $r4 == null goto label7;

        $r4 = $r0.<twitter4j.internal.json.TrendsJSONImpl: java.util.Date trendAt>;

        $r2 = interfaceinvoke $r3.<twitter4j.Trends: java.util.Date getTrendAt()>();

        $z0 = virtualinvoke $r4.<java.util.Date: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label8;

     label6:
        return 0;

     label7:
        $r4 = interfaceinvoke $r3.<twitter4j.Trends: java.util.Date getTrendAt()>();

        if $r4 != null goto label6;

     label8:
        $r5 = $r0.<twitter4j.internal.json.TrendsJSONImpl: twitter4j.Trend[] trends>;

        $r6 = interfaceinvoke $r3.<twitter4j.Trends: twitter4j.Trend[] getTrends()>();

        $z0 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r5, $r6);

        if $z0 != 0 goto label9;

        return 0;

     label9:
        return 1;
    }

    public java.util.Date getAsOf()
    {
        twitter4j.internal.json.TrendsJSONImpl $r0;
        java.util.Date r1;

        $r0 := @this: twitter4j.internal.json.TrendsJSONImpl;

        r1 = $r0.<twitter4j.internal.json.TrendsJSONImpl: java.util.Date asOf>;

        return r1;
    }

    public twitter4j.Location getLocation()
    {
        twitter4j.internal.json.TrendsJSONImpl $r0;
        twitter4j.Location r1;

        $r0 := @this: twitter4j.internal.json.TrendsJSONImpl;

        r1 = $r0.<twitter4j.internal.json.TrendsJSONImpl: twitter4j.Location location>;

        return r1;
    }

    public java.util.Date getTrendAt()
    {
        twitter4j.internal.json.TrendsJSONImpl $r0;
        java.util.Date r1;

        $r0 := @this: twitter4j.internal.json.TrendsJSONImpl;

        r1 = $r0.<twitter4j.internal.json.TrendsJSONImpl: java.util.Date trendAt>;

        return r1;
    }

    public twitter4j.Trend[] getTrends()
    {
        twitter4j.internal.json.TrendsJSONImpl $r0;
        twitter4j.Trend[] r1;

        $r0 := @this: twitter4j.internal.json.TrendsJSONImpl;

        r1 = $r0.<twitter4j.internal.json.TrendsJSONImpl: twitter4j.Trend[] trends>;

        return r1;
    }

    public int hashCode()
    {
        twitter4j.internal.json.TrendsJSONImpl $r0;
        int $i0, $i1, $i2;
        java.util.Date $r1;
        twitter4j.Trend[] $r2;

        $r0 := @this: twitter4j.internal.json.TrendsJSONImpl;

        $i1 = 0;

        $r1 = $r0.<twitter4j.internal.json.TrendsJSONImpl: java.util.Date asOf>;

        if $r1 == null goto label4;

        $r1 = $r0.<twitter4j.internal.json.TrendsJSONImpl: java.util.Date asOf>;

        $i0 = virtualinvoke $r1.<java.util.Date: int hashCode()>();

     label1:
        $i0 = $i0 * 31;

        $r1 = $r0.<twitter4j.internal.json.TrendsJSONImpl: java.util.Date trendAt>;

        if $r1 == null goto label5;

        $r1 = $r0.<twitter4j.internal.json.TrendsJSONImpl: java.util.Date trendAt>;

        $i2 = virtualinvoke $r1.<java.util.Date: int hashCode()>();

     label2:
        $i2 = $i0 + $i2;

        $i2 = $i2 * 31;

        $r2 = $r0.<twitter4j.internal.json.TrendsJSONImpl: twitter4j.Trend[] trends>;

        if $r2 == null goto label3;

        $r2 = $r0.<twitter4j.internal.json.TrendsJSONImpl: twitter4j.Trend[] trends>;

        $i1 = staticinvoke <java.util.Arrays: int hashCode(java.lang.Object[])>($r2);

     label3:
        $i2 = $i2 + $i1;

        return $i2;

     label4:
        $i0 = 0;

        goto label1;

     label5:
        $i2 = 0;

        goto label2;
    }

    void init(java.lang.String, boolean) throws twitter4j.TwitterException
    {
        twitter4j.internal.json.TrendsJSONImpl $r0;
        java.lang.String $r1;
        boolean $z0, $z1;
        twitter4j.internal.org.json.JSONArray $r2;
        twitter4j.internal.org.json.JSONObject $r3;
        twitter4j.internal.org.json.JSONException $r4;
        int $i0;
        java.util.Date $r5;
        twitter4j.Location $r6;
        twitter4j.Trend[] $r7;
        twitter4j.TwitterException $r8;

        $r0 := @this: twitter4j.internal.json.TrendsJSONImpl;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

     label01:
        $z1 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("[");

     label02:
        if $z1 == 0 goto label11;

     label03:
        $r2 = new twitter4j.internal.org.json.JSONArray;

        specialinvoke $r2.<twitter4j.internal.org.json.JSONArray: void <init>(java.lang.String)>($r1);

        $i0 = virtualinvoke $r2.<twitter4j.internal.org.json.JSONArray: int length()>();

        if $i0 <= 0 goto label08;

        $r3 = virtualinvoke $r2.<twitter4j.internal.org.json.JSONArray: twitter4j.internal.org.json.JSONObject getJSONObject(int)>(0);

     label04:
        $r1 = virtualinvoke $r3.<twitter4j.internal.org.json.JSONObject: java.lang.String getString(java.lang.String)>("as_of");

        $r5 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: java.util.Date parseTrendsDate(java.lang.String)>($r1);

        $r0.<twitter4j.internal.json.TrendsJSONImpl: java.util.Date asOf> = $r5;

        $r6 = staticinvoke <twitter4j.internal.json.TrendsJSONImpl: twitter4j.Location extractLocation(twitter4j.internal.org.json.JSONObject,boolean)>($r3, $z0);

        $r0.<twitter4j.internal.json.TrendsJSONImpl: twitter4j.Location location> = $r6;

        $r2 = virtualinvoke $r3.<twitter4j.internal.org.json.JSONObject: twitter4j.internal.org.json.JSONArray getJSONArray(java.lang.String)>("trends");

     label05:
        $r5 = $r0.<twitter4j.internal.json.TrendsJSONImpl: java.util.Date asOf>;

     label06:
        $r0.<twitter4j.internal.json.TrendsJSONImpl: java.util.Date trendAt> = $r5;

        $r7 = staticinvoke <twitter4j.internal.json.TrendsJSONImpl: twitter4j.Trend[] jsonArrayToTrendArray(twitter4j.internal.org.json.JSONArray,boolean)>($r2, $z0);

     label07:
        $r0.<twitter4j.internal.json.TrendsJSONImpl: twitter4j.Trend[] trends> = $r7;

        return;

     label08:
        $r8 = new twitter4j.TwitterException;

        specialinvoke $r8.<twitter4j.TwitterException: void <init>(java.lang.String)>("No trends found on the specified woeid");

     label09:
        throw $r8;

     label10:
        $r4 := @caughtexception;

        $r8 = new twitter4j.TwitterException;

        $r1 = virtualinvoke $r4.<twitter4j.internal.org.json.JSONException: java.lang.String getMessage()>();

        specialinvoke $r8.<twitter4j.TwitterException: void <init>(java.lang.String,java.lang.Throwable)>($r1, $r4);

        throw $r8;

     label11:
        $r3 = new twitter4j.internal.org.json.JSONObject;

     label12:
        specialinvoke $r3.<twitter4j.internal.org.json.JSONObject: void <init>(java.lang.String)>($r1);

     label13:
        goto label04;

        catch twitter4j.internal.org.json.JSONException from label01 to label02 with label10;
        catch twitter4j.internal.org.json.JSONException from label03 to label05 with label10;
        catch twitter4j.internal.org.json.JSONException from label06 to label07 with label10;
        catch twitter4j.internal.org.json.JSONException from label08 to label09 with label10;
        catch twitter4j.internal.org.json.JSONException from label12 to label13 with label10;
    }

    public java.lang.String toString()
    {
        twitter4j.internal.json.TrendsJSONImpl $r0;
        java.lang.StringBuilder $r1;
        java.util.Date $r2;
        twitter4j.Trend[] $r3;
        java.util.List $r4;
        java.lang.String $r5;

        $r0 := @this: twitter4j.internal.json.TrendsJSONImpl;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TrendsJSONImpl{asOf=");

        $r2 = $r0.<twitter4j.internal.json.TrendsJSONImpl: java.util.Date asOf>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", trendAt=");

        $r2 = $r0.<twitter4j.internal.json.TrendsJSONImpl: java.util.Date trendAt>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", trends=");

        $r3 = $r0.<twitter4j.internal.json.TrendsJSONImpl: twitter4j.Trend[] trends>;

        if $r3 != null goto label2;

        $r4 = null;

     label1:
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;

     label2:
        $r3 = $r0.<twitter4j.internal.json.TrendsJSONImpl: twitter4j.Trend[] trends>;

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);

        goto label1;
    }

    public static void <clinit>()
    {
        <twitter4j.internal.json.TrendsJSONImpl: long serialVersionUID> = -7151479143843312309L;

        return;
    }
}
