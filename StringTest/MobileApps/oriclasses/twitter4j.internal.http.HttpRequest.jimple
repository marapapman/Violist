public final class twitter4j.internal.http.HttpRequest extends java.lang.Object implements java.io.Serializable
{
    private static final twitter4j.internal.http.HttpParameter[] NULL_PARAMETERS;
    private static final long serialVersionUID;
    private final twitter4j.auth.Authorization authorization;
    private final twitter4j.internal.http.RequestMethod method;
    private final twitter4j.internal.http.HttpParameter[] parameters;
    private java.util.Map requestHeaders;
    private final java.lang.String url;

    static void <clinit>()
    {
        twitter4j.internal.http.HttpParameter[] $r0;

        <twitter4j.internal.http.HttpRequest: long serialVersionUID> = -3463594029098858381L;

        $r0 = newarray (twitter4j.internal.http.HttpParameter)[0];

        <twitter4j.internal.http.HttpRequest: twitter4j.internal.http.HttpParameter[] NULL_PARAMETERS> = $r0;

        return;
    }

    public void <init>(twitter4j.internal.http.RequestMethod, java.lang.String, twitter4j.internal.http.HttpParameter[], twitter4j.auth.Authorization, java.util.Map)
    {
        twitter4j.internal.http.HttpRequest $r0;
        twitter4j.internal.http.RequestMethod $r1, $r6;
        java.lang.String $r2;
        twitter4j.internal.http.HttpParameter[] $r3;
        twitter4j.auth.Authorization $r4;
        java.util.Map $r5;
        java.lang.StringBuilder $r7;
        int $i0;

        $r0 := @this: twitter4j.internal.http.HttpRequest;

        $r1 := @parameter0: twitter4j.internal.http.RequestMethod;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: twitter4j.internal.http.HttpParameter[];

        $r4 := @parameter3: twitter4j.auth.Authorization;

        $r5 := @parameter4: java.util.Map;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<twitter4j.internal.http.HttpRequest: twitter4j.internal.http.RequestMethod method> = $r1;

        $r6 = <twitter4j.internal.http.RequestMethod: twitter4j.internal.http.RequestMethod POST>;

        if $r1 == $r6 goto label2;

        if $r3 == null goto label2;

        $i0 = lengthof $r3;

        if $i0 == 0 goto label2;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

        $r2 = staticinvoke <twitter4j.internal.http.HttpParameter: java.lang.String encodeParameters(twitter4j.internal.http.HttpParameter[])>($r3);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0.<twitter4j.internal.http.HttpRequest: java.lang.String url> = $r2;

        $r3 = <twitter4j.internal.http.HttpRequest: twitter4j.internal.http.HttpParameter[] NULL_PARAMETERS>;

        $r0.<twitter4j.internal.http.HttpRequest: twitter4j.internal.http.HttpParameter[] parameters> = $r3;

     label1:
        $r0.<twitter4j.internal.http.HttpRequest: twitter4j.auth.Authorization authorization> = $r4;

        $r0.<twitter4j.internal.http.HttpRequest: java.util.Map requestHeaders> = $r5;

        return;

     label2:
        $r0.<twitter4j.internal.http.HttpRequest: java.lang.String url> = $r2;

        $r0.<twitter4j.internal.http.HttpRequest: twitter4j.internal.http.HttpParameter[] parameters> = $r3;

        goto label1;
    }

    public boolean equals(java.lang.Object)
    {
        twitter4j.internal.http.HttpRequest $r0, $r4;
        java.lang.Object $r1;
        java.lang.Class $r2, $r3;
        twitter4j.auth.Authorization $r5, $r6;
        boolean $z0;
        twitter4j.internal.http.HttpParameter[] $r7, $r8;
        java.util.Map $r9, $r10;
        twitter4j.internal.http.RequestMethod $r11, $r12;
        java.lang.String $r13, $r14;

        $r0 := @this: twitter4j.internal.http.HttpRequest;

        $r1 := @parameter0: java.lang.Object;

        if $r0 != $r1 goto label01;

        return 1;

     label01:
        if $r1 == null goto label02;

        $r2 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label03;

     label02:
        return 0;

     label03:
        $r4 = (twitter4j.internal.http.HttpRequest) $r1;

        $r5 = $r0.<twitter4j.internal.http.HttpRequest: twitter4j.auth.Authorization authorization>;

        if $r5 == null goto label05;

        $r5 = $r0.<twitter4j.internal.http.HttpRequest: twitter4j.auth.Authorization authorization>;

        $r6 = $r4.<twitter4j.internal.http.HttpRequest: twitter4j.auth.Authorization authorization>;

        $z0 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label06;

     label04:
        return 0;

     label05:
        $r6 = $r4.<twitter4j.internal.http.HttpRequest: twitter4j.auth.Authorization authorization>;

        if $r6 != null goto label04;

     label06:
        $r7 = $r0.<twitter4j.internal.http.HttpRequest: twitter4j.internal.http.HttpParameter[] parameters>;

        $r8 = $r4.<twitter4j.internal.http.HttpRequest: twitter4j.internal.http.HttpParameter[] parameters>;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r7, $r8);

        if $z0 != 0 goto label07;

        return 0;

     label07:
        $r9 = $r0.<twitter4j.internal.http.HttpRequest: java.util.Map requestHeaders>;

        if $r9 == null goto label09;

        $r9 = $r0.<twitter4j.internal.http.HttpRequest: java.util.Map requestHeaders>;

        $r10 = $r4.<twitter4j.internal.http.HttpRequest: java.util.Map requestHeaders>;

        $z0 = interfaceinvoke $r9.<java.util.Map: boolean equals(java.lang.Object)>($r10);

        if $z0 != 0 goto label10;

     label08:
        return 0;

     label09:
        $r10 = $r4.<twitter4j.internal.http.HttpRequest: java.util.Map requestHeaders>;

        if $r10 != null goto label08;

     label10:
        $r11 = $r0.<twitter4j.internal.http.HttpRequest: twitter4j.internal.http.RequestMethod method>;

        if $r11 == null goto label12;

        $r11 = $r0.<twitter4j.internal.http.HttpRequest: twitter4j.internal.http.RequestMethod method>;

        $r12 = $r4.<twitter4j.internal.http.HttpRequest: twitter4j.internal.http.RequestMethod method>;

        $z0 = virtualinvoke $r11.<twitter4j.internal.http.RequestMethod: boolean equals(java.lang.Object)>($r12);

        if $z0 != 0 goto label13;

     label11:
        return 0;

     label12:
        $r12 = $r4.<twitter4j.internal.http.HttpRequest: twitter4j.internal.http.RequestMethod method>;

        if $r12 != null goto label11;

     label13:
        $r13 = $r0.<twitter4j.internal.http.HttpRequest: java.lang.String url>;

        if $r13 == null goto label15;

        $r13 = $r0.<twitter4j.internal.http.HttpRequest: java.lang.String url>;

        $r14 = $r4.<twitter4j.internal.http.HttpRequest: java.lang.String url>;

        $z0 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z0 != 0 goto label16;

     label14:
        return 0;

     label15:
        $r14 = $r4.<twitter4j.internal.http.HttpRequest: java.lang.String url>;

        if $r14 == null goto label17;

        goto label14;

     label16:
        return 1;

     label17:
        return 1;
    }

    public twitter4j.auth.Authorization getAuthorization()
    {
        twitter4j.internal.http.HttpRequest $r0;
        twitter4j.auth.Authorization r1;

        $r0 := @this: twitter4j.internal.http.HttpRequest;

        r1 = $r0.<twitter4j.internal.http.HttpRequest: twitter4j.auth.Authorization authorization>;

        return r1;
    }

    public twitter4j.internal.http.RequestMethod getMethod()
    {
        twitter4j.internal.http.HttpRequest $r0;
        twitter4j.internal.http.RequestMethod r1;

        $r0 := @this: twitter4j.internal.http.HttpRequest;

        r1 = $r0.<twitter4j.internal.http.HttpRequest: twitter4j.internal.http.RequestMethod method>;

        return r1;
    }

    public twitter4j.internal.http.HttpParameter[] getParameters()
    {
        twitter4j.internal.http.HttpRequest $r0;
        twitter4j.internal.http.HttpParameter[] r1;

        $r0 := @this: twitter4j.internal.http.HttpRequest;

        r1 = $r0.<twitter4j.internal.http.HttpRequest: twitter4j.internal.http.HttpParameter[] parameters>;

        return r1;
    }

    public java.util.Map getRequestHeaders()
    {
        twitter4j.internal.http.HttpRequest $r0;
        java.util.Map r1;

        $r0 := @this: twitter4j.internal.http.HttpRequest;

        r1 = $r0.<twitter4j.internal.http.HttpRequest: java.util.Map requestHeaders>;

        return r1;
    }

    public java.lang.String getURL()
    {
        twitter4j.internal.http.HttpRequest $r0;
        java.lang.String r1;

        $r0 := @this: twitter4j.internal.http.HttpRequest;

        r1 = $r0.<twitter4j.internal.http.HttpRequest: java.lang.String url>;

        return r1;
    }

    public int hashCode()
    {
        twitter4j.internal.http.HttpRequest $r0;
        int $i0, $i1, $i2;
        twitter4j.internal.http.RequestMethod $r1;
        java.lang.String $r2;
        twitter4j.internal.http.HttpParameter[] $r3;
        twitter4j.auth.Authorization $r4;
        java.util.Map $r5;

        $r0 := @this: twitter4j.internal.http.HttpRequest;

        $i1 = 0;

        $r1 = $r0.<twitter4j.internal.http.HttpRequest: twitter4j.internal.http.RequestMethod method>;

        if $r1 == null goto label6;

        $r1 = $r0.<twitter4j.internal.http.HttpRequest: twitter4j.internal.http.RequestMethod method>;

        $i0 = virtualinvoke $r1.<twitter4j.internal.http.RequestMethod: int hashCode()>();

     label1:
        $i0 = $i0 * 31;

        $r2 = $r0.<twitter4j.internal.http.HttpRequest: java.lang.String url>;

        if $r2 == null goto label7;

        $r2 = $r0.<twitter4j.internal.http.HttpRequest: java.lang.String url>;

        $i2 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

     label2:
        $i2 = $i0 + $i2;

        $i2 = $i2 * 31;

        $r3 = $r0.<twitter4j.internal.http.HttpRequest: twitter4j.internal.http.HttpParameter[] parameters>;

        if $r3 == null goto label8;

        $r3 = $r0.<twitter4j.internal.http.HttpRequest: twitter4j.internal.http.HttpParameter[] parameters>;

        $i0 = staticinvoke <java.util.Arrays: int hashCode(java.lang.Object[])>($r3);

     label3:
        $i2 = $i2 + $i0;

        $i2 = $i2 * 31;

        $r4 = $r0.<twitter4j.internal.http.HttpRequest: twitter4j.auth.Authorization authorization>;

        if $r4 == null goto label9;

        $r4 = $r0.<twitter4j.internal.http.HttpRequest: twitter4j.auth.Authorization authorization>;

        $i0 = virtualinvoke $r4.<java.lang.Object: int hashCode()>();

     label4:
        $i2 = $i2 + $i0;

        $i2 = $i2 * 31;

        $r5 = $r0.<twitter4j.internal.http.HttpRequest: java.util.Map requestHeaders>;

        if $r5 == null goto label5;

        $r5 = $r0.<twitter4j.internal.http.HttpRequest: java.util.Map requestHeaders>;

        $i1 = interfaceinvoke $r5.<java.util.Map: int hashCode()>();

     label5:
        $i2 = $i2 + $i1;

        return $i2;

     label6:
        $i0 = 0;

        goto label1;

     label7:
        $i2 = 0;

        goto label2;

     label8:
        $i0 = 0;

        goto label3;

     label9:
        $i0 = 0;

        goto label4;
    }

    public java.lang.String toString()
    {
        twitter4j.internal.http.HttpRequest $r0;
        java.lang.StringBuilder $r1;
        twitter4j.internal.http.RequestMethod $r2;
        java.lang.String $r3;
        twitter4j.internal.http.HttpParameter[] $r4;
        java.util.List $r5;
        twitter4j.auth.Authorization $r6;
        java.util.Map $r7;

        $r0 := @this: twitter4j.internal.http.HttpRequest;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("HttpRequest{requestMethod=");

        $r2 = $r0.<twitter4j.internal.http.HttpRequest: twitter4j.internal.http.RequestMethod method>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", url=\'");

        $r3 = $r0.<twitter4j.internal.http.HttpRequest: java.lang.String url>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", postParams=");

        $r4 = $r0.<twitter4j.internal.http.HttpRequest: twitter4j.internal.http.HttpParameter[] parameters>;

        if $r4 != null goto label2;

        $r5 = null;

     label1:
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", authentication=");

        $r6 = $r0.<twitter4j.internal.http.HttpRequest: twitter4j.auth.Authorization authorization>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", requestHeaders=");

        $r7 = $r0.<twitter4j.internal.http.HttpRequest: java.util.Map requestHeaders>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

     label2:
        $r4 = $r0.<twitter4j.internal.http.HttpRequest: twitter4j.internal.http.HttpParameter[] parameters>;

        $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4);

        goto label1;
    }
}
