public class com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache extends com.nostra13.universalimageloader.cache.memory.LimitedMemoryCache
{
    private static final int INITIAL_CAPACITY;
    private static final float LOAD_FACTOR;
    private final java.util.Map lruCache;

    public void <init>(int)
    {
        com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache $r0;
        int $i0;
        java.util.LinkedHashMap $r1;
        java.util.Map $r2;

        $r0 := @this: com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache;

        $i0 := @parameter0: int;

        specialinvoke $r0.<com.nostra13.universalimageloader.cache.memory.LimitedMemoryCache: void <init>(int)>($i0);

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>(int,float,boolean)>(10, 1.1F, 1);

        $r2 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r1);

        $r0.<com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache: java.util.Map lruCache> = $r2;

        return;
    }

    public void clear()
    {
        com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache $r0;
        java.util.Map $r1;

        $r0 := @this: com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache;

        $r1 = $r0.<com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache: java.util.Map lruCache>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        specialinvoke $r0.<com.nostra13.universalimageloader.cache.memory.LimitedMemoryCache: void clear()>();

        return;
    }

    protected java.lang.ref.Reference createReference(android.graphics.Bitmap)
    {
        com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache $r0;
        android.graphics.Bitmap $r1;
        java.lang.ref.WeakReference $r2;

        $r0 := @this: com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache;

        $r1 := @parameter0: android.graphics.Bitmap;

        $r2 = new java.lang.ref.WeakReference;

        specialinvoke $r2.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r1);

        return $r2;
    }

    protected volatile java.lang.ref.Reference createReference(java.lang.Object)
    {
        com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache $r0;
        java.lang.Object $r1;
        java.lang.ref.Reference $r2;
        android.graphics.Bitmap $r3;

        $r0 := @this: com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache;

        $r1 := @parameter0: java.lang.Object;

        $r3 = (android.graphics.Bitmap) $r1;

        $r2 = virtualinvoke $r0.<com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache: java.lang.ref.Reference createReference(android.graphics.Bitmap)>($r3);

        return $r2;
    }

    public android.graphics.Bitmap get(java.lang.String)
    {
        com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache $r0;
        java.lang.String $r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        android.graphics.Bitmap $r4;

        $r0 := @this: com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache: java.util.Map lruCache>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r3 = specialinvoke $r0.<com.nostra13.universalimageloader.cache.memory.LimitedMemoryCache: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (android.graphics.Bitmap) $r3;

        return $r4;
    }

    public volatile java.lang.Object get(java.lang.Object)
    {
        com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache $r0;
        java.lang.Object $r1;
        android.graphics.Bitmap $r2;
        java.lang.String $r3;

        $r0 := @this: com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache;

        $r1 := @parameter0: java.lang.Object;

        $r3 = (java.lang.String) $r1;

        $r2 = virtualinvoke $r0.<com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache: android.graphics.Bitmap get(java.lang.String)>($r3);

        return $r2;
    }

    protected int getSize(android.graphics.Bitmap)
    {
        com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache $r0;
        android.graphics.Bitmap $r1;
        int $i0, $i1;

        $r0 := @this: com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache;

        $r1 := @parameter0: android.graphics.Bitmap;

        $i0 = virtualinvoke $r1.<android.graphics.Bitmap: int getRowBytes()>();

        $i1 = virtualinvoke $r1.<android.graphics.Bitmap: int getHeight()>();

        $i1 = $i0 * $i1;

        return $i1;
    }

    protected volatile int getSize(java.lang.Object)
    {
        com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache $r0;
        java.lang.Object $r1;
        int $i0;
        android.graphics.Bitmap $r2;

        $r0 := @this: com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (android.graphics.Bitmap) $r1;

        $i0 = virtualinvoke $r0.<com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache: int getSize(android.graphics.Bitmap)>($r2);

        return $i0;
    }

    public volatile boolean put(java.lang.Object, java.lang.Object)
    {
        com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache $r0;
        java.lang.Object $r1, $r2;
        boolean $z0;
        java.lang.String $r3;
        android.graphics.Bitmap $r4;

        $r0 := @this: com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.String) $r1;

        $r4 = (android.graphics.Bitmap) $r2;

        $z0 = virtualinvoke $r0.<com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache: boolean put(java.lang.String,android.graphics.Bitmap)>($r3, $r4);

        return $z0;
    }

    public boolean put(java.lang.String, android.graphics.Bitmap)
    {
        com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache $r0;
        java.lang.String $r1;
        android.graphics.Bitmap $r2;
        boolean $z0;
        java.util.Map $r3;

        $r0 := @this: com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.graphics.Bitmap;

        $z0 = specialinvoke $r0.<com.nostra13.universalimageloader.cache.memory.LimitedMemoryCache: boolean put(java.lang.Object,java.lang.Object)>($r1, $r2);

        if $z0 == 0 goto label1;

        $r3 = $r0.<com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache: java.util.Map lruCache>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return 1;

     label1:
        return 0;
    }

    public volatile void remove(java.lang.Object)
    {
        com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache $r0;
        java.lang.Object $r1;
        java.lang.String $r2;

        $r0 := @this: com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.String) $r1;

        virtualinvoke $r0.<com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache: void remove(java.lang.String)>($r2);

        return;
    }

    public void remove(java.lang.String)
    {
        com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache $r0;
        java.lang.String $r1;
        java.util.Map $r2;

        $r0 := @this: com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache: java.util.Map lruCache>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r1);

        specialinvoke $r0.<com.nostra13.universalimageloader.cache.memory.LimitedMemoryCache: void remove(java.lang.Object)>($r1);

        return;
    }

    protected android.graphics.Bitmap removeNext()
    {
        com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache $r0;
        android.graphics.Bitmap $r1;
        java.util.Map $r2, $r3;
        java.util.Set $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;
        java.util.Map$Entry $r7;
        java.lang.Throwable $r8;

        $r0 := @this: com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache;

        $r1 = null;

        $r3 = $r0.<com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache: java.util.Map lruCache>;

        entermonitor $r3;

     label1:
        $r2 = $r0.<com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache: java.util.Map lruCache>;

        $r4 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.util.Map$Entry) $r6;

        $r6 = interfaceinvoke $r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r1 = (android.graphics.Bitmap) $r6;

        interfaceinvoke $r5.<java.util.Iterator: void remove()>();

     label2:
        exitmonitor $r3;

     label3:
        return $r1;

     label4:
        $r8 := @caughtexception;

        exitmonitor $r3;

     label5:
        throw $r8;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    protected volatile java.lang.Object removeNext()
    {
        com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache $r0;
        android.graphics.Bitmap $r1;

        $r0 := @this: com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache;

        $r1 = virtualinvoke $r0.<com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache: android.graphics.Bitmap removeNext()>();

        return $r1;
    }

    public static void <clinit>()
    {
        <com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache: float LOAD_FACTOR> = 1.1F;

        <com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache: int INITIAL_CAPACITY> = 10;

        return;
    }
}
