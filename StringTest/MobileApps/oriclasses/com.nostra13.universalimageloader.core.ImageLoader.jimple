public class com.nostra13.universalimageloader.core.ImageLoader extends java.lang.Object
{
    private static final java.lang.String ERROR_INIT_CONFIG_WITH_NULL;
    private static final java.lang.String ERROR_NOT_INIT;
    private static final java.lang.String ERROR_WRONG_ARGUMENTS;
    private static final java.lang.String LOG_LOAD_IMAGE_FROM_MEMORY_CACHE;
    public static final java.lang.String TAG;
    private static volatile com.nostra13.universalimageloader.core.ImageLoader instance;
    private final java.util.Map cacheKeysForImageViews;
    private java.util.concurrent.ExecutorService cachedImageLoadingExecutor;
    private com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration;
    private final com.nostra13.universalimageloader.core.assist.ImageLoadingListener emptyListener;
    private final com.nostra13.universalimageloader.core.display.BitmapDisplayer fakeBitmapDisplayer;
    private java.util.concurrent.ExecutorService imageLoadingExecutor;
    private final java.util.concurrent.atomic.AtomicBoolean paused;
    private final java.util.Map uriLocks;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        <com.nostra13.universalimageloader.core.ImageLoader: java.lang.String LOG_LOAD_IMAGE_FROM_MEMORY_CACHE> = "Load image from memory cache [%s]";

        <com.nostra13.universalimageloader.core.ImageLoader: java.lang.String ERROR_WRONG_ARGUMENTS> = "Wrong arguments were passed to displayImage() method (ImageView reference are required)";

        <com.nostra13.universalimageloader.core.ImageLoader: java.lang.String ERROR_NOT_INIT> = "ImageLoader must be init with configuration before using";

        <com.nostra13.universalimageloader.core.ImageLoader: java.lang.String ERROR_INIT_CONFIG_WITH_NULL> = "ImageLoader configuration can not be initialized with null";

        $r0 = class "com/nostra13/universalimageloader/core/ImageLoader";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.nostra13.universalimageloader.core.ImageLoader: java.lang.String TAG> = $r1;

        return;
    }

    protected void <init>()
    {
        com.nostra13.universalimageloader.core.ImageLoader $r0;
        com.nostra13.universalimageloader.core.assist.SimpleImageLoadingListener $r1;
        java.util.Map $r2;
        com.nostra13.universalimageloader.core.display.FakeBitmapDisplayer $r3;
        java.util.HashMap $r4;
        java.util.WeakHashMap $r5;
        java.util.concurrent.atomic.AtomicBoolean $r6;

        $r0 := @this: com.nostra13.universalimageloader.core.ImageLoader;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new com.nostra13.universalimageloader.core.assist.SimpleImageLoadingListener;

        specialinvoke $r1.<com.nostra13.universalimageloader.core.assist.SimpleImageLoadingListener: void <init>()>();

        $r0.<com.nostra13.universalimageloader.core.ImageLoader: com.nostra13.universalimageloader.core.assist.ImageLoadingListener emptyListener> = $r1;

        $r3 = new com.nostra13.universalimageloader.core.display.FakeBitmapDisplayer;

        specialinvoke $r3.<com.nostra13.universalimageloader.core.display.FakeBitmapDisplayer: void <init>()>();

        $r0.<com.nostra13.universalimageloader.core.ImageLoader: com.nostra13.universalimageloader.core.display.BitmapDisplayer fakeBitmapDisplayer> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        $r2 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r4);

        $r0.<com.nostra13.universalimageloader.core.ImageLoader: java.util.Map cacheKeysForImageViews> = $r2;

        $r5 = new java.util.WeakHashMap;

        specialinvoke $r5.<java.util.WeakHashMap: void <init>()>();

        $r0.<com.nostra13.universalimageloader.core.ImageLoader: java.util.Map uriLocks> = $r5;

        $r6 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r6.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        $r0.<com.nostra13.universalimageloader.core.ImageLoader: java.util.concurrent.atomic.AtomicBoolean paused> = $r6;

        return;
    }

    private java.util.concurrent.ExecutorService createExecutor()
    {
        com.nostra13.universalimageloader.core.ImageLoader $r0;
        com.nostra13.universalimageloader.core.ImageLoaderConfiguration $r1;
        com.nostra13.universalimageloader.core.assist.QueueProcessingType $r2, $r5;
        java.util.concurrent.TimeUnit $r3;
        java.io.Serializable $r4;
        boolean $z0;
        java.util.concurrent.BlockingQueue $r6;
        int $i0, $i1;
        java.util.concurrent.ThreadFactory $r8;
        com.nostra13.universalimageloader.core.assist.deque.LIFOLinkedBlockingDeque r9;
        java.util.concurrent.ThreadPoolExecutor r10;
        java.util.concurrent.LinkedBlockingQueue r11;

        $r0 := @this: com.nostra13.universalimageloader.core.ImageLoader;

        $r1 = $r0.<com.nostra13.universalimageloader.core.ImageLoader: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration>;

        $r5 = $r1.<com.nostra13.universalimageloader.core.ImageLoaderConfiguration: com.nostra13.universalimageloader.core.assist.QueueProcessingType tasksProcessingType>;

        $r2 = <com.nostra13.universalimageloader.core.assist.QueueProcessingType: com.nostra13.universalimageloader.core.assist.QueueProcessingType LIFO>;

        if $r5 != $r2 goto label3;

        $z0 = 1;

     label1:
        if $z0 == 0 goto label4;

        r9 = new com.nostra13.universalimageloader.core.assist.deque.LIFOLinkedBlockingDeque;

        $r4 = r9;

        specialinvoke r9.<com.nostra13.universalimageloader.core.assist.deque.LIFOLinkedBlockingDeque: void <init>()>();

     label2:
        $r6 = (java.util.concurrent.BlockingQueue) $r4;

        r10 = new java.util.concurrent.ThreadPoolExecutor;

        $r1 = $r0.<com.nostra13.universalimageloader.core.ImageLoader: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration>;

        $i0 = $r1.<com.nostra13.universalimageloader.core.ImageLoaderConfiguration: int threadPoolSize>;

        $r1 = $r0.<com.nostra13.universalimageloader.core.ImageLoader: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration>;

        $i1 = $r1.<com.nostra13.universalimageloader.core.ImageLoaderConfiguration: int threadPoolSize>;

        $r3 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        $r1 = $r0.<com.nostra13.universalimageloader.core.ImageLoader: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration>;

        $r8 = $r1.<com.nostra13.universalimageloader.core.ImageLoaderConfiguration: java.util.concurrent.ThreadFactory displayImageThreadFactory>;

        specialinvoke r10.<java.util.concurrent.ThreadPoolExecutor: void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory)>($i0, $i1, 0L, $r3, $r6, $r8);

        return r10;

     label3:
        $z0 = 0;

        goto label1;

     label4:
        r11 = new java.util.concurrent.LinkedBlockingQueue;

        $r4 = r11;

        specialinvoke r11.<java.util.concurrent.LinkedBlockingQueue: void <init>()>();

        goto label2;
    }

    private int getFieldValue(java.lang.Object, java.lang.String)
    {
        com.nostra13.universalimageloader.core.ImageLoader $r0;
        java.lang.Object $r1;
        java.lang.String $r2;
        java.lang.Exception $r3;
        java.lang.Class $r4;
        java.lang.reflect.Field $r5;
        java.lang.Integer $r6;
        int $i0;

        $r0 := @this: com.nostra13.universalimageloader.core.ImageLoader;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.String;

        $r4 = class "android/widget/ImageView";

     label1:
        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>($r2);

        virtualinvoke $r5.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        $r1 = virtualinvoke $r5.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r1);

        $r6 = (java.lang.Integer) $r1;

        $i0 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

     label2:
        if $i0 <= 0 goto label4;

        if $i0 >= 2147483647 goto label5;

        return $i0;

     label3:
        $r3 := @caughtexception;

        staticinvoke <com.nostra13.universalimageloader.utils.L: void e(java.lang.Throwable)>($r3);

        return 0;

     label4:
        return 0;

     label5:
        return 0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private com.nostra13.universalimageloader.core.assist.ImageSize getImageSizeScaleTo(android.widget.ImageView)
    {
        com.nostra13.universalimageloader.core.ImageLoader $r0;
        android.widget.ImageView $r1;
        int $i0, $i1;
        android.content.Context $r2;
        android.content.res.Resources $r3;
        android.util.DisplayMetrics $r4;
        android.view.ViewGroup$LayoutParams $r5;
        com.nostra13.universalimageloader.core.ImageLoaderConfiguration $r6;
        com.nostra13.universalimageloader.core.assist.ImageSize $r7;

        $r0 := @this: com.nostra13.universalimageloader.core.ImageLoader;

        $r1 := @parameter0: android.widget.ImageView;

        $r2 = virtualinvoke $r1.<android.widget.ImageView: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        $r4 = virtualinvoke $r3.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $r5 = virtualinvoke $r1.<android.widget.ImageView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $i1 = $r5.<android.view.ViewGroup$LayoutParams: int width>;

        if $i1 > 0 goto label1;

        $i1 = specialinvoke $r0.<com.nostra13.universalimageloader.core.ImageLoader: int getFieldValue(java.lang.Object,java.lang.String)>($r1, "mMaxWidth");

     label1:
        if $i1 > 0 goto label2;

        $r6 = $r0.<com.nostra13.universalimageloader.core.ImageLoader: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration>;

        $i1 = $r6.<com.nostra13.universalimageloader.core.ImageLoaderConfiguration: int maxImageWidthForMemoryCache>;

     label2:
        if $i1 > 0 goto label3;

        $i1 = $r4.<android.util.DisplayMetrics: int widthPixels>;

     label3:
        $i0 = $r5.<android.view.ViewGroup$LayoutParams: int height>;

        if $i0 > 0 goto label4;

        $i0 = specialinvoke $r0.<com.nostra13.universalimageloader.core.ImageLoader: int getFieldValue(java.lang.Object,java.lang.String)>($r1, "mMaxHeight");

     label4:
        if $i0 > 0 goto label5;

        $r6 = $r0.<com.nostra13.universalimageloader.core.ImageLoader: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration>;

        $i0 = $r6.<com.nostra13.universalimageloader.core.ImageLoaderConfiguration: int maxImageHeightForMemoryCache>;

     label5:
        if $i0 > 0 goto label6;

        $i0 = $r4.<android.util.DisplayMetrics: int heightPixels>;

     label6:
        $r7 = new com.nostra13.universalimageloader.core.assist.ImageSize;

        specialinvoke $r7.<com.nostra13.universalimageloader.core.assist.ImageSize: void <init>(int,int)>($i1, $i0);

        return $r7;
    }

    public static com.nostra13.universalimageloader.core.ImageLoader getInstance()
    {
        com.nostra13.universalimageloader.core.ImageLoader $r0;
        java.lang.Throwable $r1;

        $r0 = <com.nostra13.universalimageloader.core.ImageLoader: com.nostra13.universalimageloader.core.ImageLoader instance>;

        if $r0 != null goto label3;

        entermonitor class "com/nostra13/universalimageloader/core/ImageLoader";

     label1:
        $r0 = <com.nostra13.universalimageloader.core.ImageLoader: com.nostra13.universalimageloader.core.ImageLoader instance>;

        if $r0 != null goto label2;

        $r0 = new com.nostra13.universalimageloader.core.ImageLoader;

        specialinvoke $r0.<com.nostra13.universalimageloader.core.ImageLoader: void <init>()>();

        <com.nostra13.universalimageloader.core.ImageLoader: com.nostra13.universalimageloader.core.ImageLoader instance> = $r0;

     label2:
        exitmonitor class "com/nostra13/universalimageloader/core/ImageLoader";

     label3:
        $r0 = <com.nostra13.universalimageloader.core.ImageLoader: com.nostra13.universalimageloader.core.ImageLoader instance>;

        return $r0;

     label4:
        $r1 := @caughtexception;

     label5:
        exitmonitor class "com/nostra13/universalimageloader/core/ImageLoader";

     label6:
        throw $r1;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private java.util.concurrent.locks.ReentrantLock getLockForUri(java.lang.String)
    {
        com.nostra13.universalimageloader.core.ImageLoader $r0;
        java.lang.String $r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.util.concurrent.locks.ReentrantLock $r4;

        $r0 := @this: com.nostra13.universalimageloader.core.ImageLoader;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.nostra13.universalimageloader.core.ImageLoader: java.util.Map uriLocks>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (java.util.concurrent.locks.ReentrantLock) $r3;

        if $r4 != null goto label1;

        $r4 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r4.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        $r2 = $r0.<com.nostra13.universalimageloader.core.ImageLoader: java.util.Map uriLocks>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r4);

        return $r4;

     label1:
        return $r4;
    }

    private void initExecutorsIfNeed()
    {
        com.nostra13.universalimageloader.core.ImageLoader $r0;
        java.util.concurrent.ExecutorService $r1;
        boolean $z0;

        $r0 := @this: com.nostra13.universalimageloader.core.ImageLoader;

        $r1 = $r0.<com.nostra13.universalimageloader.core.ImageLoader: java.util.concurrent.ExecutorService imageLoadingExecutor>;

        if $r1 == null goto label1;

        $r1 = $r0.<com.nostra13.universalimageloader.core.ImageLoader: java.util.concurrent.ExecutorService imageLoadingExecutor>;

        $z0 = interfaceinvoke $r1.<java.util.concurrent.ExecutorService: boolean isShutdown()>();

        if $z0 == 0 goto label2;

     label1:
        $r1 = specialinvoke $r0.<com.nostra13.universalimageloader.core.ImageLoader: java.util.concurrent.ExecutorService createExecutor()>();

        $r0.<com.nostra13.universalimageloader.core.ImageLoader: java.util.concurrent.ExecutorService imageLoadingExecutor> = $r1;

     label2:
        $r1 = $r0.<com.nostra13.universalimageloader.core.ImageLoader: java.util.concurrent.ExecutorService cachedImageLoadingExecutor>;

        if $r1 == null goto label3;

        $r1 = $r0.<com.nostra13.universalimageloader.core.ImageLoader: java.util.concurrent.ExecutorService cachedImageLoadingExecutor>;

        $z0 = interfaceinvoke $r1.<java.util.concurrent.ExecutorService: boolean isShutdown()>();

        if $z0 == 0 goto label4;

     label3:
        $r1 = specialinvoke $r0.<com.nostra13.universalimageloader.core.ImageLoader: java.util.concurrent.ExecutorService createExecutor()>();

        $r0.<com.nostra13.universalimageloader.core.ImageLoader: java.util.concurrent.ExecutorService cachedImageLoadingExecutor> = $r1;

        return;

     label4:
        return;
    }

    public void cancelDisplayTask(android.widget.ImageView)
    {
        com.nostra13.universalimageloader.core.ImageLoader $r0;
        android.widget.ImageView $r1;
        java.util.Map $r2;
        int $i0;
        java.lang.Integer $r3;

        $r0 := @this: com.nostra13.universalimageloader.core.ImageLoader;

        $r1 := @parameter0: android.widget.ImageView;

        $r2 = $r0.<com.nostra13.universalimageloader.core.ImageLoader: java.util.Map cacheKeysForImageViews>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r3);

        return;
    }

    public void clearDiscCache()
    {
        com.nostra13.universalimageloader.core.ImageLoader $r0;
        com.nostra13.universalimageloader.core.ImageLoaderConfiguration $r1;
        com.nostra13.universalimageloader.cache.disc.DiscCacheAware $r2;

        $r0 := @this: com.nostra13.universalimageloader.core.ImageLoader;

        $r1 = $r0.<com.nostra13.universalimageloader.core.ImageLoader: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration>;

        if $r1 == null goto label1;

        $r1 = $r0.<com.nostra13.universalimageloader.core.ImageLoader: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration>;

        $r2 = $r1.<com.nostra13.universalimageloader.core.ImageLoaderConfiguration: com.nostra13.universalimageloader.cache.disc.DiscCacheAware discCache>;

        interfaceinvoke $r2.<com.nostra13.universalimageloader.cache.disc.DiscCacheAware: void clear()>();

        return;

     label1:
        return;
    }

    public void clearMemoryCache()
    {
        com.nostra13.universalimageloader.core.ImageLoader $r0;
        com.nostra13.universalimageloader.core.ImageLoaderConfiguration $r1;
        com.nostra13.universalimageloader.cache.memory.MemoryCacheAware $r2;

        $r0 := @this: com.nostra13.universalimageloader.core.ImageLoader;

        $r1 = $r0.<com.nostra13.universalimageloader.core.ImageLoader: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration>;

        if $r1 == null goto label1;

        $r1 = $r0.<com.nostra13.universalimageloader.core.ImageLoader: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration>;

        $r2 = $r1.<com.nostra13.universalimageloader.core.ImageLoaderConfiguration: com.nostra13.universalimageloader.cache.memory.MemoryCacheAware memoryCache>;

        interfaceinvoke $r2.<com.nostra13.universalimageloader.cache.memory.MemoryCacheAware: void clear()>();

        return;

     label1:
        return;
    }

    public void displayImage(java.lang.String, android.widget.ImageView)
    {
        com.nostra13.universalimageloader.core.ImageLoader $r0;
        java.lang.String $r1;
        android.widget.ImageView $r2;

        $r0 := @this: com.nostra13.universalimageloader.core.ImageLoader;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.widget.ImageView;

        virtualinvoke $r0.<com.nostra13.universalimageloader.core.ImageLoader: void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.assist.ImageLoadingListener)>($r1, $r2, null, null);

        return;
    }

    public void displayImage(java.lang.String, android.widget.ImageView, com.nostra13.universalimageloader.core.DisplayImageOptions)
    {
        com.nostra13.universalimageloader.core.ImageLoader $r0;
        java.lang.String $r1;
        android.widget.ImageView $r2;
        com.nostra13.universalimageloader.core.DisplayImageOptions $r3;

        $r0 := @this: com.nostra13.universalimageloader.core.ImageLoader;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.widget.ImageView;

        $r3 := @parameter2: com.nostra13.universalimageloader.core.DisplayImageOptions;

        virtualinvoke $r0.<com.nostra13.universalimageloader.core.ImageLoader: void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.assist.ImageLoadingListener)>($r1, $r2, $r3, null);

        return;
    }

    public void displayImage(java.lang.String, android.widget.ImageView, com.nostra13.universalimageloader.core.DisplayImageOptions, com.nostra13.universalimageloader.core.assist.ImageLoadingListener)
    {
        com.nostra13.universalimageloader.core.ImageLoader $r0;
        java.lang.String $r1, $r13;
        android.widget.ImageView $r2;
        com.nostra13.universalimageloader.core.DisplayImageOptions $r3;
        com.nostra13.universalimageloader.core.assist.ImageLoadingListener $r4;
        com.nostra13.universalimageloader.core.ImageLoadingInfo $r5;
        com.nostra13.universalimageloader.core.ImageLoaderConfiguration $r6;
        com.nostra13.universalimageloader.core.LoadAndDisplayImageTask $r7;
        int $i0;
        java.lang.RuntimeException $r8;
        java.lang.Object[] $r9;
        java.util.Map $r10;
        java.lang.Integer $r11;
        boolean $z0;
        com.nostra13.universalimageloader.core.assist.ImageSize $r12;
        com.nostra13.universalimageloader.cache.memory.MemoryCacheAware $r14;
        java.lang.Object $r15;
        android.graphics.Bitmap $r16;
        com.nostra13.universalimageloader.core.display.BitmapDisplayer $r17;
        java.util.concurrent.locks.ReentrantLock $r18;
        android.os.Handler $r19;
        com.nostra13.universalimageloader.cache.disc.DiscCacheAware $r20;
        java.io.File $r21;
        java.util.concurrent.ExecutorService $r22;

        $r0 := @this: com.nostra13.universalimageloader.core.ImageLoader;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.widget.ImageView;

        $r3 := @parameter2: com.nostra13.universalimageloader.core.DisplayImageOptions;

        $r4 := @parameter3: com.nostra13.universalimageloader.core.assist.ImageLoadingListener;

        $r6 = $r0.<com.nostra13.universalimageloader.core.ImageLoader: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration>;

        if $r6 != null goto label01;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>("ImageLoader must be init with configuration before using");

        throw $r8;

     label01:
        if $r2 != null goto label02;

        $r1 = <com.nostra13.universalimageloader.core.ImageLoader: java.lang.String TAG>;

        $r9 = newarray (java.lang.Object)[1];

        $r9[0] = "Wrong arguments were passed to displayImage() method (ImageView reference are required)";

        staticinvoke <com.nostra13.universalimageloader.utils.L: void w(java.lang.String,java.lang.Object[])>($r1, $r9);

        return;

     label02:
        if $r4 != null goto label03;

        $r4 = $r0.<com.nostra13.universalimageloader.core.ImageLoader: com.nostra13.universalimageloader.core.assist.ImageLoadingListener emptyListener>;

     label03:
        if $r3 != null goto label04;

        $r6 = $r0.<com.nostra13.universalimageloader.core.ImageLoader: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration>;

        $r3 = $r6.<com.nostra13.universalimageloader.core.ImageLoaderConfiguration: com.nostra13.universalimageloader.core.DisplayImageOptions defaultDisplayImageOptions>;

     label04:
        if $r1 == null goto label05;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label08;

     label05:
        $r10 = $r0.<com.nostra13.universalimageloader.core.ImageLoader: java.util.Map cacheKeysForImageViews>;

        $i0 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r10.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r11);

        interfaceinvoke $r4.<com.nostra13.universalimageloader.core.assist.ImageLoadingListener: void onLoadingStarted()>();

        $z0 = virtualinvoke $r3.<com.nostra13.universalimageloader.core.DisplayImageOptions: boolean isShowImageForEmptyUri()>();

        if $z0 == 0 goto label07;

        $r11 = virtualinvoke $r3.<com.nostra13.universalimageloader.core.DisplayImageOptions: java.lang.Integer getImageForEmptyUri()>();

        $i0 = virtualinvoke $r11.<java.lang.Integer: int intValue()>();

        virtualinvoke $r2.<android.widget.ImageView: void setImageResource(int)>($i0);

     label06:
        interfaceinvoke $r4.<com.nostra13.universalimageloader.core.assist.ImageLoadingListener: void onLoadingComplete(android.graphics.Bitmap)>(null);

        return;

     label07:
        virtualinvoke $r2.<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>(null);

        goto label06;

     label08:
        $r12 = specialinvoke $r0.<com.nostra13.universalimageloader.core.ImageLoader: com.nostra13.universalimageloader.core.assist.ImageSize getImageSizeScaleTo(android.widget.ImageView)>($r2);

        $r13 = staticinvoke <com.nostra13.universalimageloader.core.assist.MemoryCacheUtil: java.lang.String generateKey(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize)>($r1, $r12);

        $r10 = $r0.<com.nostra13.universalimageloader.core.ImageLoader: java.util.Map cacheKeysForImageViews>;

        $i0 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r13);

        $r6 = $r0.<com.nostra13.universalimageloader.core.ImageLoader: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration>;

        $r14 = $r6.<com.nostra13.universalimageloader.core.ImageLoaderConfiguration: com.nostra13.universalimageloader.cache.memory.MemoryCacheAware memoryCache>;

        $r15 = interfaceinvoke $r14.<com.nostra13.universalimageloader.cache.memory.MemoryCacheAware: java.lang.Object get(java.lang.Object)>($r13);

        $r16 = (android.graphics.Bitmap) $r15;

        if $r16 == null goto label10;

        $z0 = virtualinvoke $r16.<android.graphics.Bitmap: boolean isRecycled()>();

        if $z0 != 0 goto label10;

        $r6 = $r0.<com.nostra13.universalimageloader.core.ImageLoader: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration>;

        $z0 = $r6.<com.nostra13.universalimageloader.core.ImageLoaderConfiguration: boolean loggingEnabled>;

        if $z0 == 0 goto label09;

        $r9 = newarray (java.lang.Object)[1];

        $r9[0] = $r13;

        staticinvoke <com.nostra13.universalimageloader.utils.L: void i(java.lang.String,java.lang.Object[])>("Load image from memory cache [%s]", $r9);

     label09:
        interfaceinvoke $r4.<com.nostra13.universalimageloader.core.assist.ImageLoadingListener: void onLoadingStarted()>();

        $r17 = virtualinvoke $r3.<com.nostra13.universalimageloader.core.DisplayImageOptions: com.nostra13.universalimageloader.core.display.BitmapDisplayer getDisplayer()>();

        interfaceinvoke $r17.<com.nostra13.universalimageloader.core.display.BitmapDisplayer: android.graphics.Bitmap display(android.graphics.Bitmap,android.widget.ImageView)>($r16, $r2);

        interfaceinvoke $r4.<com.nostra13.universalimageloader.core.assist.ImageLoadingListener: void onLoadingComplete(android.graphics.Bitmap)>($r16);

        return;

     label10:
        interfaceinvoke $r4.<com.nostra13.universalimageloader.core.assist.ImageLoadingListener: void onLoadingStarted()>();

        $z0 = virtualinvoke $r3.<com.nostra13.universalimageloader.core.DisplayImageOptions: boolean isShowStubImage()>();

        if $z0 == 0 goto label12;

        $r11 = virtualinvoke $r3.<com.nostra13.universalimageloader.core.DisplayImageOptions: java.lang.Integer getStubImage()>();

        $i0 = virtualinvoke $r11.<java.lang.Integer: int intValue()>();

        virtualinvoke $r2.<android.widget.ImageView: void setImageResource(int)>($i0);

     label11:
        specialinvoke $r0.<com.nostra13.universalimageloader.core.ImageLoader: void initExecutorsIfNeed()>();

        $r5 = new com.nostra13.universalimageloader.core.ImageLoadingInfo;

        $r18 = specialinvoke $r0.<com.nostra13.universalimageloader.core.ImageLoader: java.util.concurrent.locks.ReentrantLock getLockForUri(java.lang.String)>($r1);

        specialinvoke $r5.<com.nostra13.universalimageloader.core.ImageLoadingInfo: void <init>(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.assist.ImageLoadingListener,java.util.concurrent.locks.ReentrantLock)>($r1, $r2, $r12, $r3, $r4, $r18);

        $r7 = new com.nostra13.universalimageloader.core.LoadAndDisplayImageTask;

        $r6 = $r0.<com.nostra13.universalimageloader.core.ImageLoader: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration>;

        $r19 = new android.os.Handler;

        specialinvoke $r19.<android.os.Handler: void <init>()>();

        specialinvoke $r7.<com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: void <init>(com.nostra13.universalimageloader.core.ImageLoaderConfiguration,com.nostra13.universalimageloader.core.ImageLoadingInfo,android.os.Handler)>($r6, $r5, $r19);

        $r6 = $r0.<com.nostra13.universalimageloader.core.ImageLoader: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration>;

        $r20 = $r6.<com.nostra13.universalimageloader.core.ImageLoaderConfiguration: com.nostra13.universalimageloader.cache.disc.DiscCacheAware discCache>;

        $r21 = interfaceinvoke $r20.<com.nostra13.universalimageloader.cache.disc.DiscCacheAware: java.io.File get(java.lang.String)>($r1);

        $z0 = virtualinvoke $r21.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label13;

        $r22 = $r0.<com.nostra13.universalimageloader.core.ImageLoader: java.util.concurrent.ExecutorService cachedImageLoadingExecutor>;

        interfaceinvoke $r22.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r7);

        return;

     label12:
        $z0 = virtualinvoke $r3.<com.nostra13.universalimageloader.core.DisplayImageOptions: boolean isResetViewBeforeLoading()>();

        if $z0 == 0 goto label11;

        virtualinvoke $r2.<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>(null);

        goto label11;

     label13:
        $r22 = $r0.<com.nostra13.universalimageloader.core.ImageLoader: java.util.concurrent.ExecutorService imageLoadingExecutor>;

        interfaceinvoke $r22.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r7);

        return;
    }

    public void displayImage(java.lang.String, android.widget.ImageView, com.nostra13.universalimageloader.core.assist.ImageLoadingListener)
    {
        com.nostra13.universalimageloader.core.ImageLoader $r0;
        java.lang.String $r1;
        android.widget.ImageView $r2;
        com.nostra13.universalimageloader.core.assist.ImageLoadingListener $r3;

        $r0 := @this: com.nostra13.universalimageloader.core.ImageLoader;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.widget.ImageView;

        $r3 := @parameter2: com.nostra13.universalimageloader.core.assist.ImageLoadingListener;

        virtualinvoke $r0.<com.nostra13.universalimageloader.core.ImageLoader: void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.assist.ImageLoadingListener)>($r1, $r2, null, $r3);

        return;
    }

    public com.nostra13.universalimageloader.cache.disc.DiscCacheAware getDiscCache()
    {
        com.nostra13.universalimageloader.core.ImageLoader $r0;
        com.nostra13.universalimageloader.core.ImageLoaderConfiguration $r1;
        com.nostra13.universalimageloader.cache.disc.DiscCacheAware r2;

        $r0 := @this: com.nostra13.universalimageloader.core.ImageLoader;

        $r1 = $r0.<com.nostra13.universalimageloader.core.ImageLoader: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration>;

        r2 = $r1.<com.nostra13.universalimageloader.core.ImageLoaderConfiguration: com.nostra13.universalimageloader.cache.disc.DiscCacheAware discCache>;

        return r2;
    }

    public java.lang.String getLoadingUriForView(android.widget.ImageView)
    {
        com.nostra13.universalimageloader.core.ImageLoader $r0;
        android.widget.ImageView $r1;
        java.util.Map $r2;
        int $i0;
        java.lang.Integer $r3;
        java.lang.Object $r4;
        java.lang.String $r5;

        $r0 := @this: com.nostra13.universalimageloader.core.ImageLoader;

        $r1 := @parameter0: android.widget.ImageView;

        $r2 = $r0.<com.nostra13.universalimageloader.core.ImageLoader: java.util.Map cacheKeysForImageViews>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r5 = (java.lang.String) $r4;

        return $r5;
    }

    public com.nostra13.universalimageloader.cache.memory.MemoryCacheAware getMemoryCache()
    {
        com.nostra13.universalimageloader.core.ImageLoader $r0;
        com.nostra13.universalimageloader.core.ImageLoaderConfiguration $r1;
        com.nostra13.universalimageloader.cache.memory.MemoryCacheAware r2;

        $r0 := @this: com.nostra13.universalimageloader.core.ImageLoader;

        $r1 = $r0.<com.nostra13.universalimageloader.core.ImageLoader: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration>;

        r2 = $r1.<com.nostra13.universalimageloader.core.ImageLoaderConfiguration: com.nostra13.universalimageloader.cache.memory.MemoryCacheAware memoryCache>;

        return r2;
    }

    java.util.concurrent.atomic.AtomicBoolean getPause()
    {
        com.nostra13.universalimageloader.core.ImageLoader $r0;
        java.util.concurrent.atomic.AtomicBoolean r1;

        $r0 := @this: com.nostra13.universalimageloader.core.ImageLoader;

        r1 = $r0.<com.nostra13.universalimageloader.core.ImageLoader: java.util.concurrent.atomic.AtomicBoolean paused>;

        return r1;
    }

    public void init(com.nostra13.universalimageloader.core.ImageLoaderConfiguration)
    {
        com.nostra13.universalimageloader.core.ImageLoader $r0;
        com.nostra13.universalimageloader.core.ImageLoaderConfiguration $r1, $r4;
        java.lang.IllegalArgumentException $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.nostra13.universalimageloader.core.ImageLoader;

        $r1 := @parameter0: com.nostra13.universalimageloader.core.ImageLoaderConfiguration;

        entermonitor $r0;

        if $r1 != null goto label3;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ImageLoader configuration can not be initialized with null");

        throw $r2;

     label2:
        $r3 := @caughtexception;

        exitmonitor $r0;

        throw $r3;

     label3:
        $r4 = $r0.<com.nostra13.universalimageloader.core.ImageLoader: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration>;

        if $r4 != null goto label4;

        $r0.<com.nostra13.universalimageloader.core.ImageLoader: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration> = $r1;

     label4:
        exitmonitor $r0;

        return;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public void loadImage(android.content.Context, java.lang.String, com.nostra13.universalimageloader.core.DisplayImageOptions, com.nostra13.universalimageloader.core.assist.ImageLoadingListener)
    {
        com.nostra13.universalimageloader.core.ImageLoader $r0;
        android.content.Context $r1;
        java.lang.String $r2;
        com.nostra13.universalimageloader.core.DisplayImageOptions $r3;
        com.nostra13.universalimageloader.core.assist.ImageLoadingListener $r4;

        $r0 := @this: com.nostra13.universalimageloader.core.ImageLoader;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: com.nostra13.universalimageloader.core.DisplayImageOptions;

        $r4 := @parameter3: com.nostra13.universalimageloader.core.assist.ImageLoadingListener;

        virtualinvoke $r0.<com.nostra13.universalimageloader.core.ImageLoader: void loadImage(android.content.Context,java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.assist.ImageLoadingListener)>($r1, $r2, null, $r3, $r4);

        return;
    }

    public void loadImage(android.content.Context, java.lang.String, com.nostra13.universalimageloader.core.assist.ImageLoadingListener)
    {
        com.nostra13.universalimageloader.core.ImageLoader $r0;
        android.content.Context $r1;
        java.lang.String $r2;
        com.nostra13.universalimageloader.core.assist.ImageLoadingListener $r3;

        $r0 := @this: com.nostra13.universalimageloader.core.ImageLoader;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: com.nostra13.universalimageloader.core.assist.ImageLoadingListener;

        virtualinvoke $r0.<com.nostra13.universalimageloader.core.ImageLoader: void loadImage(android.content.Context,java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.assist.ImageLoadingListener)>($r1, $r2, null, null, $r3);

        return;
    }

    public void loadImage(android.content.Context, java.lang.String, com.nostra13.universalimageloader.core.assist.ImageSize, com.nostra13.universalimageloader.core.DisplayImageOptions, com.nostra13.universalimageloader.core.assist.ImageLoadingListener)
    {
        com.nostra13.universalimageloader.core.ImageLoader $r0;
        android.content.Context $r1;
        java.lang.String $r2;
        com.nostra13.universalimageloader.core.assist.ImageSize $r3;
        com.nostra13.universalimageloader.core.DisplayImageOptions $r4;
        com.nostra13.universalimageloader.core.assist.ImageLoadingListener $r5;
        android.widget.ImageView $r6;
        com.nostra13.universalimageloader.core.ImageLoaderConfiguration $r7;
        com.nostra13.universalimageloader.core.display.BitmapDisplayer $r8;
        int $i0, $i1;
        boolean $z0;
        android.view.ViewGroup$LayoutParams $r9;
        android.widget.ImageView$ScaleType $r10;
        com.nostra13.universalimageloader.core.DisplayImageOptions$Builder $r11;

        $r0 := @this: com.nostra13.universalimageloader.core.ImageLoader;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: com.nostra13.universalimageloader.core.assist.ImageSize;

        $r4 := @parameter3: com.nostra13.universalimageloader.core.DisplayImageOptions;

        $r5 := @parameter4: com.nostra13.universalimageloader.core.assist.ImageLoadingListener;

        if $r3 != null goto label1;

        $r3 = new com.nostra13.universalimageloader.core.assist.ImageSize;

        $r7 = $r0.<com.nostra13.universalimageloader.core.ImageLoader: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration>;

        $i0 = $r7.<com.nostra13.universalimageloader.core.ImageLoaderConfiguration: int maxImageWidthForMemoryCache>;

        $r7 = $r0.<com.nostra13.universalimageloader.core.ImageLoader: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration>;

        $i1 = $r7.<com.nostra13.universalimageloader.core.ImageLoaderConfiguration: int maxImageHeightForMemoryCache>;

        specialinvoke $r3.<com.nostra13.universalimageloader.core.assist.ImageSize: void <init>(int,int)>($i0, $i1);

     label1:
        if $r4 != null goto label2;

        $r7 = $r0.<com.nostra13.universalimageloader.core.ImageLoader: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration>;

        $r4 = $r7.<com.nostra13.universalimageloader.core.ImageLoaderConfiguration: com.nostra13.universalimageloader.core.DisplayImageOptions defaultDisplayImageOptions>;

     label2:
        $r8 = virtualinvoke $r4.<com.nostra13.universalimageloader.core.DisplayImageOptions: com.nostra13.universalimageloader.core.display.BitmapDisplayer getDisplayer()>();

        $z0 = $r8 instanceof com.nostra13.universalimageloader.core.display.FakeBitmapDisplayer;

        if $z0 == 0 goto label4;

     label3:
        $r6 = new android.widget.ImageView;

        specialinvoke $r6.<android.widget.ImageView: void <init>(android.content.Context)>($r1);

        $r9 = new android.view.ViewGroup$LayoutParams;

        $i1 = virtualinvoke $r3.<com.nostra13.universalimageloader.core.assist.ImageSize: int getWidth()>();

        $i0 = virtualinvoke $r3.<com.nostra13.universalimageloader.core.assist.ImageSize: int getHeight()>();

        specialinvoke $r9.<android.view.ViewGroup$LayoutParams: void <init>(int,int)>($i1, $i0);

        virtualinvoke $r6.<android.widget.ImageView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r9);

        $r10 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType CENTER_CROP>;

        virtualinvoke $r6.<android.widget.ImageView: void setScaleType(android.widget.ImageView$ScaleType)>($r10);

        virtualinvoke $r0.<com.nostra13.universalimageloader.core.ImageLoader: void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.assist.ImageLoadingListener)>($r2, $r6, $r4, $r5);

        return;

     label4:
        $r11 = new com.nostra13.universalimageloader.core.DisplayImageOptions$Builder;

        specialinvoke $r11.<com.nostra13.universalimageloader.core.DisplayImageOptions$Builder: void <init>()>();

        $r11 = virtualinvoke $r11.<com.nostra13.universalimageloader.core.DisplayImageOptions$Builder: com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cloneFrom(com.nostra13.universalimageloader.core.DisplayImageOptions)>($r4);

        $r8 = $r0.<com.nostra13.universalimageloader.core.ImageLoader: com.nostra13.universalimageloader.core.display.BitmapDisplayer fakeBitmapDisplayer>;

        $r11 = virtualinvoke $r11.<com.nostra13.universalimageloader.core.DisplayImageOptions$Builder: com.nostra13.universalimageloader.core.DisplayImageOptions$Builder displayer(com.nostra13.universalimageloader.core.display.BitmapDisplayer)>($r8);

        $r4 = virtualinvoke $r11.<com.nostra13.universalimageloader.core.DisplayImageOptions$Builder: com.nostra13.universalimageloader.core.DisplayImageOptions build()>();

        goto label3;
    }

    public void loadImage(android.content.Context, java.lang.String, com.nostra13.universalimageloader.core.assist.ImageSize, com.nostra13.universalimageloader.core.assist.ImageLoadingListener)
    {
        com.nostra13.universalimageloader.core.ImageLoader $r0;
        android.content.Context $r1;
        java.lang.String $r2;
        com.nostra13.universalimageloader.core.assist.ImageSize $r3;
        com.nostra13.universalimageloader.core.assist.ImageLoadingListener $r4;

        $r0 := @this: com.nostra13.universalimageloader.core.ImageLoader;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: com.nostra13.universalimageloader.core.assist.ImageSize;

        $r4 := @parameter3: com.nostra13.universalimageloader.core.assist.ImageLoadingListener;

        virtualinvoke $r0.<com.nostra13.universalimageloader.core.ImageLoader: void loadImage(android.content.Context,java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.assist.ImageLoadingListener)>($r1, $r2, $r3, null, $r4);

        return;
    }

    public void pause()
    {
        com.nostra13.universalimageloader.core.ImageLoader $r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;

        $r0 := @this: com.nostra13.universalimageloader.core.ImageLoader;

        $r1 = $r0.<com.nostra13.universalimageloader.core.ImageLoader: java.util.concurrent.atomic.AtomicBoolean paused>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        return;
    }

    public void resume()
    {
        com.nostra13.universalimageloader.core.ImageLoader $r0;
        java.util.concurrent.atomic.AtomicBoolean $r1, $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.nostra13.universalimageloader.core.ImageLoader;

        $r2 = $r0.<com.nostra13.universalimageloader.core.ImageLoader: java.util.concurrent.atomic.AtomicBoolean paused>;

        entermonitor $r2;

     label1:
        $r1 = $r0.<com.nostra13.universalimageloader.core.ImageLoader: java.util.concurrent.atomic.AtomicBoolean paused>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        $r1 = $r0.<com.nostra13.universalimageloader.core.ImageLoader: java.util.concurrent.atomic.AtomicBoolean paused>;

        virtualinvoke $r1.<java.lang.Object: void notifyAll()>();

        exitmonitor $r2;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void stop()
    {
        com.nostra13.universalimageloader.core.ImageLoader $r0;
        java.util.concurrent.ExecutorService $r1;

        $r0 := @this: com.nostra13.universalimageloader.core.ImageLoader;

        $r1 = $r0.<com.nostra13.universalimageloader.core.ImageLoader: java.util.concurrent.ExecutorService imageLoadingExecutor>;

        if $r1 == null goto label1;

        $r1 = $r0.<com.nostra13.universalimageloader.core.ImageLoader: java.util.concurrent.ExecutorService imageLoadingExecutor>;

        interfaceinvoke $r1.<java.util.concurrent.ExecutorService: java.util.List shutdownNow()>();

     label1:
        $r1 = $r0.<com.nostra13.universalimageloader.core.ImageLoader: java.util.concurrent.ExecutorService cachedImageLoadingExecutor>;

        if $r1 == null goto label2;

        $r1 = $r0.<com.nostra13.universalimageloader.core.ImageLoader: java.util.concurrent.ExecutorService cachedImageLoadingExecutor>;

        interfaceinvoke $r1.<java.util.concurrent.ExecutorService: java.util.List shutdownNow()>();

        return;

     label2:
        return;
    }
}
