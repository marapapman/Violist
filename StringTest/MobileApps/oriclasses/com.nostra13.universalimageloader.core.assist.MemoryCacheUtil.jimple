public final class com.nostra13.universalimageloader.core.assist.MemoryCacheUtil extends java.lang.Object
{
    private static final java.lang.String MEMORY_CACHE_KEY_FORMAT;
    private static final java.lang.String URI_AND_SIZE_SEPARATOR;

    private void <init>()
    {
        com.nostra13.universalimageloader.core.assist.MemoryCacheUtil $r0;

        $r0 := @this: com.nostra13.universalimageloader.core.assist.MemoryCacheUtil;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.util.Comparator createFuzzyKeyComparator()
    {
        com.nostra13.universalimageloader.core.assist.MemoryCacheUtil$1 $r0;

        $r0 = new com.nostra13.universalimageloader.core.assist.MemoryCacheUtil$1;

        specialinvoke $r0.<com.nostra13.universalimageloader.core.assist.MemoryCacheUtil$1: void <init>()>();

        return $r0;
    }

    public static java.util.List findCacheKeysForImageUri(java.lang.String, com.nostra13.universalimageloader.cache.memory.MemoryCacheAware)
    {
        java.lang.String $r0, $r6;
        com.nostra13.universalimageloader.cache.memory.MemoryCacheAware $r1;
        java.util.ArrayList $r2;
        java.util.Collection $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: com.nostra13.universalimageloader.cache.memory.MemoryCacheAware;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = interfaceinvoke $r1.<com.nostra13.universalimageloader.cache.memory.MemoryCacheAware: java.util.Collection keys()>();

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.lang.String) $r5;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>($r0);

        if $z0 == 0 goto label1;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label1;

     label2:
        return $r2;
    }

    public static java.util.List findCachedBitmapsForImageUri(java.lang.String, com.nostra13.universalimageloader.cache.memory.MemoryCacheAware)
    {
        java.lang.String $r0, $r6;
        com.nostra13.universalimageloader.cache.memory.MemoryCacheAware $r1;
        java.util.ArrayList $r2;
        java.util.Collection $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: com.nostra13.universalimageloader.cache.memory.MemoryCacheAware;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = interfaceinvoke $r1.<com.nostra13.universalimageloader.cache.memory.MemoryCacheAware: java.util.Collection keys()>();

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.lang.String) $r5;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>($r0);

        if $z0 == 0 goto label1;

        $r5 = interfaceinvoke $r1.<com.nostra13.universalimageloader.cache.memory.MemoryCacheAware: java.lang.Object get(java.lang.Object)>($r6);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r5);

        goto label1;

     label2:
        return $r2;
    }

    public static java.lang.String generateKey(java.lang.String, com.nostra13.universalimageloader.core.assist.ImageSize)
    {
        java.lang.String $r0;
        com.nostra13.universalimageloader.core.assist.ImageSize $r1;
        int $i0;
        java.lang.Object[] $r2;
        java.lang.Integer $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: com.nostra13.universalimageloader.core.assist.ImageSize;

        $r2 = newarray (java.lang.Object)[3];

        $r2[0] = $r0;

        $i0 = virtualinvoke $r1.<com.nostra13.universalimageloader.core.assist.ImageSize: int getWidth()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2[1] = $r3;

        $i0 = virtualinvoke $r1.<com.nostra13.universalimageloader.core.assist.ImageSize: int getHeight()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2[2] = $r3;

        $r0 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%1$s_%2$dx%3$d", $r2);

        return $r0;
    }

    public static void removeFromCache(java.lang.String, com.nostra13.universalimageloader.cache.memory.MemoryCacheAware)
    {
        java.lang.String $r0, $r6;
        com.nostra13.universalimageloader.cache.memory.MemoryCacheAware $r1;
        java.util.ArrayList $r2;
        java.util.Collection $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: com.nostra13.universalimageloader.cache.memory.MemoryCacheAware;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = interfaceinvoke $r1.<com.nostra13.universalimageloader.cache.memory.MemoryCacheAware: java.util.Collection keys()>();

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.lang.String) $r5;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>($r0);

        if $z0 == 0 goto label1;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label1;

     label2:
        $r4 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.lang.String) $r5;

        interfaceinvoke $r1.<com.nostra13.universalimageloader.cache.memory.MemoryCacheAware: void remove(java.lang.Object)>($r6);

        goto label3;

     label4:
        return;
    }

    public static void <clinit>()
    {
        <com.nostra13.universalimageloader.core.assist.MemoryCacheUtil: java.lang.String URI_AND_SIZE_SEPARATOR> = "_";

        <com.nostra13.universalimageloader.core.assist.MemoryCacheUtil: java.lang.String MEMORY_CACHE_KEY_FORMAT> = "%1$s_%2$dx%3$d";

        return;
    }
}
